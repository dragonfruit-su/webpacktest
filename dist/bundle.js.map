{"version":3,"file":"bundle.js","mappings":"UAAIA,E,8BCoBJ,SAASC,IACP,MAA4C,oBAA9BC,6BAA+CA,yBAC/D,CAKA,SAASC,IAEP,MAAO,KACT,C,6FClBA,SAASC,IAGP,QACG,UACgF,qBAAjFC,OAAOC,UAAUC,SAASC,KAAwB,oBAAZC,QAA0BA,QAAU,EAE9E,CAQA,SAASC,EAAeC,EAAKC,GAE3B,OAAOD,EAAIE,QAAQD,EACrB,C,mGC1BA,MAAME,GAAS,UAaTC,EAAsB,CAC1BC,WAAY,IAAMC,KAAKC,MAAQ,KAiE3BC,GAAsB,UAZ5B,WACE,IAEE,OADkB,QAAeC,EAAQ,cACxBC,WAGnB,CAFE,MAAOC,GACP,MACF,CACF,CAK0CC,GAnD1C,WACE,MAAM,YAAEF,GAAgBP,EACxB,GAAKO,GAAgBA,EAAYH,IA2BjC,MAAO,CACLA,IAAK,IAAMG,EAAYH,MACvBM,WAJiBP,KAAKC,MAAQG,EAAYH,MAM9C,CAkBiEO,GAE3DC,OACoBC,IAAxBR,EACIJ,EACA,CACEC,WAAY,KAAOG,EAAoBK,WAAaL,EAAoBD,OAAS,KAMnFU,EAAyBb,EAAoBC,WAAWa,KAAKd,GAa7De,EAAqBJ,EAAgBV,WAAWa,KAAKH,GAkB3D,IAAIK,EAMiC,MAKnC,MAAM,YAAEV,GAAgBP,EACxB,IAAKO,IAAgBA,EAAYH,IAE/B,YADAa,EAAoC,QAItC,MAAMC,EAAY,KACZC,EAAiBZ,EAAYH,MAC7BgB,EAAUjB,KAAKC,MAGfiB,EAAkBd,EAAYG,WAChCY,KAAKC,IAAIhB,EAAYG,WAAaS,EAAiBC,GACnDF,EACEM,EAAuBH,EAAkBH,EAQzCO,EAAkBlB,EAAYmB,QAAUnB,EAAYmB,OAAOD,gBAG3DE,EAFgD,iBAApBF,EAEgBH,KAAKC,IAAIE,EAAkBN,EAAiBC,GAAWF,EAGrGM,GAF8BG,EAAuBT,EAInDG,GAAmBM,GACrBV,EAAoC,aAC7BV,EAAYG,YAEnBO,EAAoC,kBAMxCA,EAAoC,SAErC,EA/CoC,E,6BCzGrC,SAASW,EAAYC,GACnB,OAAOA,GAAOA,EAAIP,MAAQA,KAAOO,OAAMhB,CACzC,C,oCAGA,MAAMiB,EACkB,iBAAdC,YAA0BH,EAAYG,aAE5B,iBAAVC,QAAsBJ,EAAYI,SAC1B,iBAARC,MAAoBL,EAAYK,OACtB,iBAAV,EAAAC,GAAsBN,EAAY,EAAAM,IAC1C,WACE,OAAOC,IACR,CAFD,IAGA,CAAC,EAKH,SAASC,IACP,OAAON,CACT,CAaA,SAASO,EAAmBC,EAAMC,EAASV,GACzC,MAAMW,EAAOX,GAAOC,EACdW,EAAcD,EAAIC,WAAaD,EAAIC,YAAc,CAAC,EAExD,OADkBA,EAAWH,KAAUG,EAAWH,GAAQC,IAE5D,C,GCjEIG,EAA2B,CAAC,EAGhC,SAASC,EAAoBC,GAE5B,IAAIC,EAAeH,EAAyBE,GAC5C,QAAqB/B,IAAjBgC,EACH,OAAOA,EAAaC,QAGrB,IAAIxC,EAASoC,EAAyBE,GAAY,CACjDG,GAAIH,EACJI,QAAQ,EACRF,QAAS,CAAC,GAUX,OANAG,EAAoBL,GAAUtC,EAAQA,EAAOwC,QAASH,GAGtDrC,EAAO0C,QAAS,EAGT1C,EAAOwC,OACf,CCxBAH,EAAoBO,EAAI,CAACJ,EAASK,KACjC,IAAI,IAAIC,KAAOD,EACXR,EAAoBU,EAAEF,EAAYC,KAAST,EAAoBU,EAAEP,EAASM,IAC5E7D,OAAO+D,eAAeR,EAASM,EAAK,CAAEG,YAAY,EAAMC,IAAKL,EAAWC,IAE1E,ECNDT,EAAoBT,EAAI,WACvB,GAA0B,iBAAfH,WAAyB,OAAOA,WAC3C,IACC,OAAOI,MAAQ,IAAIsB,SAAS,cAAb,EAGhB,CAFE,MAAOC,GACR,GAAsB,iBAAX1B,OAAqB,OAAOA,MACxC,CACA,CAPuB,GCAxBW,EAAoBgB,IAAOrD,KAC1BA,EAASf,OAAOqE,OAAOtD,IACXuD,WAAUvD,EAAOuD,SAAW,IACxCtE,OAAO+D,eAAehD,EAAQ,UAAW,CACxCiD,YAAY,EACZO,IAAK,KACJ,MAAM,IAAIC,MAAM,0FAA4FzD,EAAOyC,GAAG,IAGjHzC,GCTRqC,EAAoBU,EAAI,CAACxB,EAAKmC,IAAUzE,OAAOC,UAAUyE,eAAevE,KAAKmC,EAAKmC,ITA9E9E,EAA6B,oBAAX8C,OAAyBA,YAA2B,IAAX,EAAAE,EAAyB,EAAAA,EAAyB,oBAATD,KAAuBA,KAAO,CAAC,GAAYiC,eAAe,CAACnB,GAAG,iBAChK7D,EAAQiF,gBAAgBjF,EAAQiF,iBAAmB,CAAC,EACpDjF,EAAQiF,gBAAgB,sCAAsC,CAACpB,GAAG,iB,gCUCxE,MAEMqB,EAAiB,CAAC,QAAS,OAAQ,OAAQ,QAAS,MAAO,SAAU,SAQ3E,SAASC,EAAeC,GACtB,KAAM,kBACJ,OAAOA,IAGT,MAAMC,EAAkB,aAClBC,EAAgB,CAAC,EAGvBJ,EAAeK,SAAQC,IAErB,MAAMC,EACJJ,EAAgBG,IAAWH,EAAgBG,GAASE,oBAClDF,KAASH,GAAmBI,IAC9BH,EAAcE,GAASH,EAAgBG,GACvCH,EAAgBG,GAASC,EAC3B,IAGF,IACE,OAAOL,GAMT,CALE,QAEA/E,OAAOsF,KAAKL,GAAeC,SAAQC,IACjCH,EAAgBG,GAASF,EAAcE,EAAO,GAElD,CACF,CAEA,SAASI,IACP,IAAIC,GAAU,EACd,MAAMC,EAAS,CACbC,OAAQ,KACNF,GAAU,CAAI,EAEhBG,QAAS,KACPH,GAAU,CAAK,GAqBnB,MAjBiC,oBAArBI,kBAAoCA,iBAC9Cf,EAAeK,SAAQnC,IAErB0C,EAAO1C,GAAQ,IAAI8C,KACbL,GACFV,GAAe,KACb,aAAmB/B,GAAM,kBAAaA,SAAa8C,EAAK,GAE5D,CACD,IAGHhB,EAAeK,SAAQnC,IACrB0C,EAAO1C,GAAQ,KAAe,KAI3B0C,CACT,CAGA,IAAI,EAEF,EAD+B,oBAArBG,kBAAoCA,kBACrC,QAAmB,SAAUL,GAE7BA,IC7EX,MAAMO,EAAiB9F,OAAOC,UAAUC,SASxC,SAAS6F,EAAQC,GACf,OAAQF,EAAe3F,KAAK6F,IAC1B,IAAK,iBACL,IAAK,qBACL,IAAK,wBACH,OAAO,EACT,QACE,OAAOC,EAAaD,EAAKxB,OAE/B,CAQA,SAAS0B,EAAUF,EAAKG,GACtB,OAAOL,EAAe3F,KAAK6F,KAAS,WAAWG,IACjD,CASA,SAASC,EAAaJ,GACpB,OAAOE,EAAUF,EAAK,aACxB,CASA,SAASK,EAAWL,GAClB,OAAOE,EAAUF,EAAK,WACxB,CAoBA,SAASM,EAASN,GAChB,OAAOE,EAAUF,EAAK,SACxB,CASA,SAAS,EAAYA,GACnB,OAAe,OAARA,GAAgC,iBAARA,GAAmC,mBAARA,CAC5D,CASA,SAASO,EAAcP,GACrB,OAAOE,EAAUF,EAAK,SACxB,CASA,SAASQ,EAAQR,GACf,MAAwB,oBAAVS,OAAyBR,EAAaD,EAAKS,MAC3D,CA4BA,SAASC,EAAWV,GAElB,OAAOW,QAAQX,GAAOA,EAAIY,MAA4B,mBAAbZ,EAAIY,KAC/C,CAgCA,SAASX,EAAaD,EAAKa,GACzB,IACE,OAAOb,aAAea,CAGxB,CAFE,MAAOC,GACP,OAAO,CACT,CACF,CC3KA,MAAM,GAAS,UAUf,SAASC,EACPC,EACAC,EAAU,CAAC,GAOX,IACE,IAAIC,EAAcF,EAClB,MAAMG,EAAsB,EACtBC,EAAM,GACZ,IAAIC,EAAS,EACTC,EAAM,EACV,MAAMC,EAAY,MACZC,EAAYD,EAAUE,OAC5B,IAAIC,EACJ,MAAMC,EAAWC,MAAMC,QAAQZ,GAAWA,EAAUA,EAAQU,SACtDG,GAAoBF,MAAMC,QAAQZ,IAAYA,EAAQa,iBA3B9B,GA6B9B,KAAOZ,GAAeG,IAAWF,IAC/BO,EAAUK,EAAqBb,EAAaS,KAK5B,SAAZD,GAAuBL,EAAS,GAAKC,EAAMF,EAAIK,OAASD,EAAYE,EAAQD,QAAUK,KAI1FV,EAAIY,KAAKN,GAETJ,GAAOI,EAAQD,OACfP,EAAcA,EAAYe,WAG5B,OAAOb,EAAIc,UAAUC,KAAKZ,EAG5B,CAFE,MAAOa,GACP,MAAO,WACT,CACF,CAOA,SAASL,EAAqBM,EAAIV,GAChC,MAAMX,EAAOqB,EAIPjB,EAAM,GACZ,IAAIjB,EACAmC,EACAzE,EACA0E,EACAC,EAEJ,IAAKxB,IAASA,EAAKyB,QACjB,MAAO,GAGTrB,EAAIY,KAAKhB,EAAKyB,QAAQC,eAGtB,MAAMC,EACJhB,GAAYA,EAASF,OACjBE,EAASiB,QAAOC,GAAW7B,EAAK8B,aAAaD,KAAUE,KAAIF,GAAW,CAACA,EAAS7B,EAAK8B,aAAaD,MAClG,KAEN,GAAIF,GAAgBA,EAAalB,OAC/BkB,EAAazD,SAAQ8D,IACnB5B,EAAIY,KAAK,IAAIgB,EAAY,OAAOA,EAAY,OAAO,SASrD,GANIhC,EAAKxD,IACP4D,EAAIY,KAAK,IAAIhB,EAAKxD,MAIpB2C,EAAYa,EAAKb,UACbA,GAAaG,EAASH,GAExB,IADAmC,EAAUnC,EAAU8C,MAAM,OACrBT,EAAI,EAAGA,EAAIF,EAAQb,OAAQe,IAC9BpB,EAAIY,KAAK,IAAIM,EAAQE,MAI3B,MAAMU,EAAe,CAAC,aAAc,OAAQ,OAAQ,QAAS,OAC7D,IAAKV,EAAI,EAAGA,EAAIU,EAAazB,OAAQe,IACnC3E,EAAMqF,EAAaV,GACnBD,EAAOvB,EAAK8B,aAAajF,GACrB0E,GACFnB,EAAIY,KAAK,IAAInE,MAAQ0E,OAGzB,OAAOnB,EAAIe,KAAK,GAClB,CCxGA,SAASgB,EAASC,EAAKC,EAAM,GAC3B,MAAmB,iBAARD,GAA4B,IAARC,GAGxBD,EAAI3B,QAAU4B,EAFZD,EAEwB,GAAGA,EAAIE,MAAM,EAAGD,OACnD,CAoDA,SAASE,EAASC,EAAOC,GACvB,IAAK7B,MAAMC,QAAQ2B,GACjB,MAAO,GAGT,MAAME,EAAS,GAEf,IAAK,IAAIlB,EAAI,EAAGA,EAAIgB,EAAM/B,OAAQe,IAAK,CACrC,MAAMmB,EAAQH,EAAMhB,GACpB,IACEkB,EAAO1B,KAAK4B,OAAOD,GAGrB,CAFE,MAAOxF,GACPuF,EAAO1B,KAAK,+BACd,CACF,CAEA,OAAO0B,EAAOvB,KAAKsB,EACrB,CAuCA,SAASI,EACPC,EACAC,EAAW,GACXC,GAA0B,GAE1B,OAAOD,EAASE,MAAKC,GAlCvB,SACEP,EACAO,EACAF,GAA0B,GAE1B,QAAK1D,EAASqD,KF6BPzD,EEzBMgE,EFyBS,UExBbA,EAAQC,KAAKR,KAElBrD,EAAS4D,KACJF,EAA0BL,IAAUO,EAAUP,EAAMS,SAASF,IAIxE,CAiBkCG,CAAkBP,EAAYI,EAASF,IACzE,CCjHA,SAASM,EAAKC,EAAQxH,EAAMyH,GAC1B,KAAMzH,KAAQwH,GACZ,OAGF,MAAME,EAAWF,EAAOxH,GAClB2H,EAAUF,EAAmBC,GAInC,GAAuB,mBAAZC,EACT,IACEC,EAAoBD,EAASD,EAI/B,CAHE,MAAOG,GAGT,CAGFL,EAAOxH,GAAQ2H,CACjB,CASA,SAASG,EAAyBvI,EAAKS,EAAM4G,GAC3C3J,OAAO+D,eAAezB,EAAKS,EAAM,CAE/B4G,MAAOA,EACPmB,UAAU,EACVC,cAAc,GAElB,CASA,SAASJ,EAAoBD,EAASD,GACpC,MAAMO,EAAQP,EAASxK,WAAa,CAAC,EACrCyK,EAAQzK,UAAYwK,EAASxK,UAAY+K,EACzCH,EAAyBH,EAAS,sBAAuBD,EAC3D,CASA,SAASQ,EAAoBC,GAC3B,OAAOA,EAAK7F,mBACd,CAsBA,SAAS8F,EAAqBxB,GAG5B,GAAI5D,EAAQ4D,GACV,MAAO,CACLyB,QAASzB,EAAMyB,QACfrI,KAAM4G,EAAM5G,KACZsI,MAAO1B,EAAM0B,SACVC,EAAiB3B,IAEjB,GAAInD,EAAQmD,GAAQ,CACzB,MAAM4B,EAEP,CACGC,KAAM7B,EAAM6B,KACZC,OAAQC,EAAqB/B,EAAM8B,QACnCE,cAAeD,EAAqB/B,EAAMgC,kBACvCL,EAAiB3B,IAOtB,MAJ2B,oBAAhBiC,aAA+B3F,EAAa0D,EAAOiC,eAC5DL,EAAOM,OAASlC,EAAMkC,QAGjBN,CACT,CACE,OAAO5B,CAEX,CAGA,SAAS+B,EAAqBD,GAC5B,IACE,MHdwB,oBAAZK,SAA2B7F,EGctBwF,EHdwCK,SGc9B/E,EAAiB0E,GAAUzL,OAAOC,UAAUC,SAASC,KAAKsL,EAGvF,CAFE,MAAOrD,GACP,MAAO,WACT,CACF,CAGA,SAASkD,EAAiBhJ,GACxB,GAAmB,iBAARA,GAA4B,OAARA,EAAc,CAC3C,MAAMyJ,EAAiB,CAAC,EACxB,IAAK,MAAMC,KAAY1J,EACjBtC,OAAOC,UAAUyE,eAAevE,KAAKmC,EAAK0J,KAC5CD,EAAeC,GAAY,EAAOA,IAGtC,OAAOD,CACT,CACE,MAAO,CAAC,CAEZ,CAOA,SAASE,EAA+BC,EAAWC,EAAY,IAC7D,MAAM7G,EAAOtF,OAAOsF,KAAK6F,EAAqBe,IAG9C,GAFA5G,EAAK8G,QAEA9G,EAAKmC,OACR,MAAO,uBAGT,GAAInC,EAAK,GAAGmC,QAAU0E,EACpB,OAAOhD,EAAS7D,EAAK,GAAI6G,GAG3B,IAAK,IAAIE,EAAe/G,EAAKmC,OAAQ4E,EAAe,EAAGA,IAAgB,CACrE,MAAMC,EAAahH,EAAKgE,MAAM,EAAG+C,GAAclE,KAAK,MACpD,KAAImE,EAAW7E,OAAS0E,GAGxB,OAAIE,IAAiB/G,EAAKmC,OACjB6E,EAEFnD,EAASmD,EAAYH,EAC9B,CAEA,MAAO,EACT,CAQA,SAASI,EAAkBC,GAOzB,OAAOC,EAAmBD,EAHH,IAAIE,IAI7B,CAEA,SAASD,EAAmBD,EAAYG,GACtC,GAAIpG,EAAciG,GAAa,CAE7B,MAAMI,EAAUD,EAAe1I,IAAIuI,GACnC,QAAgBlL,IAAZsL,EACF,OAAOA,EAGT,MAAMC,EAAc,CAAC,EAErBF,EAAepI,IAAIiI,EAAYK,GAE/B,IAAK,MAAMhJ,KAAO7D,OAAOsF,KAAKkH,QACG,IAApBA,EAAW3I,KACpBgJ,EAAYhJ,GAAO4I,EAAmBD,EAAW3I,GAAM8I,IAI3D,OAAOE,CACT,CAEA,GAAIjF,MAAMC,QAAQ2E,GAAa,CAE7B,MAAMI,EAAUD,EAAe1I,IAAIuI,GACnC,QAAgBlL,IAAZsL,EACF,OAAOA,EAGT,MAAMC,EAAc,GAQpB,OANAF,EAAepI,IAAIiI,EAAYK,GAE/BL,EAAWtH,SAAS4H,IAClBD,EAAY7E,KAAKyE,EAAmBK,EAAMH,GAAgB,IAGrDE,CACT,CAEA,OAAOL,CACT,CCrOA,SAASO,IACP,MAAM9J,EAAM,KACN+J,EAAS/J,EAAI+J,QAAU/J,EAAIgK,SAEjC,GAAID,GAAUA,EAAOE,WACnB,OAAOF,EAAOE,aAAaC,QAAQ,KAAM,IAG3C,MAAMC,EACJJ,GAAUA,EAAOK,gBAAkB,IAAML,EAAOK,gBAAgB,IAAIC,WAAW,IAAI,GAAK,IAAsB,GAAhBvL,KAAKwL,SAIrG,OAAQ,CAAE,KAAS,IAAM,IAAM,IAAM,MAAMJ,QAAQ,UAAUK,IAE1D,GAA2B,GAAlBJ,MAA0B,EAAO,GAAKlN,SAAS,KAE7D,CAEA,SAASuN,EAAkBC,GACzB,OAAOA,EAAMxB,WAAawB,EAAMxB,UAAUyB,OAASD,EAAMxB,UAAUyB,OAAO,QAAKrM,CACjF,CAMA,SAASsM,EAAoBF,GAC3B,MAAM,QAAEtC,EAASyC,SAAUC,GAAYJ,EACvC,GAAItC,EACF,OAAOA,EAGT,MAAM2C,EAAiBN,EAAkBC,GACzC,OAAIK,EACEA,EAAevC,MAAQuC,EAAepE,MACjC,GAAGoE,EAAevC,SAASuC,EAAepE,QAE5CoE,EAAevC,MAAQuC,EAAepE,OAASmE,GAAW,YAE5DA,GAAW,WACpB,CASA,SAASE,EAAsBN,EAAO/D,EAAO6B,GAC3C,MAAMU,EAAawB,EAAMxB,UAAYwB,EAAMxB,WAAa,CAAC,EACnDyB,EAAUzB,EAAUyB,OAASzB,EAAUyB,QAAU,GACjDI,EAAkBJ,EAAO,GAAKA,EAAO,IAAM,CAAC,EAC7CI,EAAepE,QAClBoE,EAAepE,MAAQA,GAAS,IAE7BoE,EAAevC,OAClBuC,EAAevC,KAAOA,GAAQ,QAElC,CASA,SAASyC,EAAsBP,EAAOQ,GACpC,MAAMH,EAAiBN,EAAkBC,GACzC,IAAKK,EACH,OAGF,MACMI,EAAmBJ,EAAeK,UAGxC,GAFAL,EAAeK,UAAY,CAFA5C,KAAM,UAAW6C,SAAS,KAEAF,KAAqBD,GAEtEA,GAAgB,SAAUA,EAAc,CAC1C,MAAMI,EAAa,IAAMH,GAAoBA,EAAiBI,QAAUL,EAAaK,MACrFR,EAAeK,UAAUG,KAAOD,CAClC,CACF,CA4EA,SAASE,EAAwBtC,GAE/B,GAAIA,GAAa,EAAauC,oBAC5B,OAAO,EAGT,IAGE5D,EAAyBqB,EAAY,uBAAuB,EAG9D,CAFE,MAAOwC,GAET,CAEA,OAAO,CACT,CAQA,SAASC,EAASC,GAChB,OAAOhH,MAAMC,QAAQ+G,GAAcA,EAAa,CAACA,EACnD,CC7LA,MAAMC,EAAwB,CAAC,oBAAqB,iDAKpD,MAAMC,EAIHC,sBAAuBnM,KAAKY,GAAK,gBAAiB,CAKlDwL,SAAUpM,KAAKG,KAAO+L,EAAetL,EAAG,CAExCyL,YAAcC,EAAW,CAAC,GAAItM,KAAKsM,SAAWA,EAASJ,EAAe7O,UAAU+O,OAAO7O,KAAKyC,KAAM,CAKlGuM,UAAUC,EAAyBC,GAClC,MAAMC,EAAgB5B,IACpB,MAAM6B,EAAMF,IACZ,GAAIE,EAAK,CACP,MAAM7M,EAAO6M,EAAIC,eAAeV,GAChC,GAAIpM,EAAM,CACR,MAAM+M,EAASF,EAAIG,YACbC,EAAgBF,EAASA,EAAOG,aAAe,CAAC,EAChD3I,EAahB,SACE4I,EAAkB,CAAC,EACnBF,EAAgB,CAAC,GAEjB,MAAO,CACLG,UAAW,IAAKD,EAAgBC,WAAa,MAASH,EAAcG,WAAa,IACjFC,SAAU,IAAKF,EAAgBE,UAAY,MAASJ,EAAcI,UAAY,IAC9EC,aAAc,IACRH,EAAgBG,cAAgB,MAChCL,EAAcK,cAAgB,MAC/BnB,GAELoB,mBAAoB,IAAKJ,EAAgBI,oBAAsB,MAASN,EAAcM,oBAAsB,IAC5GC,oBAAmD5O,IAAnCuO,EAAgBK,gBAA+BL,EAAgBK,eAEnF,CA5B0BC,CAAczN,EAAKwM,SAAUS,GAC7C,OA8BV,SAA0BjC,EAAOzG,GAC/B,OAAIA,EAAQiJ,gBA4Fd,SAAwBxC,GACtB,IAGE,MAA0C,gBAAnCA,EAAMxB,UAAUyB,OAAO,GAAGnC,IAGnC,CAFE,MAAOrH,GAET,CACA,OAAO,CACT,CArGgCiM,CAAe1C,KACd,oBAArB9H,kBAAoCA,mBAC1C,OAAY,6DAA6DgI,EAAoBF,OACxF,GAqCX,SAAyBA,EAAOsC,GAE9B,QAAItC,EAAMlC,OAASwE,IAAiBA,EAAavI,SAkCnD,SAAmCiG,GACjC,GAAIA,EAAMtC,QACR,MAAO,CAACsC,EAAMtC,SAEhB,GAAIsC,EAAMxB,UACR,IACE,MAAM,KAAEV,EAAO,GAAE,MAAE7B,EAAQ,IAAQ+D,EAAMxB,UAAUyB,QAAUD,EAAMxB,UAAUyB,OAAO,IAAO,CAAC,EAC5F,MAAO,CAAC,GAAGhE,IAAS,GAAG6B,MAAS7B,IAIlC,CAHE,MAAO0G,GAEP,OAD6B,oBAArBzK,kBAAoCA,mBAAqB,QAAa,oCAAoCgI,EAAoBF,MAC/H,EACT,CAEF,MAAO,EACT,CA5CS4C,CAA0B5C,GAAOzD,MAAKmB,GAAWvB,EAAyBuB,EAAS4E,IAC5F,CA1CMO,CAAgB7C,EAAOzG,EAAQ+I,gBACJ,oBAArBpK,kBAAoCA,mBAC1C,OACE,0EAA0EgI,EAAoBF,OAE3F,GAuCX,SAA+BA,EAAOuC,GACpC,GAAmB,gBAAfvC,EAAMlC,OAA2ByE,IAAuBA,EAAmBxI,OAC7E,OAAO,EAGT,MAAM1E,EAAO2K,EAAM8C,YACnB,QAAOzN,GAAO8G,EAAyB9G,EAAMkN,EAC/C,CA5CMQ,CAAsB/C,EAAOzG,EAAQgJ,sBACV,oBAArBrK,kBAAoCA,mBAC1C,OACE,gFAAgFgI,EAAoBF,OAEjG,GAyCX,SAAsBA,EAAOqC,GAE3B,IAAKA,IAAaA,EAAStI,OACzB,OAAO,EAET,MAAMiJ,EAAMC,EAAmBjD,GAC/B,QAAQgD,GAAc7G,EAAyB6G,EAAKX,EACtD,CA9CMa,CAAalD,EAAOzG,EAAQ8I,YACD,oBAArBnK,kBAAoCA,mBAC1C,OACE,sEAAsEgI,EACpEF,aACUiD,EAAmBjD,OAE5B,IAyCX,SAAuBA,EAAOoC,GAE5B,IAAKA,IAAcA,EAAUrI,OAC3B,OAAO,EAET,MAAMiJ,EAAMC,EAAmBjD,GAC/B,OAAQgD,GAAa7G,EAAyB6G,EAAKZ,EACrD,CA9COe,CAAcnD,EAAOzG,EAAQ6I,cACH,oBAArBlK,kBAAoCA,mBAC1C,OACE,2EAA2EgI,EACzEF,aACUiD,EAAmBjD,OAE5B,EAGX,CArEiBoD,CAAiBpD,EAAOzG,GAAW,KAAOyG,CACnD,CACF,CACA,OAAOA,CAAK,EAGd4B,EAAa9L,GAAKZ,KAAKG,KACvBqM,EAAwBE,EAC1B,EA0IF,SAASqB,EAAmBjD,GAC1B,IACE,IAAIqD,EACJ,IAEEA,EAASrD,EAAMxB,UAAUyB,OAAO,GAAGqD,WAAWD,MAGhD,CAFE,MAAO5M,GAET,CACA,OAAO4M,EArBX,SAA0BA,EAAS,IACjC,IAAK,IAAIvI,EAAIuI,EAAOtJ,OAAS,EAAGe,GAAK,EAAGA,IAAK,CAC3C,MAAMyI,EAAQF,EAAOvI,GAErB,GAAIyI,GAA4B,gBAAnBA,EAAMC,UAAiD,kBAAnBD,EAAMC,SACrD,OAAOD,EAAMC,UAAY,IAE7B,CAEA,OAAO,IACT,CAWoBC,CAAiBJ,GAAU,IAI7C,CAHE,MAAOV,GAEP,OAD6B,oBAArBzK,kBAAoCA,mBAAqB,QAAa,gCAAgCgI,EAAoBF,MAC3H,IACT,CACF,CChMA,IAAI0D,EDyCFtC,EAAeuC,eCtCjB,MAAMC,EAAmBrC,cAAgBqC,EAAiBrR,UAAU+O,OAAO7O,KAAKyC,KAAO,CAIpFmM,sBAAuBnM,KAAKY,GAAK,kBAAmB,CAKpDwL,SAAUpM,KAAKG,KAAOuO,EAAiB9N,EAAG,CAK1C2L,YAECiC,EAA2BlN,SAASjE,UAAUC,SAI9C,IAEEgE,SAASjE,UAAUC,SAAW,YAAc2F,GAC1C,MAAM0L,EAAUtG,EAAoBrI,OAASA,KAC7C,OAAOwO,EAAyBI,MAAMD,EAAS1L,EACjD,CAGF,CAFE,MAAO1B,GAET,CACF,EACAmN,EAAiBD,e,aCnCnB,MAAMI,EAAsB,aCK5B,IAAIC,EAiBJ,SAAS,EAAoB/H,GAC3B,OAAO,IAAIgI,GAAYC,IACrBA,EAAQjI,EAAM,GAElB,CAQA,SAASkI,EAAoBC,GAC3B,OAAO,IAAIH,GAAY,CAAC1Q,EAAG8Q,KACzBA,EAAOD,EAAO,GAElB,EAjCY,SAAWJ,GAEFA,EAAOA,EAAgB,QAA1B,GAAyC,UAErCA,EAAOA,EAAiB,SAA3B,GAA2C,WAExCA,EAAOA,EAAiB,SAA3B,GAA2C,UAC7D,CAPW,CAOTA,IAAWA,EAAS,CAAC,IAgCxB,MAAMC,EACH3C,SAAUpM,KAAKoP,OAASN,EAAOO,OAAQ,CACvCC,UAAWtP,KAAKuP,UAAY,EAAG,CAE/BlD,YACCmD,GACCT,EAAY1R,UAAU+O,OAAO7O,KAAKyC,MAAM+O,EAAY1R,UAAUiS,QAAQ/R,KAAKyC,MAAM+O,EAAY1R,UAAUoS,QAAQlS,KAAKyC,MAAM+O,EAAY1R,UAAUqS,QAAQnS,KAAKyC,MAAM+O,EAAY1R,UAAUsS,QAAQpS,KAAKyC,MAAM+O,EAAY1R,UAAUuS,QAAQrS,KAAKyC,MAChP,IACEwP,EAASxP,KAAK6P,SAAU7P,KAAK8P,QAG/B,CAFE,MAAOvO,GACPvB,KAAK8P,QAAQvO,EACf,CACF,CAGCyC,KACC+L,EACAC,GAEA,OAAO,IAAIjB,GAAY,CAACC,EAASG,KAC/BnP,KAAKuP,UAAUnK,KAAK,EAClB,EACA6K,IACE,GAAKF,EAKH,IACEf,EAAQe,EAAYE,GAGtB,CAFE,MAAO1O,GACP4N,EAAO5N,EACT,MANAyN,EAAQiB,EAOV,EAEFf,IACE,GAAKc,EAGH,IACEhB,EAAQgB,EAAWd,GAGrB,CAFE,MAAO3N,GACP4N,EAAO5N,EACT,MANA4N,EAAOD,EAOT,IAGJlP,KAAKkQ,kBAAkB,GAE3B,CAGCC,MACCH,GAEA,OAAOhQ,KAAKgE,MAAKoM,GAAOA,GAAKJ,EAC/B,CAGCK,QAAQC,GACP,OAAO,IAAIvB,GAAY,CAACC,EAASG,KAC/B,IAAIiB,EACAG,EAEJ,OAAOvQ,KAAKgE,MACV+C,IACEwJ,GAAa,EACbH,EAAMrJ,EACFuJ,GACFA,GACF,IAEFpB,IACEqB,GAAa,EACbH,EAAMlB,EACFoB,GACFA,GACF,IAEFtM,MAAK,KACDuM,EACFpB,EAAOiB,GAITpB,EAAQoB,EAAK,GACb,GAEN,CAGEX,UAAWzP,KAAK6P,SAAY9I,IAC5B/G,KAAKwQ,WAAW1B,EAAO2B,SAAU1J,EAAM,CACvC,CAGA2I,UAAW1P,KAAK8P,QAAWZ,IAC3BlP,KAAKwQ,WAAW1B,EAAO4B,SAAUxB,EAAO,CACxC,CAGAS,UAAW3P,KAAKwQ,WAAa,CAACG,EAAO5J,KACjC/G,KAAKoP,SAAWN,EAAOO,UAIvBvL,EAAWiD,GACR,EAAS/C,KAAKhE,KAAK6P,SAAU7P,KAAK8P,UAIzC9P,KAAKoP,OAASuB,EACd3Q,KAAK4Q,OAAS7J,EAEd/G,KAAKkQ,oBAAkB,CACvB,CAGAN,UAAW5P,KAAKkQ,iBAAmB,KACnC,GAAIlQ,KAAKoP,SAAWN,EAAOO,QACzB,OAGF,MAAMwB,EAAiB7Q,KAAKuP,UAAU7I,QACtC1G,KAAKuP,UAAY,GAEjBsB,EAAevO,SAAQwO,IACjBA,EAAQ,KAIR9Q,KAAKoP,SAAWN,EAAO2B,UAEzBK,EAAQ,GAAG9Q,KAAK4Q,QAGd5Q,KAAKoP,SAAWN,EAAO4B,UACzBI,EAAQ,GAAG9Q,KAAK4Q,QAGlBE,EAAQ,IAAK,EAAI,GACjB,CACF,EC7IJ,SAASC,EAAcC,EAASrC,EAAU,CAAC,GA6BzC,GA5BIA,EAAQsC,QACLD,EAAQE,WAAavC,EAAQsC,KAAKE,aACrCH,EAAQE,UAAYvC,EAAQsC,KAAKE,YAG9BH,EAAQI,KAAQzC,EAAQyC,MAC3BJ,EAAQI,IAAMzC,EAAQsC,KAAKrQ,IAAM+N,EAAQsC,KAAKI,OAAS1C,EAAQsC,KAAKK,WAIxEN,EAAQO,UAAY5C,EAAQ4C,YAAa,EAAAC,EAAA,MAErC7C,EAAQ8C,iBACVT,EAAQS,eAAiB9C,EAAQ8C,gBAE/B9C,EAAQ+C,MAEVV,EAAQU,IAA6B,KAAvB/C,EAAQ+C,IAAI7M,OAAgB8J,EAAQ+C,IAAMvH,UAErCzL,IAAjBiQ,EAAQgD,OACVX,EAAQW,KAAOhD,EAAQgD,OAEpBX,EAAQI,KAAOzC,EAAQyC,MAC1BJ,EAAQI,IAAM,GAAGzC,EAAQyC,OAEI,iBAApBzC,EAAQiD,UACjBZ,EAAQY,QAAUjD,EAAQiD,SAExBZ,EAAQS,eACVT,EAAQa,cAAWnT,OACd,GAAgC,iBAArBiQ,EAAQkD,SACxBb,EAAQa,SAAWlD,EAAQkD,aACtB,CACL,MAAMA,EAAWb,EAAQO,UAAYP,EAAQY,QAC7CZ,EAAQa,SAAWA,GAAY,EAAIA,EAAW,CAChD,CACIlD,EAAQmD,UACVd,EAAQc,QAAUnD,EAAQmD,SAExBnD,EAAQoD,cACVf,EAAQe,YAAcpD,EAAQoD,cAE3Bf,EAAQE,WAAavC,EAAQuC,YAChCF,EAAQE,UAAYvC,EAAQuC,YAEzBF,EAAQgB,WAAarD,EAAQqD,YAChChB,EAAQgB,UAAYrD,EAAQqD,WAEA,iBAAnBrD,EAAQsD,SACjBjB,EAAQiB,OAAStD,EAAQsD,QAEvBtD,EAAQuD,SACVlB,EAAQkB,OAASvD,EAAQuD,OAE7B,CCxFA,MAAM,EAuCH7F,cACCrM,KAAKmS,qBAAsB,EAC3BnS,KAAKoS,gBAAkB,GACvBpS,KAAKqS,iBAAmB,GACxBrS,KAAKsS,aAAe,GACpBtS,KAAKuS,aAAe,GACpBvS,KAAKwS,MAAQ,CAAC,EACdxS,KAAKyS,MAAQ,CAAC,EACdzS,KAAK0S,OAAS,CAAC,EACf1S,KAAK2S,UAAY,CAAC,EAClB3S,KAAK4S,uBAAyB,CAAC,CACjC,CAMCzG,aAAa0G,GACZ,MAAMC,EAAW,IAAI,EAiBrB,OAhBID,IACFC,EAASR,aAAe,IAAIO,EAAMP,cAClCQ,EAASL,MAAQ,IAAKI,EAAMJ,OAC5BK,EAASJ,OAAS,IAAKG,EAAMH,QAC7BI,EAASH,UAAY,IAAKE,EAAMF,WAChCG,EAASN,MAAQK,EAAML,MACvBM,EAASC,OAASF,EAAME,OACxBD,EAASE,MAAQH,EAAMG,MACvBF,EAASG,SAAWJ,EAAMI,SAC1BH,EAASI,iBAAmBL,EAAMK,iBAClCJ,EAASK,aAAeN,EAAMM,aAC9BL,EAAST,iBAAmB,IAAIQ,EAAMR,kBACtCS,EAASM,gBAAkBP,EAAMO,gBACjCN,EAASP,aAAe,IAAIM,EAAMN,cAClCO,EAASF,uBAAyB,IAAKC,EAAMD,yBAExCE,CACT,CAMCO,iBAAiBlR,GAChBnC,KAAKoS,gBAAgBhN,KAAKjD,EAC5B,CAKCmR,kBAAkBnR,GAEjB,OADAnC,KAAKqS,iBAAiBjN,KAAKjD,GACpBnC,IACT,CAKCuT,QAAQtC,GAMP,OALAjR,KAAKwS,MAAQvB,GAAQ,CAAC,EAClBjR,KAAKiT,UACPlC,EAAc/Q,KAAKiT,SAAU,CAAEhC,SAEjCjR,KAAKwT,wBACExT,IACT,CAKCyT,UACC,OAAOzT,KAAKwS,KACd,CAKCkB,oBACC,OAAO1T,KAAKoT,eACd,CAKCO,kBAAkBC,GAEjB,OADA5T,KAAKoT,gBAAkBQ,EAChB5T,IACT,CAKC6T,QAAQC,GAMP,OALA9T,KAAKyS,MAAQ,IACRzS,KAAKyS,SACLqB,GAEL9T,KAAKwT,wBACExT,IACT,CAKC+T,OAAO9S,EAAK8F,GAGX,OAFA/G,KAAKyS,MAAQ,IAAKzS,KAAKyS,MAAO,CAACxR,GAAM8F,GACrC/G,KAAKwT,wBACExT,IACT,CAKCgU,UAAUC,GAMT,OALAjU,KAAK0S,OAAS,IACT1S,KAAK0S,UACLuB,GAELjU,KAAKwT,wBACExT,IACT,CAKCkU,SAASjT,EAAKkT,GAGb,OAFAnU,KAAK0S,OAAS,IAAK1S,KAAK0S,OAAQ,CAACzR,GAAMkT,GACvCnU,KAAKwT,wBACExT,IACT,CAKCoU,eAAeC,GAGd,OAFArU,KAAKmT,aAAekB,EACpBrU,KAAKwT,wBACExT,IACT,CAKCsU,SAEC/R,GAIA,OAFAvC,KAAK+S,OAASxQ,EACdvC,KAAKwT,wBACExT,IACT,CAKCuU,mBAAmBpU,GAGlB,OAFAH,KAAKkT,iBAAmB/S,EACxBH,KAAKwT,wBACExT,IACT,CAKCwU,WAAWvT,EAAK0N,GASf,OARgB,OAAZA,SAEK3O,KAAK2S,UAAU1R,GAEtBjB,KAAK2S,UAAU1R,GAAO0N,EAGxB3O,KAAKwT,wBACExT,IACT,CAKCyU,QAAQC,GAGP,OAFA1U,KAAKgT,MAAQ0B,EACb1U,KAAKwT,wBACExT,IACT,CAKC2U,UACC,OAAO3U,KAAKgT,KACd,CAKC4B,iBAGC,MAAMF,EAAO1U,KAAK2U,UAClB,OAAOD,GAAQA,EAAK9G,WACtB,CAKCiH,WAAW7D,GAOV,OANKA,EAGHhR,KAAKiT,SAAWjC,SAFThR,KAAKiT,SAIdjT,KAAKwT,wBACExT,IACT,CAKC8U,aACC,OAAO9U,KAAKiT,QACd,CAKC8B,OAAOC,GACN,IAAKA,EACH,OAAOhV,KAGT,GAA8B,mBAAnBgV,EAA+B,CACxC,MAAMC,EAAe,EAAkBjV,MACvC,OAAOiV,aAAwB,EAAQA,EAAejV,IACxD,CAsCA,OApCIgV,aAA0B,GAC5BhV,KAAKyS,MAAQ,IAAKzS,KAAKyS,SAAUuC,EAAevC,OAChDzS,KAAK0S,OAAS,IAAK1S,KAAK0S,UAAWsC,EAAetC,QAClD1S,KAAK2S,UAAY,IAAK3S,KAAK2S,aAAcqC,EAAerC,WACpDqC,EAAexC,OAASpV,OAAOsF,KAAKsS,EAAexC,OAAO3N,SAC5D7E,KAAKwS,MAAQwC,EAAexC,OAE1BwC,EAAejC,SACjB/S,KAAK+S,OAASiC,EAAejC,QAE3BiC,EAAe7B,eACjBnT,KAAKmT,aAAe6B,EAAe7B,cAEjC6B,EAAe5B,kBACjBpT,KAAKoT,gBAAkB4B,EAAe5B,kBAE/BzP,EAAcqR,KAGvBhV,KAAKyS,MAAQ,IAAKzS,KAAKyS,SAAUuC,EAAelB,MAChD9T,KAAK0S,OAAS,IAAK1S,KAAK0S,UAAWsC,EAAeb,OAClDnU,KAAK2S,UAAY,IAAK3S,KAAK2S,aAAcqC,EAAeE,UACpDF,EAAe/D,OACjBjR,KAAKwS,MAAQwC,EAAe/D,MAE1B+D,EAAezS,QACjBvC,KAAK+S,OAASiC,EAAezS,OAE3ByS,EAAeX,cACjBrU,KAAKmT,aAAe6B,EAAeX,aAEjCW,EAAepB,iBACjB5T,KAAKoT,gBAAkB4B,EAAepB,iBAInC5T,IACT,CAKCmV,QAcC,OAbAnV,KAAKsS,aAAe,GACpBtS,KAAKyS,MAAQ,CAAC,EACdzS,KAAK0S,OAAS,CAAC,EACf1S,KAAKwS,MAAQ,CAAC,EACdxS,KAAK2S,UAAY,CAAC,EAClB3S,KAAK+S,YAASrU,EACdsB,KAAKkT,sBAAmBxU,EACxBsB,KAAKmT,kBAAezU,EACpBsB,KAAKoT,qBAAkB1U,EACvBsB,KAAKgT,WAAQtU,EACbsB,KAAKiT,cAAWvU,EAChBsB,KAAKwT,wBACLxT,KAAKuS,aAAe,GACbvS,IACT,CAKCoV,cAAcC,EAAYC,GACzB,MAAMC,EAAsC,iBAAnBD,EAA8BA,EAtV3B,IAyV5B,GAAIC,GAAa,EACf,OAAOvV,KAGT,MAAMwV,EAAmB,CACvBjE,WAAW,aACR8D,GAKL,OAHArV,KAAKsS,aAAe,IAAItS,KAAKsS,aAAckD,GAAkB9O,OAAO6O,GACpEvV,KAAKwT,wBAEExT,IACT,CAKCyV,oBACC,OAAOzV,KAAKsS,aAAatS,KAAKsS,aAAazN,OAAS,EACtD,CAKC6Q,mBAGC,OAFA1V,KAAKsS,aAAe,GACpBtS,KAAKwT,wBACExT,IACT,CAKC2V,cAAcC,GAEb,OADA5V,KAAKuS,aAAanN,KAAKwQ,GAChB5V,IACT,CAKC6V,iBACC,OAAO7V,KAAKuS,YACd,CAKCuD,mBAEC,OADA9V,KAAKuS,aAAe,GACbvS,IACT,CASC+V,aAAajL,EAAOkL,EAAO,CAAC,GAuB3B,GAtBIhW,KAAK0S,QAAUtV,OAAOsF,KAAK1C,KAAK0S,QAAQ7N,SAC1CiG,EAAMqJ,MAAQ,IAAKnU,KAAK0S,UAAW5H,EAAMqJ,QAEvCnU,KAAKyS,OAASrV,OAAOsF,KAAK1C,KAAKyS,OAAO5N,SACxCiG,EAAMgJ,KAAO,IAAK9T,KAAKyS,SAAU3H,EAAMgJ,OAErC9T,KAAKwS,OAASpV,OAAOsF,KAAK1C,KAAKwS,OAAO3N,SACxCiG,EAAMmG,KAAO,IAAKjR,KAAKwS,SAAU1H,EAAMmG,OAErCjR,KAAK2S,WAAavV,OAAOsF,KAAK1C,KAAK2S,WAAW9N,SAChDiG,EAAMoK,SAAW,IAAKlV,KAAK2S,aAAc7H,EAAMoK,WAE7ClV,KAAK+S,SACPjI,EAAMvI,MAAQvC,KAAK+S,QAEjB/S,KAAKkT,mBACPpI,EAAM8C,YAAc5N,KAAKkT,kBAMvBlT,KAAKgT,MAAO,CACdlI,EAAMoK,SAAW,CAAEe,MAAOjW,KAAKgT,MAAMkD,qBAAsBpL,EAAMoK,UACjE,MAAMtH,EAAc5N,KAAKgT,MAAMpF,YAC/B,GAAIA,EAAa,CACf9C,EAAMqL,sBAAwB,CAC5BC,uBAAwBxI,EAAYyI,+BACjCvL,EAAMqL,uBAEX,MAAMG,EAAkB1I,EAAYzN,KAChCmW,IACFxL,EAAMgJ,KAAO,CAAElG,YAAa0I,KAAoBxL,EAAMgJ,MAE1D,CACF,CASA,OAPA9T,KAAKuW,kBAAkBzL,GAEvBA,EAAM0L,YAAc,IAAK1L,EAAM0L,aAAe,MAAQxW,KAAKsS,cAC3DxH,EAAM0L,YAAc1L,EAAM0L,YAAY3R,OAAS,EAAIiG,EAAM0L,iBAAc9X,EAEvEoM,EAAMqL,sBAAwB,IAAKrL,EAAMqL,yBAA0BnW,KAAK4S,wBAEjE5S,KAAKyW,uBAAuB,IAAIC,OAA+B1W,KAAKqS,kBAAmBvH,EAAOkL,EACvG,CAKCW,yBAAyBC,GAGxB,OAFA5W,KAAK4S,uBAAyB,IAAK5S,KAAK4S,0BAA2BgE,GAE5D5W,IACT,CAKCyW,uBACCI,EACA/L,EACAkL,EACAc,EAAQ,GAER,OAAO,IAAI/H,GAAY,CAACC,EAASG,KAC/B,MAAM4H,EAAYF,EAAWC,GAC7B,GAAc,OAAVhM,GAAuC,mBAAdiM,EAC3B/H,EAAQlE,OACH,CACL,MAAMmF,EAAS8G,EAAU,IAAKjM,GAASkL,IAEV,oBAArBhT,kBAAoCA,mBAC1C+T,EAAUnW,IACC,OAAXqP,GACA,EAAA+G,IAAW,oBAAoBD,EAAUnW,qBAEvCkD,EAAWmM,GACRA,EACFjM,MAAKiT,GAASjX,KAAKyW,uBAAuBI,EAAYI,EAAOjB,EAAMc,EAAQ,GAAG9S,KAAKgL,KACnFhL,KAAK,KAAMmL,GAETnP,KAAKyW,uBAAuBI,EAAY5G,EAAQ+F,EAAMc,EAAQ,GAChE9S,KAAKgL,GACLhL,KAAK,KAAMmL,EAElB,IAEJ,CAKCqE,wBAIMxT,KAAKmS,sBACRnS,KAAKmS,qBAAsB,EAC3BnS,KAAKoS,gBAAgB9P,SAAQH,IAC3BA,EAASnC,KAAK,IAEhBA,KAAKmS,qBAAsB,EAE/B,CAMCoE,kBAAkBzL,GAEjBA,EAAMuJ,YAAcvJ,EAAMuJ,YAActI,EAASjB,EAAMuJ,aAAe,GAGlErU,KAAKmT,eACPrI,EAAMuJ,YAAcvJ,EAAMuJ,YAAY6C,OAAOlX,KAAKmT,eAIhDrI,EAAMuJ,cAAgBvJ,EAAMuJ,YAAYxP,eACnCiG,EAAMuJ,WAEjB,EAMF,SAASqC,IACP,OAAO,QAAmB,yBAAyB,IAAM,IAC3D,CAMA,SAASlK,GAAwBrK,GAC/BuU,IAA2BtR,KAAKjD,EAClC,CC1hBA,MAMMgV,GAAsB,IAK5B,MAAMC,GAaH/K,YAAYQ,EAAQgG,EAAQ,IAAI,EAAWwE,EAxB1B,GAwBmDrX,KAAKqX,SAAWA,EACnFrX,KAAKsX,OAAS,CAAC,CAAEzE,UACbhG,GACF7M,KAAKuX,WAAW1K,EAEpB,CAKC2K,YAAYC,GACX,OAAOzX,KAAKqX,SAAWI,CACzB,CAKCF,WAAW1K,GACE7M,KAAK0X,cACb7K,OAASA,EACTA,GAAUA,EAAO8K,mBACnB9K,EAAO8K,mBAEX,CAKCC,YAEC,MAAM/E,EAAQ,QAAY7S,KAAK6X,YAK/B,OAJA7X,KAAK8X,WAAW1S,KAAK,CACnByH,OAAQ7M,KAAK8M,YACb+F,UAEKA,CACT,CAKCkF,WACC,QAAI/X,KAAK8X,WAAWjT,QAAU,IACrB7E,KAAK8X,WAAWE,MAC3B,CAKCC,UAAU9V,GACT,MAAM0Q,EAAQ7S,KAAK4X,YACnB,IACEzV,EAAS0Q,EAGX,CAFE,QACA7S,KAAK+X,UACP,CACF,CAKCjL,YACC,OAAO9M,KAAK0X,cAAc7K,MAC5B,CAGCgL,WACC,OAAO7X,KAAK0X,cAAc7E,KAC5B,CAGCiF,WACC,OAAO9X,KAAKsX,MACd,CAGCI,cACC,OAAO1X,KAAKsX,OAAOtX,KAAKsX,OAAOzS,OAAS,EAC1C,CAKCqT,iBAAiB5O,EAAW0M,GAC3B,MAAM9K,EAAWlL,KAAKmY,aAAenC,GAAQA,EAAK/K,SAAW+K,EAAK/K,SAAWd,IACvEiO,EAAqB,IAAIxW,MAAM,6BAarC,OAZA5B,KAAKqY,aAAY,CAACxL,EAAQgG,KACxBhG,EAAOqL,iBACL5O,EACA,CACEgP,kBAAmBhP,EACnB8O,wBACGpC,EACH/K,SAAUC,GAEZ2H,EACD,IAEI3H,CACT,CAKCqN,eACC/P,EAEAjG,EACAyT,GAEA,MAAM9K,EAAWlL,KAAKmY,aAAenC,GAAQA,EAAK/K,SAAW+K,EAAK/K,SAAWd,IACvEiO,EAAqB,IAAIxW,MAAM4G,GAcrC,OAbAxI,KAAKqY,aAAY,CAACxL,EAAQgG,KACxBhG,EAAO0L,eACL/P,EACAjG,EACA,CACE+V,kBAAmB9P,EACnB4P,wBACGpC,EACH/K,SAAUC,GAEZ2H,EACD,IAEI3H,CACT,CAKCsN,aAAa1N,EAAOkL,GACnB,MAAM9K,EAAU8K,GAAQA,EAAK/K,SAAW+K,EAAK/K,SAAWd,IAQxD,OAPKW,EAAMlC,OACT5I,KAAKmY,aAAejN,GAGtBlL,KAAKqY,aAAY,CAACxL,EAAQgG,KACxBhG,EAAO2L,aAAa1N,EAAO,IAAKkL,EAAM/K,SAAUC,GAAW2H,EAAM,IAE5D3H,CACT,CAKCuN,cACC,OAAOzY,KAAKmY,YACd,CAKC/C,cAAcC,EAAYW,GACzB,MAAM,MAAEnD,EAAK,OAAEhG,GAAW7M,KAAK0X,cAE/B,IAAK7K,EAAQ,OAEb,MAAM,iBAAE6L,EAAmB,KAAI,eAAEpD,EAAiB6B,IAC/CtK,EAAOG,YAAcH,EAAOG,cAAiB,CAAC,EAEjD,GAAIsI,GAAkB,EAAG,OAEzB,MACME,EAAmB,CAAEjE,WADT,aACuB8D,GACnCsD,EAAkBD,EACnBxW,GAAe,IAAMwW,EAAiBlD,EAAkBQ,KACzDR,EAEoB,OAApBmD,IAEA9L,EAAO+L,MACT/L,EAAO+L,KAAK,sBAAuBD,EAAiB3C,GAGtDnD,EAAMuC,cAAcuD,EAAiBrD,GACvC,CAKC/B,QAAQtC,GACPjR,KAAK6X,WAAWtE,QAAQtC,EAC1B,CAKC4C,QAAQC,GACP9T,KAAK6X,WAAWhE,QAAQC,EAC1B,CAKCE,UAAUC,GACTjU,KAAK6X,WAAW7D,UAAUC,EAC5B,CAKCF,OAAO9S,EAAK8F,GACX/G,KAAK6X,WAAW9D,OAAO9S,EAAK8F,EAC9B,CAKCmN,SAASjT,EAAKkT,GACbnU,KAAK6X,WAAW3D,SAASjT,EAAKkT,EAChC,CAMCK,WAAWrU,EAAMwO,GAChB3O,KAAK6X,WAAWrD,WAAWrU,EAAMwO,EACnC,CAKCkK,eAAe1W,GACd,MAAM,MAAE0Q,EAAK,OAAEhG,GAAW7M,KAAK0X,cAC3B7K,GACF1K,EAAS0Q,EAEb,CAKCiG,IAAI3W,GACH,MAAM4W,EAASC,GAAShZ,MACxB,IACEmC,EAASnC,KAGX,CAFE,QACAgZ,GAASD,EACX,CACF,CAKCnM,eAAeqM,GACd,MAAMpM,EAAS7M,KAAK8M,YACpB,IAAKD,EAAQ,OAAO,KACpB,IACE,OAAOA,EAAOD,eAAeqM,EAI/B,CAHE,MAAOzT,GAEP,OAD6B,oBAArBxC,kBAAoCA,mBAAqB,OAAY,+BAA+BiW,EAAYrY,2BACjH,IACT,CACF,CAKCsY,iBAAiBvK,EAASwK,GACzB,MAAMlJ,EAASjQ,KAAKoZ,qBAAqB,mBAAoBzK,EAASwK,GAUtE,MARiC,oBAArBnW,mBAAoCA,kBAAsBiN,GAEpEoJ,QAAQC,KAAK,sKAMRrJ,CACT,CAKCsJ,eACC,OAAOvZ,KAAKoZ,qBAAqB,eACnC,CAKCI,eAAeC,GAAa,GAE3B,GAAIA,EACF,OAAOzZ,KAAKyZ,aAIdzZ,KAAK0Z,oBACP,CAKCD,aACC,MACM5G,EADQ7S,KAAK0X,cACC7E,MACd7B,EAAU6B,EAAMiC,aAClB9D,GFjOR,SAAsBA,EAASkB,GAC7B,IAAIvD,EAAU,CAAC,EAGe,OAAnBqC,EAAQkB,SACjBvD,EAAU,CAAEuD,OAAQ,WAGtBnB,EAAcC,EAASrC,EACzB,CEyNMgL,CAAa3I,GAEfhR,KAAK0Z,qBAGL7G,EAAMgC,YACR,CAKC+E,aAAajL,GACZ,MAAM,MAAEkE,EAAK,OAAEhG,GAAW7M,KAAK0X,eACzB,QAAE5F,EAAO,YAAEC,EAAclD,GAAyBhC,GAAUA,EAAOG,cAAiB,CAAC,GAGrF,UAAEgF,GAAc,gBAAwB,CAAC,EAEzChB,EF3VV,SAAqBrC,GAEnB,MAAMkL,GAAe,EAAArI,EAAA,MAEfR,EAAU,CACdU,IAAKvH,IACLwH,MAAM,EACNJ,UAAWsI,EACXjI,QAASiI,EACThI,SAAU,EACVK,OAAQ,KACRD,OAAQ,EACRR,gBAAgB,EAChBqI,OAAQ,IA8GZ,SAAuB9I,GACrB,OAAOrH,EAAkB,CACvB+H,IAAK,GAAGV,EAAQU,MAChBC,KAAMX,EAAQW,KAEdC,QAAS,IAAI5T,KAAuB,IAAlBgT,EAAQY,SAAgBmI,cAC1CxI,UAAW,IAAIvT,KAAyB,IAApBgT,EAAQO,WAAkBwI,cAC9C7H,OAAQlB,EAAQkB,OAChBD,OAAQjB,EAAQiB,OAChBb,IAA4B,iBAAhBJ,EAAQI,KAA2C,iBAAhBJ,EAAQI,IAAmB,GAAGJ,EAAQI,WAAQ1S,EAC7FmT,SAAUb,EAAQa,SAClBmI,MAAO,CACLlI,QAASd,EAAQc,QACjBC,YAAaf,EAAQe,YACrBZ,WAAYH,EAAQE,UACpB+I,WAAYjJ,EAAQgB,YAG1B,CAhIkBkI,CAAclJ,IAO9B,OAJIrC,GACFoC,EAAcC,EAASrC,GAGlBqC,CACT,CEsUoBmJ,CAAY,CAC1BrI,UACAC,cACAd,KAAM4B,EAAMY,aACRzB,GAAa,CAAEA,gBAChBrD,IAICyL,EAAiBvH,EAAMiC,YAAcjC,EAAMiC,aASjD,OARIsF,GAA4C,OAA1BA,EAAelI,QACnCnB,EAAcqJ,EAAgB,CAAElI,OAAQ,WAE1ClS,KAAKyZ,aAGL5G,EAAMgC,WAAW7D,GAEVA,CACT,CAMCqJ,uBACC,MAAMxN,EAAS7M,KAAK8M,YACdzI,EAAUwI,GAAUA,EAAOG,aACjC,OAAOjJ,QAAQM,GAAWA,EAAQiW,eACpC,CAKCZ,qBACC,MAAM,MAAE7G,EAAK,OAAEhG,GAAW7M,KAAK0X,cAEzB1G,EAAU6B,EAAMiC,aAClB9D,GAAWnE,GAAUA,EAAO2M,gBAC9B3M,EAAO2M,eAAexI,EAE1B,CAQCqH,YAAYlW,GACX,MAAM,MAAE0Q,EAAK,OAAEhG,GAAW7M,KAAK0X,cAC3B7K,GACF1K,EAAS0K,EAAQgG,EAErB,CAOCuG,qBAAqBmB,KAAWtX,GAC/B,MACMuX,EADUC,KACOna,WACvB,GAAIka,GAAUA,EAAOE,YAAmD,mBAA9BF,EAAOE,WAAWH,GAC1D,OAAOC,EAAOE,WAAWH,GAAQ3L,MAAM5O,KAAMiD,IAElB,oBAArBD,kBAAoCA,mBAAqB,OAAY,oBAAoBuX,sCACnG,EAUF,SAASE,KAKP,OAJA,gBAAwB,iBAAyB,CAC/CC,WAAY,CAAC,EACb/N,SAAKjO,GAEA,IACT,CAOA,SAASsa,GAASrM,GAChB,MAAMgO,EAAWF,KACX1B,EAAS6B,GAAkBD,GAEjC,OADAE,GAAgBF,EAAUhO,GACnBoM,CACT,CASA,SAAS,KAEP,MAAM4B,EAAWF,KAEjB,GAAIE,EAASra,YAAcqa,EAASra,WAAWwa,IAAK,CAClD,MAAMnO,EAAMgO,EAASra,WAAWwa,IAAIrO,gBAEpC,GAAIE,EACF,OAAOA,CAEX,CAGA,OAGF,SAAsBgO,EAAWF,MAO/B,OAkDuBM,EAvDFJ,KAwDXI,GAAWA,EAAQza,YAAcya,EAAQza,WAAWqM,OAxD5BiO,GAAkBD,GAAUnD,YAnd5C,IAodhBqD,GAAgBF,EAAU,IAAIvD,IAIzBwD,GAAkBD,GAkD3B,IAAyBI,CAjDzB,CAXSC,CAAaL,EACtB,CAqEA,SAASC,GAAkBG,GACzB,OAAO,QAAmB,OAAO,IAAM,IAAI3D,IAAO2D,EACpD,CAQA,SAASF,GAAgBE,EAASpO,GAChC,QAAKoO,KACeA,EAAQza,WAAaya,EAAQza,YAAc,CAAC,GACrDqM,IAAMA,GACV,EACT,CC5iBA,MAAMsO,GAAwB,GA+B9B,SAASC,GAAuB7W,GAC9B,MAAM8W,EAAsB9W,EAAQ8W,qBAAuB,GACrDC,EAAmB/W,EAAQgX,aAOjC,IAAIA,EAJJF,EAAoB7Y,SAAQ2W,IAC1BA,EAAYqC,mBAAoB,CAAI,IAMpCD,EADErW,MAAMC,QAAQmW,GACD,IAAID,KAAwBC,GACN,mBAArBA,EACDrP,EAASqP,EAAiBD,IAE1BA,EAGjB,MAAMI,EAxCR,SAA0BF,GACxB,MAAMG,EAAqB,CAAC,EAgB5B,OAdAH,EAAa/Y,SAAQmZ,IACnB,MAAM,KAAEtb,GAASsb,EAEXC,EAAmBF,EAAmBrb,GAIxCub,IAAqBA,EAAiBJ,mBAAqBG,EAAgBH,oBAI/EE,EAAmBrb,GAAQsb,EAAe,IAGrCre,OAAOsF,KAAK8Y,GAAoBrV,KAAIwV,GAAKH,EAAmBG,IACrE,CAsB4BC,CAAiBP,GAMrCQ,EAwCR,SAAmBC,EAAK3Z,GACtB,IAAK,IAAIyD,EAAI,EAAGA,EAAIkW,EAAIjX,OAAQe,IAC9B,IAAyB,IA1CyD,UA0CrEkW,EAAIlW,GA1CwDzF,MA2CvE,OAAOyF,EAIX,OAAQ,CACV,CAhDqBmW,CAAUR,GAC7B,IAAoB,IAAhBM,EAAmB,CACrB,MAAOG,GAAiBT,EAAkBU,OAAOJ,EAAY,GAC7DN,EAAkBnW,KAAK4W,EACzB,CAEA,OAAOT,CACT,CAsBA,SAASW,GAAiBjD,EAAakD,GACrCA,EAAiBlD,EAAY9Y,MAAQ8Y,GAEoB,IAArDgC,GAAsBmB,QAAQnD,EAAY9Y,QAC5C8Y,EAAY1M,UAAUC,GAAyB,IAC/CyO,GAAsB7V,KAAK6T,EAAY9Y,OACV,oBAArB6C,kBAAoCA,mBAAqB,EAAAgU,IAAW,0BAA0BiC,EAAY9Y,QAEtH,CC/FA,MAEMkc,GAAuB,kBAS7B,SAASC,MAAqBC,GAC5B,MAAMC,EAAgBD,EAAQ/S,MAAK,CAACiT,EAAGC,IAAMD,EAAE,GAAKC,EAAE,KAAIvW,KAAIwW,GAAKA,EAAE,KAErE,MAAO,CAAClU,EAAOmU,EAAY,KACzB,MAAMzO,EAAS,GACT0O,EAAQpU,EAAMpC,MAAM,MAE1B,IAAK,IAAIT,EAAIgX,EAAWhX,EAAIiX,EAAMhY,OAAQe,IAAK,CAC7C,MAAMkX,EAAOD,EAAMjX,GAKnB,GAAIkX,EAAKjY,OAAS,KAChB,SAKF,MAAMkY,EAAcV,GAAqB9U,KAAKuV,GAAQA,EAAKvS,QAAQ8R,GAAsB,MAAQS,EAIjG,IAAIC,EAAYC,MAAM,cAAtB,CAIA,IAAK,MAAMC,KAAUT,EAAe,CAClC,MAAMnO,EAAQ4O,EAAOF,GAErB,GAAI1O,EAAO,CACTF,EAAO/I,KAAKiJ,GACZ,KACF,CACF,CAEA,GAAIF,EAAOtJ,QA/Cc,GAgDvB,KAZF,CAcF,CAEA,OAuBJ,SAAqC4D,GACnC,IAAKA,EAAM5D,OACT,MAAO,GAGT,MAAMqY,EAAazU,EAAM/B,MAAM,EAhFF,IAkFvByW,EAAoBD,EAAWA,EAAWrY,OAAS,GAAGuY,SAExDD,GAAqB,gBAAgB5V,KAAK4V,IAC5CD,EAAWlF,MAIbkF,EAAW5X,UAEX,MAAM+X,EAAqBH,EAAWA,EAAWrY,OAAS,GAAGuY,SAM7D,OAJIC,GAAsB,kCAAkC9V,KAAK8V,IAC/DH,EAAWlF,MAGNkF,EAAW/W,KAAIkI,IAAS,IAC1BA,EACHC,SAAUD,EAAMC,UAAY4O,EAAWA,EAAWrY,OAAS,GAAGyJ,SAC9D8O,SAAU/O,EAAM+O,UAAY,OAEhC,CAlDWE,CAA4BnP,EAAO,CAE9C,CAkDA,MAAMoP,GAAsB,cAK5B,SAASC,GAAgBC,GACvB,IACE,OAAKA,GAAoB,mBAAPA,GAGXA,EAAGtd,MAFDod,EAOX,CAJE,MAAOhc,GAGP,OAAOgc,EACT,CACF,CCtHA,MAAM,IAAS,UAwDf,SAASG,KACP,KAAM,UAAW,IACf,OAAO,EAGT,IAIE,OAHA,IAAIC,QACJ,IAAIC,QAAQ,0BACZ,IAAIC,UACG,CAGT,CAFE,MAAOtc,GACP,OAAO,CACT,CACF,CAKA,SAASuc,GAAcxV,GACrB,OAAOA,GAAQ,mDAAmDf,KAAKe,EAAKhL,WAC9E,CC3EA,MAAM,IAAS,UCIT,IAAS,UAETygB,GAAsB,oBAatBC,GAAW,CAAC,EACZC,GAAe,CAAC,EA2CtB,SAASC,GAA0BtV,EAAMzG,GACvC6b,GAASpV,GAAQoV,GAASpV,IAAS,GAClCoV,GAASpV,GAAQxD,KAAKjD,GA1CzB,SAAoByG,GAClB,IAAIqV,GAAarV,GAMjB,OAFAqV,GAAarV,IAAQ,EAEbA,GACN,IAAK,UA2DD,YAAa,IAInB3G,EAAeK,SAAQ,SAAUC,GACzBA,KAAS,GAAO8W,SAItB3R,EAAK,GAAO2R,QAAS9W,GAAO,SAAU4b,GACpC,OAAO,YAAalb,GAClBmb,GAAgB,UAAW,CAAEnb,OAAMV,UAG/B4b,GACFA,EAAsBvP,MAAM,GAAOyK,QAASpW,EAEhD,CACF,GACF,IA5EI,MACF,IAAK,OA+bT,WACE,KAAM,aAAc,IAClB,OAMF,MAAMob,EAAoBD,GAAgBxf,KAAK,KAAM,OAC/C0f,EAAwBC,GAAoBF,GAAmB,GACrE,GAAOG,SAASC,iBAAiB,QAASH,GAAuB,GACjE,GAAOE,SAASC,iBAAiB,WAAYH,GAAuB,GAOpE,CAAC,cAAe,QAAQhc,SAASuG,IAE/B,MAAMT,EAAQ,GAAUS,IAAW,GAAUA,GAAQxL,UAEhD+K,GAAUA,EAAMtG,gBAAmBsG,EAAMtG,eAAe,sBAI7D4F,EAAKU,EAAO,oBAAoB,SAAUsW,GACxC,OAAO,SAEL9V,EACA+V,EACAta,GAEA,GAAa,UAATuE,GAA4B,YAARA,EACtB,IACE,MAAMnD,EAAKzF,KACLge,EAAYvY,EAAGmZ,oCAAsCnZ,EAAGmZ,qCAAuC,CAAC,EAChGC,EAAkBb,EAASpV,GAAQoV,EAASpV,IAAS,CAAEkW,SAAU,GAEvE,IAAKD,EAAe/N,QAAS,CAC3B,MAAMA,EAAUyN,GAAoBF,GACpCQ,EAAe/N,QAAUA,EACzB4N,EAAyBnhB,KAAKyC,KAAM4I,EAAMkI,EAASzM,EACrD,CAEAwa,EAAeC,UAIjB,CAHE,MAAOvd,GAGT,CAGF,OAAOmd,EAAyBnhB,KAAKyC,KAAM4I,EAAM+V,EAAUta,EAC7D,CACF,IAEAqD,EACEU,EACA,uBACA,SAAU2W,GACR,OAAO,SAELnW,EACA+V,EACAta,GAEA,GAAa,UAATuE,GAA4B,YAARA,EACtB,IACE,MAAMnD,EAAKzF,KACLge,EAAWvY,EAAGmZ,qCAAuC,CAAC,EACtDC,EAAiBb,EAASpV,GAE5BiW,IACFA,EAAeC,WAEXD,EAAeC,UAAY,IAC7BC,EAA4BxhB,KAAKyC,KAAM4I,EAAMiW,EAAe/N,QAASzM,GACrEwa,EAAe/N,aAAUpS,SAClBsf,EAASpV,IAImB,IAAjCxL,OAAOsF,KAAKsb,GAAUnZ,eACjBY,EAAGmZ,oCAMhB,CAHE,MAAOrd,GAGT,CAGF,OAAOwd,EAA4BxhB,KAAKyC,KAAM4I,EAAM+V,EAAUta,EAChE,CACF,IACD,GAEL,CA/hBM2a,GACA,MACF,IAAK,OA6KT,WACE,KAAM,mBAAoB,IACxB,OAGF,MAAMC,EAAWC,eAAe7hB,UAEhCqK,EAAKuX,EAAU,QAAQ,SAAUE,GAC/B,OAAO,YAAclc,GACnB,MAAM6K,EAAM7K,EAAK,GACXmc,EAAWpf,KAAK+d,IAAuB,CAE3CxD,OAAQ7W,EAAST,EAAK,IAAMA,EAAK,GAAGoc,cAAgBpc,EAAK,GACzD6K,IAAK7K,EAAK,GACVqc,gBAAiB,CAAC,GAKhB5b,EAASoK,IAA2B,SAAnBsR,EAAQ7E,QAAqBzM,EAAIkP,MAAM,gBAC1Dhd,KAAKuf,wBAAyB,GAGhC,MAAMC,EAA4B,KAEhC,MAAMJ,EAAUpf,KAAK+d,IAErB,GAAKqB,GAImB,IAApBpf,KAAKyf,WAAkB,CACzB,IAGEL,EAAQM,YAAc1f,KAAKkS,MAG7B,CAFE,MAAO3Q,GAET,CAEA6c,GAAgB,MAAO,CACrBnb,KAAMA,EACN0c,aAAc3hB,KAAKC,MACnB2hB,eAAgB5hB,KAAKC,MACrB4hB,IAAK7f,MAET,GA+BF,MA5BI,uBAAwBA,MAA2C,mBAA5BA,KAAK8f,mBAC9CpY,EAAK1H,KAAM,sBAAsB,SAAU6H,GACzC,OAAO,YAAckY,GAEnB,OADAP,IACO3X,EAAS+G,MAAM5O,KAAM+f,EAC9B,CACF,IAEA/f,KAAKye,iBAAiB,mBAAoBe,GAM5C9X,EAAK1H,KAAM,oBAAoB,SAAU6H,GACvC,OAAO,YAAcmY,GACnB,MAAOC,EAAQlZ,GAASiZ,EAElBZ,EAAUpf,KAAK+d,IAMrB,OAJIqB,IACFA,EAAQE,gBAAgBW,EAAOna,eAAiBiB,GAG3Cc,EAAS+G,MAAM5O,KAAMggB,EAC9B,CACF,IAEOb,EAAavQ,MAAM5O,KAAMiD,EAClC,CACF,IAEAyE,EAAKuX,EAAU,QAAQ,SAAUiB,GAC/B,OAAO,YAAcjd,GACnB,MAAMkd,EAAgBngB,KAAK+d,IAW3B,OAVIoC,QAA6BzhB,IAAZuE,EAAK,KACxBkd,EAAcC,KAAOnd,EAAK,IAG5Bmb,GAAgB,MAAO,CACrBnb,OACA2c,eAAgB5hB,KAAKC,MACrB4hB,IAAK7f,OAGAkgB,EAAatR,MAAM5O,KAAMiD,EAClC,CACF,GACF,CA7QMod,GACA,MACF,IAAK,SF2CT,WACE,IAAK3C,KACH,OAAO,EAKT,GAAII,GAAc,GAAOwC,OACvB,OAAO,EAKT,IAAIrQ,GAAS,EACb,MAAMsQ,EAAM,GAAO/B,SAEnB,GAAI+B,GAAuC,mBAAxBA,EAAkB,cACnC,IACE,MAAMC,EAAUD,EAAIE,cAAc,UAClCD,EAAQE,QAAS,EACjBH,EAAII,KAAKC,YAAYJ,GACjBA,EAAQK,eAAiBL,EAAQK,cAAcP,QAEjDrQ,EAAS6N,GAAc0C,EAAQK,cAAcP,QAE/CC,EAAII,KAAKG,YAAYN,EAIvB,CAHE,MAAO1U,IACsB,oBAArB9I,kBAAoCA,mBAC1C,OAAY,kFAAmF8I,EACnG,CAGF,OAAOmE,CACT,EEFO8Q,IAILrZ,EAAK,GAAQ,SAAS,SAAUsZ,GAC9B,OAAO,YAAa/d,GAClB,MAAM,OAAEsX,EAAM,IAAEzM,GAoEtB,SAAwBmT,GACtB,GAAyB,IAArBA,EAAUpc,OACZ,MAAO,CAAE0V,OAAQ,MAAOzM,IAAK,IAG/B,GAAyB,IAArBmT,EAAUpc,OAAc,CAC1B,MAAOiJ,EAAKzJ,GAAW4c,EAEvB,MAAO,CACLnT,IAAKoT,GAAmBpT,GACxByM,OAAQ4G,GAAQ9c,EAAS,UAAY2C,OAAO3C,EAAQkW,QAAQ8E,cAAgB,MAEhF,CAEA,MAAM+B,EAAMH,EAAU,GACtB,MAAO,CACLnT,IAAKoT,GAAmBE,GACxB7G,OAAQ4G,GAAQC,EAAK,UAAYpa,OAAOoa,EAAI7G,QAAQ8E,cAAgB,MAExE,CAvF8BgC,CAAepe,GAEjCqe,EAAc,CAClBre,OACAse,UAAW,CACThH,SACAzM,OAEF8R,eAAgB5hB,KAAKC,OAQvB,OALAmgB,GAAgB,QAAS,IACpBkD,IAIEN,EAAcpS,MAAM,GAAQ3L,GAAMe,MACtCwd,IACCpD,GAAgB,QAAS,IACpBkD,EACH3B,aAAc3hB,KAAKC,MACnBujB,aAEKA,KAERC,IASC,MARArD,GAAgB,QAAS,IACpBkD,EACH3B,aAAc3hB,KAAKC,MACnBwjB,UAKIA,CAAK,GAGjB,CACF,IApHI,MACF,IAAK,WA6QT,WACE,IDjTF,WAME,MAAMC,EAAS,GAAUA,OACnBC,EAAsBD,GAAUA,EAAOE,KAAOF,EAAOE,IAAIC,QAEzDC,EAAgB,YAAa,MAAY,GAAOC,QAAQC,aAAe,GAAOD,QAAQE,aAE5F,OAAQN,GAAuBG,CACjC,CCqSOI,GACH,OAGF,MAAMC,EAAgB,GAAOC,WAuB7B,SAASC,EAA2BC,GAClC,OAAO,YAAcrf,GACnB,MAAM6K,EAAM7K,EAAK4B,OAAS,EAAI5B,EAAK,QAAKvE,EACxC,GAAIoP,EAAK,CAEP,MAAMyU,EAAOC,GACPC,EAAKzb,OAAO8G,GAElB0U,GAAWC,EACXrE,GAAgB,UAAW,CACzBmE,OACAE,MAEJ,CACA,OAAOH,EAAwB1T,MAAM5O,KAAMiD,EAC7C,CACF,CAtCA,GAAOmf,WAAa,YAAcnf,GAChC,MAAMwf,EAAK,GAAOC,SAASC,KAErBJ,EAAOC,GAMb,GALAA,GAAWC,EACXrE,GAAgB,UAAW,CACzBmE,OACAE,OAEEN,EAIF,IACE,OAAOA,EAAcvT,MAAM5O,KAAMiD,EAGnC,CAFE,MAAOuC,GAET,CAEJ,EAqBAkC,EAAK,GAAOqa,QAAS,YAAaM,GAClC3a,EAAK,GAAOqa,QAAS,eAAgBM,EACvC,CA5TMO,GACA,MACF,IAAK,QAyhBPC,GAAqB,GAAOC,QAE5B,GAAOA,QAAU,SAAUC,EAAKjV,EAAKgP,EAAMkG,EAAQvB,GASjD,OARArD,GAAgB,QAAS,CACvB4E,SACAvB,QACA3E,OACAiG,MACAjV,WAGE+U,IAAuBA,GAAmBI,oBAErCJ,GAAmBjU,MAAM5O,KAAMkjB,UAI1C,EAEA,GAAOJ,QAAQK,yBAA0B,EA1iBrC,MACF,IAAK,qBA+iBPC,GAAkC,GAAOC,qBAEzC,GAAOA,qBAAuB,SAAU9hB,GAGtC,OAFA6c,GAAgB,qBAAsB7c,KAElC6hB,KAAoCA,GAAgCH,oBAE/DG,GAAgCxU,MAAM5O,KAAMkjB,UAIvD,EAEA,GAAOG,qBAAqBF,yBAA0B,EA1jBlD,MACF,SAC+B,oBAArBngB,kBAAoCA,mBAAqB,OAAY,gCAAiC4F,GAGpH,CAUE0a,CAAW1a,EACb,CAGA,SAASwV,GAAgBxV,EAAM+C,GAC7B,GAAK/C,GAASoV,GAASpV,GAIvB,IAAK,MAAMkI,KAAWkN,GAASpV,IAAS,GACtC,IACEkI,EAAQnF,EAOV,CANE,MAAOpK,IACsB,oBAArByB,kBAAoCA,mBAC1C,QACE,0DAA0D4F,YAAe4U,GAAgB1M,aACzFvP,EAEN,CAEJ,CA2EA,SAAS4f,GAAQzhB,EAAKmC,GACpB,QAASnC,GAAsB,iBAARA,KAAsB,EAAOmC,EACtD,CAEA,SAASqf,GAAmBqC,GAC1B,MAAwB,iBAAbA,EACFA,EAGJA,EAIDpC,GAAQoC,EAAU,OACbA,EAASzV,IAGdyV,EAASjmB,SACJimB,EAASjmB,WAGX,GAXE,EAYX,CA8HA,IAAIklB,GAsDAgB,GACAC,GAwEJ,SAASlF,GAAoBzN,EAAS4S,GAAiB,GACrD,OAAQ5Y,IAIN,IAAKA,GAAS2Y,KAAsB3Y,EAClC,OAIF,GA3CJ,SAA4BA,GAE1B,GAAmB,aAAfA,EAAMlC,KACR,OAAO,EAGT,IACE,MAAMC,EAASiC,EAAMjC,OAErB,IAAKA,IAAWA,EAAOhD,QACrB,OAAO,EAKT,GAAuB,UAAnBgD,EAAOhD,SAA0C,aAAnBgD,EAAOhD,SAA0BgD,EAAO8a,kBACxE,OAAO,CAKX,CAHE,MAAOpiB,GAGT,CAEA,OAAO,CACT,CAmBQqiB,CAAmB9Y,GACrB,OAGF,MAAM3K,EAAsB,aAAf2K,EAAMlC,KAAsB,QAAUkC,EAAMlC,WAGjClK,IAApB8kB,IAlFR,SAA4CK,EAAUC,GAEpD,IAAKD,EACH,OAAO,EAIT,GAAIA,EAASjb,OAASkb,EAAQlb,KAC5B,OAAO,EAGT,IAGE,GAAIib,EAAShb,SAAWib,EAAQjb,OAC9B,OAAO,CAKX,CAHE,MAAOtH,GAGT,CAKA,OAAO,CACT,CAkEawiB,CAAmCN,GAAmB3Y,MAT7DgG,EAAQ,CACNhG,MAAOA,EACP3K,OACA6jB,OAAQN,IAEVD,GAAoB3Y,GActBmZ,aAAaT,IACbA,GAAkB,GAAOU,YAAW,KAClCV,QAAkB9kB,CAAS,GAjHR,IAkHD,CAExB,CAsGA,IAAImkB,GAAqB,KAyBrBO,GAAkC,KCjmBtC,MAAMe,WAAoBviB,MAGvByK,YAAa7D,EAAS4b,EAAW,QAChCC,MAAM7b,GAASxI,KAAKwI,QAAUA,EAC9BxI,KAAKG,gBAAkB9C,UAAUgP,YAAYlM,KAI7C/C,OAAOknB,eAAetkB,gBAAiB3C,WACvC2C,KAAKokB,SAAWA,CAClB,ECTF,MAAMG,GAAY,kEAelB,SAAS,GAAYC,EAAKC,GAAe,GACvC,MAAM,KAAEC,EAAI,KAAEC,EAAI,KAAEC,EAAI,KAAEC,EAAI,UAAEC,EAAS,SAAEC,EAAQ,UAAEC,GAAcR,EACnE,MACE,GAAGO,OAAcC,IAAYP,GAAgBG,EAAO,IAAIA,IAAS,MAC7DF,IAAOG,EAAO,IAAIA,IAAS,MAAMF,EAAO,GAAGA,KAAUA,IAAOG,GAEpE,CAmCA,SAASG,GAAkBC,GACzB,MAAO,CACLH,SAAUG,EAAWH,SACrBC,UAAWE,EAAWF,WAAa,GACnCJ,KAAMM,EAAWN,MAAQ,GACzBF,KAAMQ,EAAWR,KACjBG,KAAMK,EAAWL,MAAQ,GACzBF,KAAMO,EAAWP,MAAQ,GACzBG,UAAWI,EAAWJ,UAE1B,CC5CA,SAASK,GAAUve,EAAOwe,EAAQ,IAAKC,EAAgB,KACrD,IAEE,OAAOC,GAAM,GAAI1e,EAAOwe,EAAOC,EAGjC,CAFE,MAAOvZ,GACP,MAAO,CAAEyZ,MAAO,yBAAyBzZ,KAC3C,CACF,CAGA,SAAS0Z,GAEPC,EAEAL,EAAQ,EAERM,EAAU,QAEV,MAAMC,EAAaR,GAAUM,EAAQL,GAErC,OAsNgBre,EAtNH4e,EA+Mf,SAAoB5e,GAElB,QAAS6e,UAAU7e,GAAOV,MAAM,SAASxB,MAC3C,CAKSghB,CAAWC,KAAKC,UAAUhf,IAvNN2e,EAClBF,GAAgBC,EAAQL,EAAQ,EAAGM,GAGrCC,EAkNT,IAAkB5e,CAjNlB,CAWA,SAASue,GACPrkB,EACA8F,EACAqe,EAAQ,IACRC,EAAgB,IAChBW,EC5DF,WACE,MAAMC,EAAgC,mBAAZC,QACpBC,EAAQF,EAAa,IAAIC,QAAY,GAgC3C,MAAO,CA/BP,SAAiBxmB,GACf,GAAIumB,EACF,QAAIE,EAAMC,IAAI1mB,KAGdymB,EAAME,IAAI3mB,IACH,GAGT,IAAK,IAAIkG,EAAI,EAAGA,EAAIugB,EAAMthB,OAAQe,IAEhC,GADcugB,EAAMvgB,KACNlG,EACZ,OAAO,EAIX,OADAymB,EAAM/gB,KAAK1F,IACJ,CACT,EAEA,SAAmBA,GACjB,GAAIumB,EACFE,EAAMG,OAAO5mB,QAEb,IAAK,IAAIkG,EAAI,EAAGA,EAAIugB,EAAMthB,OAAQe,IAChC,GAAIugB,EAAMvgB,KAAOlG,EAAK,CACpBymB,EAAMlK,OAAOrW,EAAG,GAChB,KACF,CAGN,EAEF,CDyBS2gB,IAEP,MAAOC,EAASC,GAAaT,EAG7B,GAAc,OAAVjf,GAAmB,CAAC,SAAU,UAAW,UAAUS,gBAAgBT,KnBuFjD,iBADT3D,EmBtF2E2D,InBuFtD3D,GAAQA,GmBtFxC,OAAO2D,EnBqFX,IAAe3D,EmBlFb,MAAMsjB,EA6FR,SACEzlB,EAGA8F,GAEA,IACE,GAAY,WAAR9F,GAAoB8F,GAA0B,iBAAVA,GAAsB,EAAS4f,QACrE,MAAO,WAGT,GAAY,kBAAR1lB,EACF,MAAO,kBAMT,QAAsB,IAAX,EAAAlB,GAA0BgH,IAAU,EAAAhH,EAC7C,MAAO,WAIT,GAAsB,oBAAXF,QAA0BkH,IAAUlH,OAC7C,MAAO,WAIT,GAAwB,oBAAb2e,UAA4BzX,IAAUyX,SAC/C,MAAO,aAIT,GnBvDJ,SAA0Bpb,GACxB,OAAOO,EAAcP,IAAQ,gBAAiBA,GAAO,mBAAoBA,GAAO,oBAAqBA,CACvG,CmBqDQwjB,CAAiB7f,GACnB,MAAO,mBAGT,GAAqB,iBAAVA,GAAsBA,GAAUA,EACzC,MAAO,QAIT,QAAc,IAAVA,EACF,MAAO,cAGT,GAAqB,mBAAVA,EACT,MAAO,cAAcyW,GAAgBzW,MAGvC,GAAqB,iBAAVA,EACT,MAAO,IAAIC,OAAOD,MAIpB,GAAqB,iBAAVA,EACT,MAAO,YAAYC,OAAOD,MAO5B,MAAM8f,EAcV,SAA4B9f,GAC1B,MAAM1J,EAAYD,OAAO0pB,eAAe/f,GAExC,OAAO1J,EAAYA,EAAUgP,YAAYlM,KAAO,gBAClD,CAlBoB4mB,CAAmBhgB,GAGnC,MAAI,qBAAqBQ,KAAKsf,GACrB,iBAAiBA,KAGnB,WAAWA,IAGpB,CAFE,MAAO/a,GACP,MAAO,yBAAyBA,IAClC,CACF,CAvKsBkb,CAAe/lB,EAAK8F,GAIxC,IAAK2f,EAAYO,WAAW,YAC1B,OAAOP,EAQT,GAAI,EAAwC,8BAC1C,OAAO3f,EAMT,MAAMmgB,EAC2D,iBAAxD,EAAkD,wCACpD,EAAoD,wCACrD9B,EAGN,GAAuB,IAAnB8B,EAEF,OAAOR,EAAYnc,QAAQ,UAAW,IAIxC,GAAIic,EAAQzf,GACV,MAAO,eAIT,MAAMogB,EAAkBpgB,EACxB,GAAIogB,GAAqD,mBAA3BA,EAAgBrN,OAC5C,IAGE,OAAOwL,GAAM,GAFK6B,EAAgBrN,SAENoN,EAAiB,EAAG7B,EAAeW,EAGjE,CAFE,MAAOla,GAET,CAMF,MAAM6Z,EAAc3gB,MAAMC,QAAQ8B,GAAS,GAAK,CAAC,EACjD,IAAIqgB,EAAW,EAIf,MAAMC,EAAY9e,EAAqBxB,GAEvC,IAAK,MAAMugB,KAAYD,EAAW,CAEhC,IAAKjqB,OAAOC,UAAUyE,eAAevE,KAAK8pB,EAAWC,GACnD,SAGF,GAAIF,GAAY/B,EAAe,CAC7BM,EAAW2B,GAAY,oBACvB,KACF,CAGA,MAAMC,EAAaF,EAAUC,GAC7B3B,EAAW2B,GAAYhC,GAAMgC,EAAUC,EAAYL,EAAiB,EAAG7B,EAAeW,GAEtFoB,GACF,CAMA,OAHAX,EAAU1f,GAGH4e,CACT,CEnJA,SAAS6B,GAAeC,EAASC,EAAQ,IACvC,MAAO,CAACD,EAASC,EACnB,CAOA,SAASC,GAAkBC,EAAUC,GACnC,MAAOJ,EAASC,GAASE,EACzB,MAAO,CAACH,EAAS,IAAIC,EAAOG,GAC9B,CAQA,SAASC,GACPF,EACAzlB,GAEA,MAAM4lB,EAAgBH,EAAS,GAE/B,IAAK,MAAMI,KAAgBD,EAIzB,GAFe5lB,EAAS6lB,EADCA,EAAa,GAAGpf,MAIvC,OAAO,EAIX,OAAO,CACT,CAYA,SAASqf,GAAWrhB,EAAOshB,GAEzB,OADaA,GAAe,IAAIC,aACpBC,OAAOxhB,EACrB,CAKA,SAASyhB,GAAkBT,EAAUM,GACnC,MAAOI,EAAYZ,GAASE,EAG5B,IAAIW,EAAQzC,KAAKC,UAAUuC,GAE3B,SAASE,EAAOC,GACO,iBAAVF,EACTA,EAAwB,iBAATE,EAAoBF,EAAQE,EAAO,CAACR,GAAWM,EAAOL,GAAcO,GAEnFF,EAAMnjB,KAAqB,iBAATqjB,EAAoBR,GAAWQ,EAAMP,GAAeO,EAE1E,CAEA,IAAK,MAAMve,KAAQwd,EAAO,CACxB,MAAOgB,EAAaC,GAAWze,EAI/B,GAFAse,EAAO,KAAK1C,KAAKC,UAAU2C,QAEJ,iBAAZC,GAAwBA,aAAmBje,WACpD8d,EAAOG,OACF,CACL,IAAIC,EACJ,IACEA,EAAqB9C,KAAKC,UAAU4C,EAMtC,CALE,MAAOpnB,GAIPqnB,EAAqB9C,KAAKC,UAAUZ,GAAUwD,GAChD,CACAH,EAAOI,EACT,CACF,CAEA,MAAwB,iBAAVL,EAAqBA,EAGrC,SAAuBM,GACrB,MAAMC,EAAcD,EAAQE,QAAO,CAACC,EAAKC,IAAQD,EAAMC,EAAIpkB,QAAQ,GAE7DqkB,EAAS,IAAIxe,WAAWoe,GAC9B,IAAIK,EAAS,EACb,IAAK,MAAMC,KAAUP,EACnBK,EAAOvnB,IAAIynB,EAAQD,GACnBA,GAAUC,EAAOvkB,OAGnB,OAAOqkB,CACT,CAd6CG,CAAcd,EAC3D,CA2DA,SAASe,GACP1T,EACAsS,GAEA,MAAMkB,EAAoC,iBAApBxT,EAAWjK,KAAoBsc,GAAWrS,EAAWjK,KAAMuc,GAAetS,EAAWjK,KAE3G,MAAO,CACLhC,EAAkB,CAChBf,KAAM,aACN/D,OAAQukB,EAAOvkB,OACfyJ,SAAUsH,EAAWtH,SACrBib,aAAc3T,EAAW4T,YACzBC,gBAAiB7T,EAAW8T,iBAE9BN,EAEJ,CAEA,MAAMO,GAAiC,CACrC3Y,QAAS,UACT4Y,SAAU,UACVhU,WAAY,aACZhI,YAAa,cACb9C,MAAO,QACP+e,cAAe,WACfC,YAAa,UACbC,QAAS,UACTC,aAAc,SACdC,iBAAkB,SAClBC,SAAU,WAMZ,SAASC,GAA+BvhB,GACtC,OAAO+gB,GAA+B/gB,EACxC,CAGA,SAASwhB,GAAgCC,GACvC,IAAKA,IAAoBA,EAAgBC,IACvC,OAEF,MAAM,KAAEnqB,EAAI,QAAEsX,GAAY4S,EAAgBC,IAC1C,MAAO,CAAEnqB,OAAMsX,UACjB,CC9KA,SAAS8S,GACP/F,EAGAgG,EAAkB,CAAC,GAMnB,MAAMC,EAAoC,iBAApBD,EAA+BA,EAAkBA,EAAgBC,OACjFC,EACuB,iBAApBF,GAAiCA,EAAgBG,UAAwBH,EAAgBG,UAAUL,SAAtC5rB,EAEtE,OAAO+rB,GAAkB,GAlC3B,SAA4BjG,GAC1B,MAAO,GART,SAA4BA,GAC1B,MAAMO,EAAWP,EAAIO,SAAW,GAAGP,EAAIO,YAAc,GAC/CF,EAAOL,EAAIK,KAAO,IAAIL,EAAIK,OAAS,GACzC,MAAO,GAAGE,MAAaP,EAAIE,OAAOG,IAAOL,EAAIG,KAAO,IAAIH,EAAIG,OAAS,SACvE,CAIYiG,CAAmBpG,KAAOA,EAAIM,qBAC1C,CAgC8B+F,CAAmBrG,MA7BjD,SAAsBA,EAAKkG,GACzB,OnBiEiBjF,EmBjEA,CAGfqF,WAAYtG,EAAIQ,UAChB+F,eApBuB,OAqBnBL,GAAW,CAAEM,cAAe,GAAGN,EAAQvqB,QAAQuqB,EAAQjT,YnB6DtDra,OAAOsF,KAAK+iB,GAChBtf,KAAIlF,GAAO,GAAGgqB,mBAAmBhqB,MAAQgqB,mBAAmBxF,EAAOxkB,QACnEsE,KAAK,KAHV,IAAmBkgB,CmB1DnB,CAqByDyF,CAAa1G,EAAKkG,IAC3E,CCuEA,MAAMS,GAA0B,IAAIC,QC/G9BC,GAAqB,8DAiC3B,MAAMC,GAMHlf,SAAUpM,KAAKurB,cAAgB,CAAC,CAAE,CAGlCjc,UAAWtP,KAAKwrB,0BAA2B,CAAM,CAGjD/b,UAAWzP,KAAKyrB,eAAiB,CAAE,CAGnC/b,UAAW1P,KAAK0rB,UAAY,CAAC,CAAE,CAG/B/b,UAAW3P,KAAK2rB,OAAS,CAAC,CAAE,CAO5Btf,YAAYhI,GAEX,GAFqBinB,GAAWjuB,UAAU+O,OAAO7O,KAAKyC,MAAMsrB,GAAWjuB,UAAUiS,QAAQ/R,KAAKyC,MAAMsrB,GAAWjuB,UAAUoS,QAAQlS,KAAKyC,MAAMsrB,GAAWjuB,UAAUqS,QAAQnS,KAAKyC,MAAMsrB,GAAWjuB,UAAUsS,QAAQpS,KAAKyC,MACtNA,KAAKsM,SAAWjI,EACZA,EAAQmgB,IAAK,CACfxkB,KAAK4rB,KNiCX,SAAiBrJ,GACf,MAAM2C,EAA6B,iBAAT3C,EAtE5B,SAAuB/b,GACrB,MAAMwW,EAAQuH,GAAUsH,KAAKrlB,GAE7B,IAAKwW,EACH,MAAM,IAAImH,GAAY,uBAAuB3d,KAG/C,MAAOue,EAAUC,EAAWJ,EAAO,GAAIF,EAAMG,EAAO,GAAIiH,GAAY9O,EAAMtW,MAAM,GAChF,IAAIie,EAAO,GACPG,EAAYgH,EAEhB,MAAMzlB,EAAQye,EAAUze,MAAM,KAM9B,GALIA,EAAMxB,OAAS,IACjB8f,EAAOte,EAAMK,MAAM,GAAI,GAAGnB,KAAK,KAC/Buf,EAAYze,EAAM2R,OAGhB8M,EAAW,CACb,MAAMiH,EAAejH,EAAU9H,MAAM,QACjC+O,IACFjH,EAAYiH,EAAa,GAE7B,CAEA,OAAO9G,GAAkB,CAAEP,OAAME,OAAMD,OAAMG,YAAWD,OAAME,SAAUA,EAAWC,aACrF,CA6CgDgH,CAAczJ,GAAQ0C,GAAkB1C,GAEtF,OAjCF,SAAqBiC,GACnB,GAAkC,oBAArBxhB,mBAAoCA,iBAC/C,OAGF,MAAM,KAAE6hB,EAAI,UAAEC,EAAS,SAAEC,GAAaP,EAStC,GAP2B,CAAC,WAAY,YAAa,OAAQ,aAC1CliB,SAAQ2pB,IACzB,IAAKzH,EAAIyH,GACP,MAAM,IAAI9H,GAAY,uBAAuB8H,YAC/C,KAGGnH,EAAU9H,MAAM,SACnB,MAAM,IAAImH,GAAY,yCAAyCW,KAGjE,IApFF,SAAyBC,GACvB,MAAoB,SAAbA,GAAoC,UAAbA,CAChC,CAkFOmH,CAAgBnH,GACnB,MAAM,IAAIZ,GAAY,wCAAwCY,KAGhE,GAAIF,GAAQsH,MAAMC,SAASvH,EAAM,KAC/B,MAAM,IAAIV,GAAY,oCAAoCU,IAI9D,CAKEwH,CAAYnH,GACLA,CACT,CMrCkB,CAAQ7gB,EAAQmgB,KAC5B,MAAM1W,EAAMyc,GAAsCvqB,KAAK4rB,KAAMvnB,GAC7DrE,KAAKssB,WAAajoB,EAAQkoB,UAAU,CAClCC,mBAAoBxsB,KAAKwsB,mBAAmB5tB,KAAKoB,SAC9CqE,EAAQooB,iBACX3e,OAEJ,MAC+B,oBAArB9K,kBAAoCA,mBAAqB,OAAY,gDAEjF,CAMCkV,iBAAiB5O,EAAW0M,EAAMnD,GAEjC,GAAIjH,EAAwBtC,GAE1B,aAD6B,oBAArBtG,kBAAoCA,mBAAqB,EAAAgU,IAAWqU,KAI9E,IAAIngB,EAAU8K,GAAQA,EAAK/K,SAU3B,OARAjL,KAAK0sB,SACH1sB,KAAK2sB,mBAAmBrjB,EAAW0M,GAChChS,MAAK8G,GAAS9K,KAAK4sB,cAAc9hB,EAAOkL,EAAMnD,KAC9C7O,MAAKiM,IACJ/E,EAAU+E,CAAM,KAIf/E,CACT,CAKCqN,eACC/P,EAEAjG,EACAyT,EACAnD,GAEA,IAAI3H,EAAU8K,GAAQA,EAAK/K,SAE3B,MAAM4hB,EAAgB,EAAYrkB,GAC9BxI,KAAK8sB,iBAAiB9lB,OAAOwB,GAAUjG,EAAOyT,GAC9ChW,KAAK2sB,mBAAmBnkB,EAASwN,GAUrC,OARAhW,KAAK0sB,SACHG,EACG7oB,MAAK8G,GAAS9K,KAAK4sB,cAAc9hB,EAAOkL,EAAMnD,KAC9C7O,MAAKiM,IACJ/E,EAAU+E,CAAM,KAIf/E,CACT,CAKCsN,aAAa1N,EAAOkL,EAAMnD,GAEzB,GAAImD,GAAQA,EAAKsC,mBAAqB1M,EAAwBoK,EAAKsC,mBAEjE,aAD6B,oBAArBtV,kBAAoCA,mBAAqB,EAAAgU,IAAWqU,KAI9E,IAAIngB,EAAU8K,GAAQA,EAAK/K,SAQ3B,OANAjL,KAAK0sB,SACH1sB,KAAK4sB,cAAc9hB,EAAOkL,EAAMnD,GAAO7O,MAAKiM,IAC1C/E,EAAU+E,CAAM,KAIb/E,CACT,CAKCsO,eAAexI,GACThR,KAAK+sB,aAKuB,iBAApB/b,EAAQc,SACU,oBAArB9O,kBAAoCA,mBAAqB,OAAY,+DAE7EhD,KAAKgtB,YAAYhc,GAEjBD,EAAcC,EAAS,CAAEW,MAAM,MATF,oBAArB3O,kBAAoCA,mBAAqB,OAAY,6CAWjF,CAKCiqB,SACC,OAAOjtB,KAAK4rB,IACd,CAKC5e,aACC,OAAOhN,KAAKsM,QACd,CAOC4gB,iBACC,OAAOltB,KAAKsM,SAASqe,SACvB,CAKCwC,eACC,OAAOntB,KAAKssB,UACd,CAKCc,MAAMC,GACL,MAAMd,EAAYvsB,KAAKssB,WACvB,OAAIC,EACKvsB,KAAKstB,wBAAwBD,GAASrpB,MAAKupB,GACzChB,EAAUa,MAAMC,GAASrpB,MAAKwpB,GAAoBD,GAAkBC,MAGtE,GAAoB,EAE/B,CAKCC,MAAMJ,GACL,OAAOrtB,KAAKotB,MAAMC,GAASrpB,MAAKiM,IAC9BjQ,KAAKgN,aAAapK,SAAU,EACrBqN,IAEX,CAKC0H,oBACK3X,KAAK+sB,eAAiB/sB,KAAKwrB,2BAC7BxrB,KAAKurB,cZ1JX,SAA2BlQ,GACzB,MAAMc,EAAmB,CAAC,EAS1B,OAPAd,EAAa/Y,SAAQ2W,IAEfA,GACFiD,GAAiBjD,EAAakD,EAChC,IAGKA,CACT,CY+I2BxE,CAAkB3X,KAAKsM,SAAS+O,cACrDrb,KAAKwrB,0BAA2B,EAEpC,CAOCkC,mBAAmBC,GAClB,OAAO3tB,KAAKurB,cAAcoC,EAC5B,CAKC/gB,eAAeqM,GACd,IACE,OAAQjZ,KAAKurB,cAActS,EAAYrY,KAAS,IAIlD,CAHE,MAAO4E,GAEP,OAD6B,oBAArBxC,kBAAoCA,mBAAqB,OAAY,+BAA+BiW,EAAYrY,8BACjH,IACT,CACF,CAKCgtB,eAAe3U,GACdiD,GAAiBjD,EAAajZ,KAAKurB,cACrC,CAKCsC,UAAU/iB,EAAOkL,EAAO,CAAC,GACxB,GAAIhW,KAAK4rB,KAAM,CACb,IAAIkC,EClOV,SACEhjB,EACA0Z,EACAuJ,EACAtD,GAEA,MAAMC,EAAUN,GAAgC2D,GAS1CC,EAAYljB,EAAMlC,MAAuB,iBAAfkC,EAAMlC,KAA0BkC,EAAMlC,KAAO,SAlD/E,SAAiCkC,EAAO4f,GACjCA,IAGL5f,EAAMwf,IAAMxf,EAAMwf,KAAO,CAAC,EAC1Bxf,EAAMwf,IAAInqB,KAAO2K,EAAMwf,IAAInqB,MAAQuqB,EAAQvqB,KAC3C2K,EAAMwf,IAAI7S,QAAU3M,EAAMwf,IAAI7S,SAAWiT,EAAQjT,QACjD3M,EAAMwf,IAAIjP,aAAe,IAAKvQ,EAAMwf,IAAIjP,cAAgB,MAASqP,EAAQrP,cAAgB,IACzFvQ,EAAMwf,IAAI2D,SAAW,IAAKnjB,EAAMwf,IAAI2D,UAAY,MAASvD,EAAQuD,UAAY,IAE/E,CA0CEC,CAAwBpjB,EAAOijB,GAAYA,EAASzD,KAEpD,MAAM6D,EJwJR,SACErjB,EACA4f,EACAD,EACAjG,GAEA,MAAMpO,EAAyBtL,EAAMqL,uBAAyBrL,EAAMqL,sBAAsBC,uBAC1F,MAAO,CACLnL,SAAUH,EAAMG,SAChBmjB,SAAS,IAAIpwB,MAAO+b,iBAChB2Q,GAAW,CAAEJ,IAAKI,QAChBD,GAAU,CAAEjG,IAAK,GAAYA,OAC/BpO,GAA0B,CAC5BH,MAAOtM,EAAkB,IAAKyM,KAGpC,CIxK0BiY,CAA2BvjB,EAAO4f,EAASD,EAAQjG,GAS3E,cAHO1Z,EAAMqL,sBAGNqR,GAAe2G,EAAiB,CADrB,CAAC,CAAEvlB,KAAMolB,GAAaljB,IAE1C,CDqMgBwjB,CAAoBxjB,EAAO9K,KAAK4rB,KAAM5rB,KAAKsM,SAASqe,UAAW3qB,KAAKsM,SAASme,QAEvF,IAAK,MAAM7U,KAAcI,EAAKuY,aAAe,GAC3CT,EAAMnG,GACJmG,EACAxE,GACE1T,EACA5V,KAAKsM,SAASmgB,kBAAoBzsB,KAAKsM,SAASmgB,iBAAiBvE,cAKvE,MAAMsG,EAAUxuB,KAAKyuB,cAAcX,GAC/BU,GACFA,EAAQxqB,MAAK0qB,GAAgB1uB,KAAK4Y,KAAK,iBAAkB9N,EAAO4jB,IAAe,KAEnF,CACF,CAKC1B,YAAYhc,GACX,GAAIhR,KAAK4rB,KAAM,CACb,MAAMkC,EChRZ,SACE9c,EACAwT,EACAuJ,EACAtD,GAEA,MAAMC,EAAUN,GAAgC2D,GAUhD,OAAOvG,GATiB,CACtB4G,SAAS,IAAIpwB,MAAO+b,iBAChB2Q,GAAW,CAAEJ,IAAKI,QAChBD,GAAU,CAAEjG,IAAK,GAAYA,KAME,CAFrC,eAAgBxT,EAAU,CAAC,CAAEpI,KAAM,YAAcoI,GAAW,CAAC,CAAEpI,KAAM,WAAaoI,IAGtF,CD+PkB2d,CAAsB3d,EAAShR,KAAK4rB,KAAM5rB,KAAKsM,SAASqe,UAAW3qB,KAAKsM,SAASme,QACxFzqB,KAAKyuB,cAAcX,EAC1B,CACF,CAKCtB,mBAAmBtd,EAAQ0f,EAAUC,GAGpC,GAAI7uB,KAAKsM,SAASwiB,kBAAmB,CAOnC,MAAM7tB,EAAM,GAAGiO,KAAU0f,KACI,oBAArB5rB,kBAAoCA,mBAAqB,EAAAgU,IAAW,oBAAoB/V,MAGhGjB,KAAK0rB,UAAUzqB,GAAOjB,KAAK0rB,UAAUzqB,GAAO,GAAK,CACnD,CACF,CAOC8tB,GAAGC,EAAM7sB,GACHnC,KAAK2rB,OAAOqD,KACfhvB,KAAK2rB,OAAOqD,GAAQ,IAItBhvB,KAAK2rB,OAAOqD,GAAM5pB,KAAKjD,EACzB,CAKCyW,KAAKoW,KAASC,GACTjvB,KAAK2rB,OAAOqD,IAEdhvB,KAAK2rB,OAAOqD,GAAM1sB,SAAQH,GAAYA,KAAY8sB,IAEtD,CAGCC,wBAAwBle,EAASlG,GAChC,IAAIqkB,GAAU,EACVC,GAAU,EACd,MAAMC,EAAavkB,EAAMxB,WAAawB,EAAMxB,UAAUyB,OAEtD,GAAIskB,EAAY,CACdD,GAAU,EAEV,IAAK,MAAME,KAAMD,EAAY,CAC3B,MAAM7jB,EAAY8jB,EAAG9jB,UACrB,GAAIA,IAAmC,IAAtBA,EAAUC,QAAmB,CAC5C0jB,GAAU,EACV,KACF,CACF,CACF,CAKA,MAAMI,EAAwC,OAAnBve,EAAQkB,QACNqd,GAAyC,IAAnBve,EAAQiB,QAAkBsd,GAAsBJ,KAGjGpe,EAAcC,EAAS,IACjBme,GAAW,CAAEjd,OAAQ,WACzBD,OAAQjB,EAAQiB,QAAUud,OAAOJ,GAAWD,KAE9CnvB,KAAKwZ,eAAexI,GAExB,CAYCsc,wBAAwBD,GACvB,OAAO,IAAIte,GAAYC,IACrB,IAAIygB,EAAS,EACb,MAEMC,EAAWC,aAAY,KACA,GAAvB3vB,KAAKyrB,gBACPmE,cAAcF,GACd1gB,GAAQ,KAERygB,GAPS,EAQLpC,GAAWoC,GAAUpC,IACvBuC,cAAcF,GACd1gB,GAAQ,IAEZ,GAZW,EAaL,GAEZ,CAGC+d,aACC,OAAqC,IAA9B/sB,KAAKgN,aAAapK,cAAmClE,IAAdsB,KAAK4rB,IACrD,CAgBCiE,cAAc/kB,EAAOkL,EAAMnD,GAC1B,MAAMxO,EAAUrE,KAAKgN,aACfqO,EAAeje,OAAOsF,KAAK1C,KAAKurB,eAItC,OAHKvV,EAAKqF,cAAgBA,EAAaxW,OAAS,IAC9CmR,EAAKqF,aAAeA,GDtZ1B,SACEhX,EACAyG,EACAkL,EACAnD,GAEA,MAAM,eAAEid,EAAiB,EAAC,oBAAEC,EAAsB,KAAS1rB,EACrD2rB,EAAW,IACZllB,EACHG,SAAUH,EAAMG,UAAY+K,EAAK/K,UAAYd,IAC7CoH,UAAWzG,EAAMyG,YAAa,WAE1B8J,EAAerF,EAAKqF,cAAgBhX,EAAQgX,aAAalV,KAAIP,GAAKA,EAAEzF,QAuD5E,SAA4B2K,EAAOzG,GACjC,MAAM,YAAE0N,EAAW,QAAED,EAAO,KAAEme,EAAI,eAAEC,EAAiB,KAAQ7rB,EAEvD,gBAAiByG,IACrBA,EAAMiH,YAAc,gBAAiB1N,EAAU0N,EAAclD,QAGzCnQ,IAAlBoM,EAAMgH,cAAqCpT,IAAZoT,IACjChH,EAAMgH,QAAUA,QAGCpT,IAAfoM,EAAMmlB,WAA+BvxB,IAATuxB,IAC9BnlB,EAAMmlB,KAAOA,GAGXnlB,EAAMtC,UACRsC,EAAMtC,QAAUjC,EAASuE,EAAMtC,QAAS0nB,IAG1C,MAAM5mB,EAAYwB,EAAMxB,WAAawB,EAAMxB,UAAUyB,QAAUD,EAAMxB,UAAUyB,OAAO,GAClFzB,GAAaA,EAAUvC,QACzBuC,EAAUvC,MAAQR,EAAS+C,EAAUvC,MAAOmpB,IAG9C,MAAMvyB,EAAUmN,EAAMnN,QAClBA,GAAWA,EAAQmQ,MACrBnQ,EAAQmQ,IAAMvH,EAAS5I,EAAQmQ,IAAKoiB,GAExC,CAjFEC,CAAmBH,EAAU3rB,GAgK/B,SAAmCyG,EAAOslB,GACpCA,EAAiBvrB,OAAS,IAC5BiG,EAAMwf,IAAMxf,EAAMwf,KAAO,CAAC,EAC1Bxf,EAAMwf,IAAIjP,aAAe,IAAKvQ,EAAMwf,IAAIjP,cAAgB,MAAQ+U,GAEpE,CApKEC,CAA0BL,EAAU3U,QAGjB3c,IAAfoM,EAAMlC,MAoFZ,SAA4BkC,EAAOwlB,GACjC,MAAMC,EAAa,qBAEnB,IAAKA,EACH,OAGF,IAAIC,EACJ,MAAMC,EAA+BtF,GAAwB9pB,IAAIivB,GAC7DG,EACFD,EAA0BC,GAE1BD,EAA0B,IAAI1mB,IAC9BqhB,GAAwBxpB,IAAI2uB,EAAaE,IAI3C,MAAME,EAAqBtzB,OAAOsF,KAAK6tB,GAAYxH,QAAO,CAACC,EAAK2H,KAC9D,IAAIC,EACJ,MAAMC,EAAoBL,EAAwBnvB,IAAIsvB,GAClDE,EACFD,EAAcC,GAEdD,EAAcN,EAAYK,GAC1BH,EAAwB7uB,IAAIgvB,EAAmBC,IAGjD,IAAK,IAAIhrB,EAAIgrB,EAAY/rB,OAAS,EAAGe,GAAK,EAAGA,IAAK,CAChD,MAAMkrB,EAAaF,EAAYhrB,GAC/B,GAAIkrB,EAAWxiB,SAAU,CACvB0a,EAAI8H,EAAWxiB,UAAYiiB,EAAWI,GACtC,KACF,CACF,CACA,OAAO3H,CAAG,GACT,CAAC,GAGE+H,EAAiB,IAAIC,IAC3B,IAEElmB,EAAMxB,UAAUyB,OAAOzI,SAAQgH,IAE7BA,EAAU8E,WAAWD,OAAO7L,SAAQ+L,IAC9BA,EAAMC,UACRyiB,EAAe1K,IAAIhY,EAAMC,SAC3B,GACA,GAIN,CAFE,MAAO/M,GAET,CAGAuJ,EAAMmmB,WAAanmB,EAAMmmB,YAAc,CAAC,EACxCnmB,EAAMmmB,WAAWC,OAASpmB,EAAMmmB,WAAWC,QAAU,GACrD,MAAMA,EAASpmB,EAAMmmB,WAAWC,OAChCH,EAAezuB,SAAQgM,IACjBoiB,EAAmBpiB,IACrB4iB,EAAO9rB,KAAK,CACVwD,KAAM,YACNuoB,UAAW7iB,EACX8iB,SAAUV,EAAmBpiB,IAEjC,GAEJ,CArJI+iB,CAAmBrB,EAAU3rB,EAAQisB,aAKvC,IAAIgB,EAAaze,EACbmD,EAAKhB,iBACPsc,EAAa,QAAYA,GAAYvc,OAAOiB,EAAKhB,iBAInD,IAAI/E,EAAS,EAAoB+f,GASjC,GAAIsB,EAAY,CAEd,GAAIA,EAAWzb,eAAgB,CAC7B,MAAM0Y,EAAc,IAAKvY,EAAKuY,aAAe,MAAQ+C,EAAWzb,kBAE5D0Y,EAAY1pB,SACdmR,EAAKuY,YAAcA,EAEvB,CAGAte,EAASqhB,EAAWvb,aAAaia,EAAUha,EAC7C,CAEA,OAAO/F,EAAOjM,MAAKutB,GACa,iBAAnBzB,GAA+BA,EAAiB,EAyI/D,SAAwBhlB,EAAOsa,EAAOoM,GACpC,IAAK1mB,EACH,OAAO,KAGT,MAAM6a,EAAa,IACd7a,KACCA,EAAM0L,aAAe,CACvBA,YAAa1L,EAAM0L,YAAYrQ,KAAIuW,IAAK,IACnCA,KACCA,EAAE/Q,MAAQ,CACZA,KAAMwZ,GAAUzI,EAAE/Q,KAAMyZ,EAAOoM,YAIjC1mB,EAAMmG,MAAQ,CAChBA,KAAMkU,GAAUra,EAAMmG,KAAMmU,EAAOoM,OAEjC1mB,EAAMoK,UAAY,CACpBA,SAAUiQ,GAAUra,EAAMoK,SAAUkQ,EAAOoM,OAEzC1mB,EAAMqJ,OAAS,CACjBA,MAAOgR,GAAUra,EAAMqJ,MAAOiR,EAAOoM,KA+BzC,OApBI1mB,EAAMoK,UAAYpK,EAAMoK,SAASe,OAAS0P,EAAWzQ,WACvDyQ,EAAWzQ,SAASe,MAAQnL,EAAMoK,SAASe,MAGvCnL,EAAMoK,SAASe,MAAMtK,OACvBga,EAAWzQ,SAASe,MAAMtK,KAAOwZ,GAAUra,EAAMoK,SAASe,MAAMtK,KAAMyZ,EAAOoM,KAK7E1mB,EAAM2mB,QACR9L,EAAW8L,MAAQ3mB,EAAM2mB,MAAMtrB,KAAIuO,IAE7BA,EAAK/I,OACP+I,EAAK/I,KAAOwZ,GAAUzQ,EAAK/I,KAAMyZ,EAAOoM,IAEnC9c,MAIJiR,CACT,CA9La+L,CAAeH,EAAKzB,EAAgBC,GAEtCwB,GAEX,CC6VWI,CAAattB,EAASyG,EAAOkL,EAAMnD,EAC5C,CAQC+Z,cAAc9hB,EAAOkL,EAAO,CAAC,EAAGnD,GAC/B,OAAO7S,KAAK4xB,cAAc9mB,EAAOkL,EAAMnD,GAAO7O,MAC5C6tB,GACSA,EAAW5mB,WAEpBiE,IACE,GAAiC,oBAArBlM,kBAAoCA,iBAAmB,CAGjE,MAAM8uB,EAAc5iB,EACS,QAAzB4iB,EAAY1N,SACd,EAAApN,IAAW8a,EAAYtpB,SAEvB,OAAYspB,EAEhB,CACgB,GAGtB,CAeCF,cAAc9mB,EAAOkL,EAAMnD,GAC1B,MAAMxO,EAAUrE,KAAKgN,cACf,WAAE+kB,GAAe1tB,EAEvB,IAAKrE,KAAK+sB,aACR,OAAO9d,EAAoB,IAAIkV,GAAY,2CAA4C,QAGzF,MAAM6N,EAAgBC,GAAmBnnB,GACnC3H,EAAU,GAAa2H,GACvBkjB,EAAYljB,EAAMlC,MAAQ,QAC1BspB,EAAkB,0BAA0BlE,MAKlD,GAAI7qB,GAAiC,iBAAf4uB,GAA2B5yB,KAAKwL,SAAWonB,EAE/D,OADA/xB,KAAKwsB,mBAAmB,cAAe,QAAS1hB,GACzCmE,EACL,IAAIkV,GACF,oFAAoF4N,KACpF,QAKN,MAAMI,EAA6B,iBAAdnE,EAA+B,SAAWA,EAE/D,OAAOhuB,KAAK6vB,cAAc/kB,EAAOkL,EAAMnD,GACpC7O,MAAKgsB,IACJ,GAAiB,OAAbA,EAEF,MADAhwB,KAAKwsB,mBAAmB,kBAAmB2F,EAAcrnB,GACnD,IAAIqZ,GAAY,2DAA4D,OAIpF,GAD4BnO,EAAKrK,OAAoC,IAA3BqK,EAAU,KAAEoc,WAEpD,OAAOpC,EAGT,MAAM/f,EAkId,SACE5L,EACAyG,EACAkL,GAEA,MAAM,WAAEqc,EAAU,sBAAEC,GAA0BjuB,EAE9C,OAAI,GAAayG,IAAUunB,EAClBA,EAAWvnB,EAAOkL,GAGvBic,GAAmBnnB,IAAUwnB,EACxBA,EAAsBxnB,EAAOkL,GAG/BlL,CACT,CAlJuBynB,CAAkBluB,EAAS2rB,EAAUha,GACpD,OAuGR,SACEwc,EACAN,GAEA,MAAMO,EAAoB,GAAGP,2CAC7B,GAAIpuB,EAAW0uB,GACb,OAAOA,EAAiBxuB,MACtB8G,IACE,IAAKnH,EAAcmH,IAAoB,OAAVA,EAC3B,MAAM,IAAIqZ,GAAYsO,GAExB,OAAO3nB,CAAK,IAEdvJ,IACE,MAAM,IAAI4iB,GAAY,GAAG+N,mBAAiC3wB,IAAI,IAG7D,IAAKoC,EAAc6uB,IAA0C,OAArBA,EAC7C,MAAM,IAAIrO,GAAYsO,GAExB,OAAOD,CACT,CA5HeE,CAA0BziB,EAAQiiB,EAAgB,IAE1DluB,MAAK2uB,IACJ,GAAuB,OAAnBA,EAEF,MADA3yB,KAAKwsB,mBAAmB,cAAe2F,EAAcrnB,GAC/C,IAAIqZ,GAAY,GAAG+N,4CAA2D,OAGtF,MAAMlhB,EAAU6B,GAASA,EAAMiC,cAC1Bkd,GAAiBhhB,GACpBhR,KAAKkvB,wBAAwBle,EAAS2hB,GAMxC,MAAMC,EAAkBD,EAAeE,iBACvC,GAAIb,GAAiBY,GAAmBD,EAAe/kB,cAAgB9C,EAAM8C,YAAa,CACxF,MAAMjG,EAAS,SACfgrB,EAAeE,iBAAmB,IAC7BD,EACHjrB,SAEJ,CAGA,OADA3H,KAAK6tB,UAAU8E,EAAgB3c,GACxB2c,CAAc,IAEtB3uB,KAAK,MAAMkL,IACV,GAAIA,aAAkBiV,GACpB,MAAMjV,EASR,MANAlP,KAAKkY,iBAAiBhJ,EAAQ,CAC5BvD,KAAM,CACJymB,YAAY,GAEd9Z,kBAAmBpJ,IAEf,IAAIiV,GACR,8HAA8HjV,IAC/H,GAEP,CAKCwd,SAAS8B,GACRxuB,KAAKyrB,iBACA+C,EAAQxqB,MACX+C,IACE/G,KAAKyrB,iBACE1kB,KAETmI,IACElP,KAAKyrB,iBACEvc,IAGb,CAKCuf,cAAc7G,GACb,GAAI5nB,KAAKssB,YAActsB,KAAK4rB,KAG1B,OAFA5rB,KAAK4Y,KAAK,iBAAkBgP,GAErB5nB,KAAKssB,WAAWwG,KAAKlL,GAAU5jB,KAAK,MAAMkL,KAClB,oBAArBlM,kBAAoCA,mBAAqB,QAAa,6BAA8BkM,EAAO,KAGxF,oBAArBlM,kBAAoCA,mBAAqB,QAAa,qBAElF,CAKC+vB,iBACC,MAAMC,EAAWhzB,KAAK0rB,UAEtB,OADA1rB,KAAK0rB,UAAY,CAAC,EACXtuB,OAAOsF,KAAKswB,GAAU7sB,KAAIlF,IAC/B,MAAOiO,EAAQ0f,GAAY3tB,EAAIoF,MAAM,KACrC,MAAO,CACL6I,SACA0f,WACAqE,SAAUD,EAAS/xB,GACpB,GAEL,EAwDF,SAAS,GAAa6J,GACpB,YAAsBpM,IAAfoM,EAAMlC,IACf,CAEA,SAASqpB,GAAmBnnB,GAC1B,MAAsB,gBAAfA,EAAMlC,IACf,CE1pBA,MAAMsqB,GAAc,S,cCMpB,SAASC,GAAmB7C,EAAahB,GAEvC,MAAMnhB,EAASilB,GAAiB9C,EAAahB,GAEvChmB,EAAY,CAChBV,KAAM0mB,GAAMA,EAAGnvB,KACf4G,MAAOssB,GAAe/D,IAWxB,OARInhB,EAAOtJ,SACTyE,EAAU8E,WAAa,CAAED,gBAGJzP,IAAnB4K,EAAUV,MAA0C,KAApBU,EAAUvC,QAC5CuC,EAAUvC,MAAQ,8BAGbuC,CACT,CA6CA,SAASgqB,GAAehD,EAAahB,GACnC,MAAO,CACLhmB,UAAW,CACTyB,OAAQ,CAACooB,GAAmB7C,EAAahB,KAG/C,CAGA,SAAS8D,GACP9C,EACAhB,GAKA,MAAMlhB,EAAakhB,EAAGlhB,YAAckhB,EAAG7mB,OAAS,GAE1C8qB,EAcR,SAAoBjE,GAClB,GAAIA,EAAI,CACN,GAA8B,iBAAnBA,EAAGkE,YACZ,OAAOlE,EAAGkE,YAGZ,GAAIC,GAAoBlsB,KAAK+nB,EAAG9mB,SAC9B,OAAO,CAEX,CAEA,OAAO,CACT,CA1BkBkrB,CAAWpE,GAE3B,IACE,OAAOgB,EAAYliB,EAAYmlB,EAGjC,CAFE,MAAOhyB,GAET,CAEA,MAAO,EACT,CAGA,MAAMkyB,GAAsB,8BAqB5B,SAASJ,GAAe/D,GACtB,MAAM9mB,EAAU8mB,GAAMA,EAAG9mB,QACzB,OAAKA,EAGDA,EAAQiZ,OAA0C,iBAA1BjZ,EAAQiZ,MAAMjZ,QACjCA,EAAQiZ,MAAMjZ,QAEhBA,EALE,kBAMX,CA8CA,SAASmrB,GACPrD,EACAhnB,EACA8O,EACAwb,EACAC,GAEA,IAAI/oB,EAEJ,GAAItH,EAAa8F,IAAe,EAAamY,MAG3C,OAAO6R,GAAehD,EADHhnB,EAC2BmY,OAUhD,GAAIhe,EAAW6F,I3BxIRhG,E2BwIsCgG,E3BxIvB,gB2BwIoC,CACxD,MAAMwqB,EAAexqB,EAErB,GAAI,UAAW,EACbwB,EAAQwoB,GAAehD,EAAahnB,OAC/B,CACL,MAAMnJ,EAAO2zB,EAAa3zB,OAASsD,EAAWqwB,GAAgB,WAAa,gBACrEtrB,EAAUsrB,EAAatrB,QAAU,GAAGrI,MAAS2zB,EAAatrB,UAAYrI,EAC5E2K,EAAQipB,GAAgBzD,EAAa9nB,EAAS4P,EAAoBwb,GAClExoB,EAAsBN,EAAOtC,EAC/B,CAKA,MAJI,SAAUsrB,IACZhpB,EAAMgJ,KAAO,IAAKhJ,EAAMgJ,KAAM,oBAAqB,GAAGggB,EAAaE,SAG9DlpB,CACT,CACA,OAAI3H,EAAQmG,GAEHgqB,GAAehD,EAAahnB,GAEjC3F,EAAc2F,IAAc1F,EAAQ0F,IAKtCwB,EAlMJ,SACEwlB,EACAhnB,EACA8O,EACAyb,GAEA,MACMhnB,EADM,KACOC,YACbgjB,EAAiBjjB,GAAUA,EAAOG,aAAa8iB,eAE/ChlB,EAAQ,CACZxB,UAAW,CACTyB,OAAQ,CACN,CACEnC,KAAMhF,EAAQ0F,GAAaA,EAAU+C,YAAYlM,KAAO0zB,EAAuB,qBAAuB,QACtG9sB,MAAO,aACL8sB,EAAuB,oBAAsB,mCACvBxqB,EAA+BC,QAI7D6K,MAAO,CACL8f,eAAgBzO,GAAgBlc,EAAWwmB,KAI/C,GAAI1X,EAAoB,CACtB,MAAMjK,EAASilB,GAAiB9C,EAAalY,GACzCjK,EAAOtJ,SAERiG,EAAgB,UAAEC,OAAO,GAAGqD,WAAa,CAAED,UAEhD,CAEA,OAAOrD,CACT,CA+JYopB,CAAqB5D,EADLhnB,EACmC8O,EAAoByb,GAC/ExoB,EAAsBP,EAAO,CAC3BqpB,WAAW,IAENrpB,IAYTA,EAAQipB,GAAgBzD,EAAahnB,EAAY8O,EAAoBwb,GACrExoB,EAAsBN,EAAO,GAAGxB,SAAa5K,GAC7C2M,EAAsBP,EAAO,CAC3BqpB,WAAW,IAGNrpB,EACT,CAKA,SAASipB,GACPzD,EACA1pB,EACAwR,EACAwb,GAEA,MAAM9oB,EAAQ,CACZtC,QAAS5B,GAGX,GAAIgtB,GAAoBxb,EAAoB,CAC1C,MAAMjK,EAASilB,GAAiB9C,EAAalY,GACzCjK,EAAOtJ,SACTiG,EAAMxB,UAAY,CAChByB,OAAQ,CAAC,CAAEhE,MAAOH,EAAOwH,WAAY,CAAED,aAG7C,CAEA,OAAOrD,CACT,CC9PA,SAASoN,GAAiB5O,EAAW0L,GACnC,OAAO,KAAgBkD,iBAAiB5O,EAAW,CAAE0L,kBACvD,CAwHA,SAASiD,GAAU9V,GACjB,KAAgB8V,UAAU9V,EAC5B,CC1IA,MAAM,GAAS,KAEf,IAAIiyB,GAAgB,EAKpB,SAASC,KACP,OAAOD,GAAgB,CACzB,CAKA,SAASE,KAEPF,KACAlQ,YAAW,KACTkQ,IAAe,GAEnB,CAWA,SAASG,GACP9W,EACApZ,EAEC,CAAC,EACFmwB,GAUA,GAAkB,mBAAP/W,EACT,OAAOA,EAGT,IAGE,MAAMgX,EAAUhX,EAAGiX,mBACnB,GAAID,EACF,OAAOA,EAIT,GAAIpsB,EAAoBoV,GACtB,OAAOA,CAOX,CALE,MAAOlc,GAIP,OAAOkc,CACT,CAIA,MAAMkX,EAAgB,WACpB,MAAM1xB,EAAO+B,MAAM3H,UAAUqJ,MAAMnJ,KAAK2lB,WAExC,IACMsR,GAA4B,mBAAXA,GACnBA,EAAO5lB,MAAM5O,KAAMkjB,WAIrB,MAAM0R,EAAmB3xB,EAAKkD,KAAKib,GAAQmT,GAAKnT,EAAK/c,KAMrD,OAAOoZ,EAAG7O,MAAM5O,KAAM40B,EAuBxB,CAtBE,MAAOtF,GAqBP,MApBAgF,KAEArc,IAAWpF,IACTA,EAAMS,mBAAmBxI,IACnBzG,EAAQmH,YACVJ,EAAsBN,OAAOpM,OAAWA,GACxC2M,EAAsBP,EAAOzG,EAAQmH,YAGvCV,EAAMqJ,MAAQ,IACTrJ,EAAMqJ,MACT+O,UAAWjgB,GAGN6H,KAGToN,GAAiBoX,EAAG,IAGhBA,CACR,CACF,EAKA,IACE,IAAK,MAAMlmB,KAAYqU,EACjBrgB,OAAOC,UAAUyE,eAAevE,KAAKkgB,EAAIrU,KAC3CurB,EAAcvrB,GAAYqU,EAAGrU,GAGpB,CAAb,MAAO5D,GAAM,CAIfuC,EAAoB4sB,EAAelX,GAEnCxV,EAAyBwV,EAAI,qBAAsBkX,GAGnD,IACqBv3B,OAAOy3B,yBAAyBF,EAAe,QACnDxsB,cACb/K,OAAO+D,eAAewzB,EAAe,OAAQ,CAC3CtzB,IAAG,IACMoc,EAAGtd,MAKH,CAAb,MAAOqF,GAAM,CAEf,OAAOmvB,CACT,CCxIA,MAAMG,GAAsB,CAAC,QAAS,QAAS,UAAW,MAAO,OAAQ,SCHzE,SAASC,GAASjnB,GAChB,IAAKA,EACH,MAAO,CAAC,EAGV,MAAMkP,EAAQlP,EAAIkP,MAAM,gEAExB,IAAKA,EACH,MAAO,CAAC,EAIV,MAAMgY,EAAQhY,EAAM,IAAM,GACpBiY,EAAWjY,EAAM,IAAM,GAC7B,MAAO,CACL0H,KAAM1H,EAAM,GACZ2H,KAAM3H,EAAM,GACZ+H,SAAU/H,EAAM,GAChBkY,OAAQF,EACRG,KAAMF,EACNG,SAAUpY,EAAM,GAAKgY,EAAQC,EAEjC,CCtBA,MAEMI,GAA4B,cAMlC,MAAMC,GAIHnpB,sBAAuBnM,KAAKY,GAAKy0B,EAA0B,CAK3DjpB,SAAUpM,KAAKG,KAAOm1B,GAAY10B,EAAG,CAUrCyL,YAAYhI,GAAUixB,GAAYj4B,UAAU+O,OAAO7O,KAAKyC,MACvDA,KAAKqE,QAAU,CACbgV,SAAS,EACTkc,KAAK,EACLjV,OAAO,EACPyB,SAAS,EACTvH,QAAQ,EACRqF,KAAK,KACFxb,EAEP,CAUCkI,YA0CH,IAAwBgpB,EAzChBv1B,KAAKqE,QAAQgV,SACf6E,GAA0B,UAAWsX,IAEnCx1B,KAAKqE,QAAQkxB,KACfrX,GAA0B,OAqCRqX,EArC8Bv1B,KAAKqE,QAAQkxB,IAsCjE,SAA6BjU,GAC3B,IAAIzY,EACA9D,EAA0B,iBAARwwB,EAAmBA,EAAIE,wBAAqB/2B,EAE9DwG,EACa,iBAARqwB,GAAmD,iBAAxBA,EAAIrwB,gBAA+BqwB,EAAIrwB,qBAAkBxG,EACzFwG,GAAmBA,EAhGO,QAiGC,oBAArBlC,kBAAoCA,mBAC1C,OACE,8DAAsFkC,mDAE1FA,EArG4B,MAwGN,iBAAbH,IACTA,EAAW,CAACA,IAId,IACE,MAAM+F,EAAQwW,EAAYxW,MAC1BjC,EAoMN,SAAkBiC,GAChB,OAAOA,KAAW,EAASjC,MAC7B,CAtMe6sB,CAAS5qB,GACd3G,EAAiB2G,EAAMjC,OAAQ,CAAE9D,WAAUG,oBAC3Cf,EAAiB2G,EAAO,CAAE/F,WAAUG,mBAG1C,CAFE,MAAO3D,GACPsH,EAAS,WACX,CAEsB,IAAlBA,EAAOhE,QAIX,KAAgBuQ,cACd,CACEwZ,SAAU,MAAMtN,EAAYnhB,OAC5BqI,QAASK,GAEX,CACEiC,MAAOwW,EAAYxW,MACnB3K,KAAMmhB,EAAYnhB,KAClB6jB,OAAQ1C,EAAY0C,QAG1B,IA/EMhkB,KAAKqE,QAAQwb,KACf3B,GAA0B,MAAOyX,IAE/B31B,KAAKqE,QAAQic,OACfpC,GAA0B,QAAS0X,IAEjC51B,KAAKqE,QAAQ0d,SACf7D,GAA0B,UAAW2X,GAEzC,CAKCC,oBAAoBhrB,GACf9K,KAAKqE,QAAQmW,QACf,KAAgBpF,cACd,CACEwZ,SAAU,WAAyB,gBAAf9jB,EAAMlC,KAAyB,cAAgB,SACnEqC,SAAUH,EAAMG,SAChB1I,MAAOuI,EAAMvI,MACbiG,QAASwC,EAAoBF,IAE/B,CACEA,SAIR,EA2DF,SAAS0qB,GAAmBlU,GAO1B,IAAK,IAAI1b,EAAI,EAAGA,EAAI0b,EAAYre,KAAK4B,OAAQe,IAC3C,GAA4B,aAAxB0b,EAAYre,KAAK2C,GAAmB,CACtC0b,EAAYre,KAAK2C,EAAI,GAAK,UAC1B,KACF,CAEF,MAAMyP,EAAa,CACjBuZ,SAAU,UACVjjB,KAAM,CACJuX,UAAW5B,EAAYre,KACvBJ,OAAQ,WAEVN,OFzI6BA,EEyIE+e,EAAY/e,MFxI3B,SAAVA,EAAmB,UAAYuyB,GAAoBttB,SAASjF,GAASA,EAAQ,OEyInFiG,QAAS7B,EAAS2a,EAAYre,KAAM,MF1IxC,IAAiCV,EE6I/B,GAA0B,WAAtB+e,EAAY/e,MAAoB,CAClC,IAA4B,IAAxB+e,EAAYre,KAAK,GAKnB,OAJAoS,EAAW7M,QAAU,qBAAqB7B,EAAS2a,EAAYre,KAAKyD,MAAM,GAAI,MAAQ,mBACtF2O,EAAW1J,KAAKuX,UAAY5B,EAAYre,KAAKyD,MAAM,EAKvD,CAEA,KAAgB0O,cAAcC,EAAY,CACxCzO,MAAO0a,EAAYre,KACnBV,MAAO+e,EAAY/e,OAEvB,CAKA,SAASozB,GAAerU,GACtB,MAAM,eAAE1B,EAAc,aAAED,GAAiB2B,EAEnCnB,EAAgBmB,EAAYzB,IAAI9B,IAGtC,IAAK6B,IAAmBD,IAAiBQ,EACvC,OAGF,MAAM,OAAE5F,EAAM,IAAEzM,EAAG,YAAE4R,EAAW,KAAEU,GAASD,EAErCxU,EAAO,CACX4O,SACAzM,MACA4R,eAGI1J,EAAO,CACX6J,IAAKyB,EAAYzB,IACjBjZ,MAAOwZ,EACPR,iBACAD,gBAGF,KAAgBvK,cACd,CACEwZ,SAAU,MACVjjB,OACA/C,KAAM,QAERoN,EAEJ,CAKA,SAAS4f,GAAiBtU,GACxB,MAAM,eAAE1B,EAAc,aAAED,GAAiB2B,EAGzC,GAAK3B,KAID2B,EAAYC,UAAUzT,IAAIkP,MAAM,eAAkD,SAAjCsE,EAAYC,UAAUhH,QAK3E,GAAI+G,EAAYG,MAAO,CACrB,MAAM9V,EAAO2V,EAAYC,UACnBvL,EAAO,CACXrK,KAAM2V,EAAYG,MAClB7a,MAAO0a,EAAYre,KACnB2c,iBACAD,gBAGF,KAAgBvK,cACd,CACEwZ,SAAU,QACVjjB,OACApJ,MAAO,QACPqG,KAAM,QAERoN,EAEJ,KAAO,CACL,MAAMrK,EAAO,IACR2V,EAAYC,UACf7B,YAAa4B,EAAYE,UAAYF,EAAYE,SAAStP,QAEtD8D,EAAO,CACXpP,MAAO0a,EAAYre,KACnBue,SAAUF,EAAYE,SACtB5B,iBACAD,gBAEF,KAAgBvK,cACd,CACEwZ,SAAU,QACVjjB,OACA/C,KAAM,QAERoN,EAEJ,CACF,CAKA,SAAS6f,GAAmBvU,GAC1B,IAAIiB,EAAOjB,EAAYiB,KACnBE,EAAKnB,EAAYmB,GACrB,MAAMsT,EAAYhB,GAAS,kBAC3B,IAAIiB,EAAajB,GAASxS,GAC1B,MAAM0T,EAAWlB,GAAStS,GAGrBuT,EAAWrR,OACdqR,EAAaD,GAKXA,EAAUhR,WAAakR,EAASlR,UAAYgR,EAAUrR,OAASuR,EAASvR,OAC1EjC,EAAKwT,EAASb,UAEZW,EAAUhR,WAAaiR,EAAWjR,UAAYgR,EAAUrR,OAASsR,EAAWtR,OAC9EnC,EAAOyT,EAAWZ,UAGpB,KAAgBhgB,cAAc,CAC5BwZ,SAAU,aACVjjB,KAAM,CACJ4W,OACAE,OAGN,CA9NE6S,GAAY7mB,eCxEd,MAAMynB,WAAsB5K,GAMzBjf,YAAYhI,GACX,MAAM8xB,EAAY,uBAA4B,UAE9C9xB,EAAQsmB,UAAYtmB,EAAQsmB,WAAa,CAAC,EAC1CtmB,EAAQsmB,UAAUL,IAAMjmB,EAAQsmB,UAAUL,KAAO,CAC/CnqB,KAAM,4BACN8tB,SAAU,CACR,CACE9tB,KAAM,GAAGg2B,oBACT1e,QAASyb,KAGbzb,QAASyb,IAGX7O,MAAMhgB,GAEFA,EAAQyqB,mBAAqB,aAC/B,6BAAiC,oBAAoB,KACX,WAApC,6BACF9uB,KAAKo2B,gBACP,GAGN,CAKCzJ,mBAAmBrjB,EAAW0M,GAC7B,ONiFJ,SACEsa,EACAhnB,EACA0M,EACA4d,GAEA,MACM9oB,EAAQ6oB,GAAsBrD,EAAahnB,EADrB0M,GAAQA,EAAKoC,yBAAuB1Z,EACgBk1B,GAMhF,OALAvoB,EAAsBP,GACtBA,EAAMvI,MAAQ,QACVyT,GAAQA,EAAK/K,WACfH,EAAMG,SAAW+K,EAAK/K,UAEjB,EAAoBH,EAC7B,CM/FW6hB,CAAmB3sB,KAAKsM,SAASgkB,YAAahnB,EAAW0M,EAAMhW,KAAKsM,SAASsnB,iBACtF,CAKC9G,iBACCtkB,EAEAjG,EAAQ,OACRyT,GAEA,ONyFJ,SACEsa,EACA9nB,EAEAjG,EAAQ,OACRyT,EACA4d,GAEA,MACM9oB,EAAQipB,GAAgBzD,EAAa9nB,EADfwN,GAAQA,EAAKoC,yBAAuB1Z,EACQk1B,GAKxE,OAJA9oB,EAAMvI,MAAQA,EACVyT,GAAQA,EAAK/K,WACfH,EAAMG,SAAW+K,EAAK/K,UAEjB,EAAoBH,EAC7B,CMxGWgiB,CAAiB9sB,KAAKsM,SAASgkB,YAAa9nB,EAASjG,EAAOyT,EAAMhW,KAAKsM,SAASsnB,iBACzF,CAKC/F,UAAU/iB,EAAOkL,GAOhB,MAAMqgB,EAAwBr2B,KAAK0tB,mBAAmB2H,IAGlDgB,GAAyBA,EAAsBP,qBACjDO,EAAsBP,oBAAoBhrB,GAG5CuZ,MAAMwJ,UAAU/iB,EAAOkL,EACzB,CAKCsgB,oBAAoBC,GACnB,IAAKv2B,KAAK+sB,aAER,aAD6B,oBAArB/pB,kBAAoCA,mBAAqB,OAAY,qDAI/E,MAAM4kB,EC7FV,SACE2O,GACA,SACExI,EAAQ,OACRtD,EAAM,IACNjG,IAKF,MAAMiD,EAAU,CACdxc,SAAUsrB,EAAStrB,SACnBmjB,SAAS,IAAIpwB,MAAO+b,iBAChBgU,GACFA,EAASzD,KAAO,CACdA,IAAK,CACHnqB,KAAM4tB,EAASzD,IAAInqB,KACnBsX,QAASsW,EAASzD,IAAI7S,eAGtBgT,KAAYjG,GAAO,CAAEA,IAAK,GAAYA,KAExCta,EAKR,SAAwCqsB,GAItC,MAAO,CAHiB,CACtB3tB,KAAM,eAEiB2tB,EAC3B,CAVeC,CAA+BD,GAE5C,OAAO/O,GAAeC,EAAS,CAACvd,GAClC,CDoEqBusB,CAA2BF,EAAU,CACpDxI,SAAU/tB,KAAKktB,iBACf1I,IAAKxkB,KAAKitB,SACVxC,OAAQzqB,KAAKgN,aAAayd,SAEvBzqB,KAAKyuB,cAAc7G,EAC1B,CAKCiI,cAAc/kB,EAAOkL,EAAMnD,GAE1B,OADA/H,EAAM4rB,SAAW5rB,EAAM4rB,UAAY,aAC5BrS,MAAMwL,cAAc/kB,EAAOkL,EAAMnD,EAC1C,CAKCujB,iBACC,MAAMpD,EAAWhzB,KAAK+yB,iBAEtB,GAAwB,IAApBC,EAASnuB,OAEX,aAD6B,oBAArB7B,kBAAoCA,mBAAqB,EAAAgU,IAAW,wBAI9E,IAAKhX,KAAK4rB,KAER,aAD6B,oBAArB5oB,kBAAoCA,mBAAqB,EAAAgU,IAAW,6CAIjD,oBAArBhU,kBAAoCA,mBAAqB,EAAAgU,IAAW,oBAAqBgc,GAEjG,MAAMpL,GE3HR+O,EF2H8C3D,EEhHvCxL,IAVPhD,EF0HwDxkB,KAAKsM,SAASme,QAAU,GAAYzqB,KAAK4rB,OEhHrE,CAAEpH,OAAQ,CAAC,EAAG,CAPjB,CACvB,CAAE5b,KAAM,iBACR,CACE2I,WAAwB,UACxBolB,wBATN,IACEA,EACAnS,EF2HOxkB,KAAKyuB,cAAc7G,EAC1B,EG9HF,MAAMgP,GAIHzqB,sBAAuBnM,KAAKY,GAAK,gBAAiB,CAKlDwL,SAAUpM,KAAKG,KAAOy2B,GAAeh2B,EAAG,CAQxC0O,UAAWtP,KAAK62B,aAAe,CAC9B/T,QAASgU,GACTzT,qBAAsB0T,GACtB,CAGD1qB,YAAYhI,GAAUuyB,GAAev5B,UAAU+O,OAAO7O,KAAKyC,MAAM42B,GAAev5B,UAAUiS,QAAQ/R,KAAKyC,MACtGA,KAAKsM,SAAW,CACdwW,SAAS,EACTO,sBAAsB,KACnBhf,EAEP,CAICkI,YACC3K,MAAMo1B,gBAAkB,GACxB,MAAM3yB,EAAUrE,KAAKsM,SAKrB,IAAK,MAAMrL,KAAOoD,EAAS,CACzB,MAAM4yB,EAAcj3B,KAAK62B,aAAa51B,GAClCg2B,GAAe5yB,EAAQpD,KA4KP2H,EA3KD3H,GA4KM,oBAArB+B,kBAAoCA,mBAAqB,EAAAgU,IAAW,4BAA4BpO,KA3KlGquB,IACAj3B,KAAK62B,aAAa51B,QAAQvC,EAE9B,CAuKJ,IAA0BkK,CAtKxB,EAIF,SAASkuB,KACP5Y,GACE,SAECvS,IACC,MAAOgB,EAAK2jB,EAAasD,GAAoBsD,KAC7C,IAAKvqB,EAAIC,eAAegqB,IACtB,OAEF,MAAM,IAAE7T,EAAG,IAAEjV,EAAG,KAAEgP,EAAI,OAAEkG,EAAM,MAAEvB,GAAU9V,EAC1C,GAAI0oB,MAA0B5S,GAASA,EAAMlC,uBAC3C,OAGF,MAAMzU,OACMpM,IAAV+iB,GAAuB/d,EAASqf,GAuFxC,SAAqCA,EAAKjV,EAAKgP,EAAMkG,GAKnD,IAAIxa,EAAUhF,EAAauf,GAAOA,EAAIva,QAAUua,EAC5C5iB,EAAO,QAEX,MAAMg3B,EAAS3uB,EAAQwU,MANrB,4GAOEma,IACFh3B,EAAOg3B,EAAO,GACd3uB,EAAU2uB,EAAO,IAcnB,OAAOC,GAXO,CACZ9tB,UAAW,CACTyB,OAAQ,CACN,CACEnC,KAAMzI,EACN4G,MAAOyB,MAM6BsF,EAAKgP,EAAMkG,EACzD,CAhHYqU,CAA4BtU,EAAKjV,EAAKgP,EAAMkG,GAC5CoU,GACEzD,GAAsBrD,EAAa7O,GAASsB,OAAKrkB,EAAWk1B,GAAkB,GAC9E9lB,EACAgP,EACAkG,GAGRlY,EAAMvI,MAAQ,QAEd+0B,GAAuB3qB,EAAK8U,EAAO3W,EAAO,UAAU,GAG1D,CAGA,SAASisB,KACP7Y,GACE,sBAEC3c,IACC,MAAOoL,EAAK2jB,EAAasD,GAAoBsD,KAC7C,IAAKvqB,EAAIC,eAAegqB,IACtB,OAEF,IAAInV,EAAQlgB,EAGZ,IAGM,WAAYA,EACdkgB,EAAQlgB,EAAE2N,OAOH,WAAY3N,GAAK,WAAYA,EAAE0H,SACtCwY,EAAQlgB,EAAE0H,OAAOiG,OAIrB,CAFE,MAAO1J,GAET,CAEA,GAAI6uB,MAA0B5S,GAASA,EAAMlC,uBAC3C,OAAO,EAGT,MAAMzU,EAAQ,EAAY2W,GAmBvB,CACLnY,UAAW,CACTyB,OAAQ,CACN,CACEnC,KAAM,qBAEN7B,MAAO,oDAAoDC,OAxB1Bya,SACjCkS,GAAsBrD,EAAa7O,OAAO/iB,EAAWk1B,GAAkB,GAE3E9oB,EAAMvI,MAAQ,QAEd+0B,GAAuB3qB,EAAK8U,EAAO3W,EAAO,uBACpC,GAGZ,CAwDA,SAASssB,GAA8BtsB,EAAOgD,EAAKgP,EAAMkG,GAEvD,MAAMzhB,EAAKuJ,EAAMxB,UAAYwB,EAAMxB,WAAa,CAAC,EAE3CiuB,EAAMh2B,EAAEwJ,OAASxJ,EAAEwJ,QAAU,GAE7BysB,EAAOD,EAAG,GAAKA,EAAG,IAAM,CAAC,EAEzBE,EAAQD,EAAIppB,WAAaopB,EAAIppB,YAAc,CAAC,EAE5CspB,EAASD,EAAKtpB,OAASspB,EAAKtpB,QAAU,GAEtCwpB,EAAQxL,MAAMC,SAASpJ,EAAQ,UAAOtkB,EAAYskB,EAClD4U,EAASzL,MAAMC,SAAStP,EAAM,UAAOpe,EAAYoe,EACjDxO,EAAW5K,EAASoK,IAAQA,EAAIjJ,OAAS,EAAIiJ,EnCxFrD,WACE,IACE,OAAO,EAAO0Q,SAASkE,SAASC,IAGlC,CAFE,MAAOlV,GACP,MAAO,EACT,CACF,CmCkF2DoqB,GAazD,OAVqB,IAAjBH,EAAM7yB,QACR6yB,EAAMtyB,KAAK,CACTuyB,QACArpB,WACA8O,SAAU,IACV0a,QAAQ,EACRF,WAIG9sB,CACT,CAMA,SAASwsB,GAAuB3qB,EAAK8U,EAAO3W,EAAOlC,GACjDyC,EAAsBP,EAAO,CAC3BW,SAAS,EACT7C,SAEF+D,EAAI6L,aAAa1N,EAAO,CACtBwN,kBAAmBmJ,GAEvB,CAEA,SAASyV,KACP,MAAMvqB,EAAM,KACNE,EAASF,EAAIG,YACbzI,EAAWwI,GAAUA,EAAOG,cAAiB,CACjDsjB,YAAa,IAAM,GACnBsD,kBAAkB,GAEpB,MAAO,CAACjnB,EAAKtI,EAAQisB,YAAajsB,EAAQuvB,iBAC5C,CA3LEgD,GAAenoB,eCtDjB,MAAMspB,GAAuB,CAC3B,cACA,SACA,OACA,mBACA,iBACA,oBACA,kBACA,cACA,aACA,qBACA,cACA,aACA,iBACA,eACA,kBACA,cACA,cACA,eACA,qBACA,SACA,YACA,eACA,gBACA,YACA,kBACA,SACA,iBACA,4BACA,wBAIF,MAAMC,GAIH7rB,sBAAuBnM,KAAKY,GAAK,UAAW,CAK5CwL,SAAUpM,KAAKG,KAAO63B,GAASp3B,EAAG,CAOlCyL,YAAYhI,GAAU2zB,GAAS36B,UAAU+O,OAAO7O,KAAKyC,MACpDA,KAAKsM,SAAW,CACd4S,gBAAgB,EAChB+Y,aAAa,EACbC,uBAAuB,EACvBvI,aAAa,EACbzL,YAAY,KACT7f,EAEP,CAMCkI,YACKvM,KAAKsM,SAAS4X,YAChBxc,EAAK,GAAQ,aAAcywB,IAGzBn4B,KAAKsM,SAASqjB,aAChBjoB,EAAK,GAAQ,cAAeywB,IAG1Bn4B,KAAKsM,SAAS4rB,uBAChBxwB,EAAK,GAAQ,wBAAyB0wB,IAGpCp4B,KAAKsM,SAAS4S,gBAAkB,uBAClCxX,EAAKwX,eAAe7hB,UAAW,OAAQg7B,IAGzC,MAAMC,EAAoBt4B,KAAKsM,SAAS2rB,YACpCK,IACkBtzB,MAAMC,QAAQqzB,GAAqBA,EAAoBP,IAC/Dz1B,QAAQi2B,GAExB,EAIF,SAASJ,GAAkBtwB,GAEzB,OAAO,YAAc5E,GACnB,MAAMu1B,EAAmBv1B,EAAK,GAQ9B,OAPAA,EAAK,GAAKsxB,GAAKiE,EAAkB,CAC/BhtB,UAAW,CACTG,KAAM,CAAEyR,SAAUI,GAAgB3V,IAClC4D,SAAS,EACT7C,KAAM,gBAGHf,EAAS+G,MAAM5O,KAAMiD,EAC9B,CACF,CAIA,SAASm1B,GAASvwB,GAEhB,OAAO,SAAW1F,GAEhB,OAAO0F,EAAS+G,MAAM5O,KAAM,CAC1Bu0B,GAAKpyB,EAAU,CACbqJ,UAAW,CACTG,KAAM,CACJyR,SAAU,wBACVtM,QAAS0M,GAAgB3V,IAE3B4D,SAAS,EACT7C,KAAM,iBAId,CACF,CAGA,SAASyvB,GAASnY,GAEhB,OAAO,YAAcjd,GAEnB,MAAM4c,EAAM7f,KA8BZ,MA7B4B,CAAC,SAAU,UAAW,aAAc,sBAE5CsC,SAAQT,IACtBA,KAAQge,GAA4B,mBAAdA,EAAIhe,IAE5B6F,EAAKmY,EAAKhe,GAAM,SAAUgG,GACxB,MAAM4wB,EAAc,CAClBjtB,UAAW,CACTG,KAAM,CACJyR,SAAUvb,EACViP,QAAS0M,GAAgB3V,IAE3B4D,SAAS,EACT7C,KAAM,eAKJ8vB,EAAmBrwB,EAAoBR,GAM7C,OALI6wB,IACFD,EAAYjtB,UAAUG,KAAKmF,QAAU0M,GAAgBkb,IAIhDnE,GAAK1sB,EAAU4wB,EACxB,GACF,IAGKvY,EAAatR,MAAM5O,KAAMiD,EAClC,CACF,CAGA,SAASs1B,GAAiB1vB,GAExB,MAAM8vB,EAAe,GAEfvwB,EAAQuwB,EAAa9vB,IAAW8vB,EAAa9vB,GAAQxL,UAGtD+K,GAAUA,EAAMtG,gBAAmBsG,EAAMtG,eAAe,sBAI7D4F,EAAKU,EAAO,oBAAoB,SAAUP,GAGxC,OAAO,SAGL+wB,EACAnb,EACApZ,GAEA,IACgC,mBAAnBoZ,EAAGob,cAOZpb,EAAGob,YAActE,GAAK9W,EAAGob,YAAa,CACpCrtB,UAAW,CACTG,KAAM,CACJyR,SAAU,cACVtM,QAAS0M,GAAgBC,GACzB5U,UAEF4C,SAAS,EACT7C,KAAM,gBAMd,CAFE,MAAOkD,GAET,CAEA,OAAOjE,EAAS+G,MAAM5O,KAAM,CAC1B44B,EAEArE,GAAK9W,EAAK,CACRjS,UAAW,CACTG,KAAM,CACJyR,SAAU,mBACVtM,QAAS0M,GAAgBC,GACzB5U,UAEF4C,SAAS,EACT7C,KAAM,gBAGVvE,GAEJ,CACF,IAEAqD,EACEU,EACA,uBACA,SACE2W,GAGA,OAAO,SAGL6Z,EACAnb,EACApZ,GAmBA,MAAMy0B,EAAsBrb,EAC5B,IACE,MAAMsb,EAAuBD,GAAuBA,EAAoBpE,mBACpEqE,GACFha,EAA4BxhB,KAAKyC,KAAM44B,EAAWG,EAAsB10B,EAI5E,CAFE,MAAO9C,GAET,CACA,OAAOwd,EAA4BxhB,KAAKyC,KAAM44B,EAAWE,EAAqBz0B,EAChF,CACF,IAEJ,CA3LE2zB,GAASvpB,eClFX,MAAMuqB,GAIH7sB,sBAAuBnM,KAAKY,GAAK,cAAe,CAK/CwL,SAAUpM,KAAKG,KAAO64B,GAAap4B,EAAG,CAavCyL,YAAYhI,EAAU,CAAC,GAAI20B,GAAa37B,UAAU+O,OAAO7O,KAAKyC,MAC7DA,KAAKi5B,KAAO50B,EAAQpD,KA3BJ,QA4BhBjB,KAAKk5B,OAAS70B,EAAQ80B,OA3BJ,CA4BpB,CAKC5sB,YACC,MAAMM,EAAS,KAAgBC,YAC1BD,GAGLL,IAAwB,CAAC1B,EAAOkL,KAC9B,MAAMlW,EAAO,KAAgB8M,eAAeosB,IAC5C,OAAOl5B,EAQb,SACEmd,EACAhc,EACAk4B,EACAruB,EACAkL,GAEA,KAAKlL,EAAMxB,WAAcwB,EAAMxB,UAAUyB,QAAWiL,GAAS3S,EAAa2S,EAAKsC,kBAAmB1W,QAChG,OAAOkJ,EAET,MAAMsuB,EAAeC,GAAepc,EAAQkc,EAAOnjB,EAAKsC,kBAAoBrX,GAE5E,OADA6J,EAAMxB,UAAUyB,OAAS,IAAIquB,KAAiBtuB,EAAMxB,UAAUyB,QACvDD,CACT,CArBoBwuB,CAASzsB,EAAOG,aAAasjB,YAAaxwB,EAAKm5B,KAAMn5B,EAAKo5B,OAAQpuB,EAAOkL,GAAQlL,CAAK,GAExG,EAwBF,SAASuuB,GACPpc,EACAkc,EACA1X,EACAxgB,EACAwH,EAAQ,IAER,IAAKpF,EAAaoe,EAAMxgB,GAAMW,QAAU6G,EAAM5D,OAAS,GAAKs0B,EAC1D,OAAO1wB,EAET,MAAMa,EAAY6pB,GAAmBlW,EAAQwE,EAAMxgB,IACnD,OAAOo4B,GAAepc,EAAQkc,EAAO1X,EAAMxgB,GAAMA,EAAK,CAACqI,KAAcb,GACvE,CAnCEuwB,GAAavqB,eC5Cf,MAAM8qB,GAAcltB,cAAgBktB,GAAYl8B,UAAU+O,OAAO7O,KAAKyC,KAAO,CAI1EmM,sBAAuBnM,KAAKY,GAAK,aAAc,CAK/CwL,SAAUpM,KAAKG,KAAOo5B,GAAY34B,EAAG,CAKrC2L,YACCC,IAAyB1B,IACvB,GAAI,KAAgB8B,eAAe2sB,IAAc,CAE/C,IAAK,eAAqB,cAAoB,YAC5C,OAAOzuB,EAIT,MAAMgD,EAAOhD,EAAMnN,SAAWmN,EAAMnN,QAAQmQ,KAAS,aAAmB,kBAClE,SAAE0rB,GAAa,aAAmB,CAAC,GACnC,UAAExnB,GAAc,cAAoB,CAAC,EAErCyV,EAAU,IACV3c,EAAMnN,SAAWmN,EAAMnN,QAAQ8pB,WAC/B+R,GAAY,CAAEC,QAASD,MACvBxnB,GAAa,CAAE,aAAcA,IAE7BrU,EAAU,IAAKmN,EAAMnN,WAAamQ,GAAO,CAAEA,OAAQ2Z,WAEzD,MAAO,IAAK3c,EAAOnN,UACrB,CACA,OAAOmN,CAAK,GAEhB,EACAyuB,GAAY9qB,eCxCd,MAAMirB,GAASrtB,cAAgBqtB,GAAOr8B,UAAU+O,OAAO7O,KAAKyC,KAAO,CAIhEmM,sBAAuBnM,KAAKY,GAAK,QAAS,CAK1CwL,SAAUpM,KAAKG,KAAOu5B,GAAO94B,EAAG,CAShC2L,UAAUC,EAAyBC,GAClC,MAAMktB,EAAiBC,IAGrB,GAAIA,EAAahxB,KACf,OAAOgxB,EAGT,MAAM95B,EAAO2M,IAAgBG,eAAe8sB,IAC5C,GAAI55B,EAAM,CAER,IACE,GAmBV,SAA0B85B,EAAcC,GACtC,QAAKA,MAgBP,SAA6BD,EAAcC,GACzC,MAAMC,EAAiBF,EAAapxB,QAC9BuxB,EAAkBF,EAAcrxB,QAGtC,SAAKsxB,IAAmBC,OAKnBD,IAAmBC,IAAsBD,GAAkBC,KAI5DD,IAAmBC,MAIlBC,GAAmBJ,EAAcC,MAIjCI,GAAkBL,EAAcC,KAKvC,CAvCMK,CAAoBN,EAAcC,MA0CxC,SAA+BD,EAAcC,GAC3C,MAAMM,EAAoBC,GAAuBP,GAC3CQ,EAAmBD,GAAuBR,GAEhD,SAAKO,IAAsBE,KAIvBF,EAAkBvxB,OAASyxB,EAAiBzxB,MAAQuxB,EAAkBpzB,QAAUszB,EAAiBtzB,UAIhGizB,GAAmBJ,EAAcC,MAIjCI,GAAkBL,EAAcC,IAKvC,CA3DMS,CAAsBV,EAAcC,GAK1C,CAjCc,CAAiBD,EAAc95B,EAAKy6B,gBAEtC,OAD6B,oBAArBv3B,kBAAoCA,mBAAqB,OAAY,wEACtE,IAIX,CAFE,MAAOwC,GACP,OAAQ1F,EAAKy6B,eAAiBX,CAChC,CAEA,OAAQ95B,EAAKy6B,eAAiBX,CAChC,CACA,OAAOA,CAAY,EAGrBD,EAAe/4B,GAAKZ,KAAKG,KACzBqM,EAAwBmtB,EAC1B,EA2EF,SAASM,GAAkBL,EAAcC,GACvC,IAAIW,EAAgBC,GAAoBb,GACpCc,EAAiBD,GAAoBZ,GAGzC,IAAKW,IAAkBE,EACrB,OAAO,EAIT,GAAKF,IAAkBE,IAAqBF,GAAiBE,EAC3D,OAAO,EAOT,GAAIA,EAAe71B,SAAW21B,EAAc31B,OAC1C,OAAO,EAIT,IAAK,IAAIe,EAAI,EAAGA,EAAI80B,EAAe71B,OAAQe,IAAK,CAC9C,MAAM+0B,EAASD,EAAe90B,GACxBg1B,EAASJ,EAAc50B,GAE7B,GACE+0B,EAAOrsB,WAAassB,EAAOtsB,UAC3BqsB,EAAO/C,SAAWgD,EAAOhD,QACzB+C,EAAOhD,QAAUiD,EAAOjD,OACxBgD,EAAOvd,WAAawd,EAAOxd,SAE3B,OAAO,CAEX,CAEA,OAAO,CACT,CAGA,SAAS4c,GAAmBJ,EAAcC,GACxC,IAAIgB,EAAqBjB,EAAavlB,YAClCymB,EAAsBjB,EAAcxlB,YAGxC,IAAKwmB,IAAuBC,EAC1B,OAAO,EAIT,GAAKD,IAAuBC,IAA0BD,GAAsBC,EAC1E,OAAO,EAOT,IACE,QAAUD,EAAmBt1B,KAAK,MAAQu1B,EAAoBv1B,KAAK,IAGrE,CAFE,MAAOC,GACP,OAAO,CACT,CACF,CAGA,SAAS40B,GAAuBtvB,GAC9B,OAAOA,EAAMxB,WAAawB,EAAMxB,UAAUyB,QAAUD,EAAMxB,UAAUyB,OAAO,EAC7E,CAGA,SAAS0vB,GAAoB3vB,GAC3B,MAAMxB,EAAYwB,EAAMxB,UAExB,GAAIA,EACF,IAEE,OAAOA,EAAUyB,OAAO,GAAGqD,WAAWD,MAGxC,CAFE,MAAO3I,GACP,MACF,CAGJ,CA9JEk0B,GAAOjrB,eC9CT,MAAMssB,GAAmB,IAQzB,SAASC,GAAY1sB,EAAUhG,EAAMsvB,EAAQD,GAC3C,MAAMtpB,EAAQ,CACZC,WACA8O,SAAU9U,EACVwvB,QAAQ,GAWV,YARep5B,IAAXk5B,IACFvpB,EAAMupB,OAASA,QAGHl5B,IAAVi5B,IACFtpB,EAAMspB,MAAQA,GAGTtpB,CACT,CAGA,MAAM4sB,GACJ,6IACIC,GAAkB,gCAkClBC,GACJ,uIACIC,GAAiB,gDA+BjBC,GAAa,uFAiCbC,GAAqBhf,GAvEG,CAtDN,GA2BTQ,IACb,MAAMyL,EAAQ0S,GAAYpP,KAAK/O,GAE/B,GAAIyL,EAAO,CAGT,GAFeA,EAAM,IAAmC,IAA7BA,EAAM,GAAGnM,QAAQ,QAEhC,CACV,MAAMmf,EAAWL,GAAgBrP,KAAKtD,EAAM,IAExCgT,IAEFhT,EAAM,GAAKgT,EAAS,GACpBhT,EAAM,GAAKgT,EAAS,GACpBhT,EAAM,GAAKgT,EAAS,GAExB,CAIA,MAAOjzB,EAAMgG,GAAYktB,GAA8BjT,EAAM,IAAMwS,GAAkBxS,EAAM,IAE3F,OAAOyS,GAAY1sB,EAAUhG,EAAMigB,EAAM,IAAMA,EAAM,QAAK7pB,EAAW6pB,EAAM,IAAMA,EAAM,QAAK7pB,EAC9F,CAEM,GAuCqB,CAxFN,GA6DToe,IACZ,MAAMyL,EAAQ4S,GAAWtP,KAAK/O,GAE9B,GAAIyL,EAAO,CAET,GADeA,EAAM,IAAMA,EAAM,GAAGnM,QAAQ,YAAc,EAC9C,CACV,MAAMmf,EAAWH,GAAevP,KAAKtD,EAAM,IAEvCgT,IAEFhT,EAAM,GAAKA,EAAM,IAAM,OACvBA,EAAM,GAAKgT,EAAS,GACpBhT,EAAM,GAAKgT,EAAS,GACpBhT,EAAM,GAAK,GAEf,CAEA,IAAIja,EAAWia,EAAM,GACjBjgB,EAAOigB,EAAM,IAAMwS,GAGvB,OAFCzyB,EAAMgG,GAAYktB,GAA8BlzB,EAAMgG,GAEhD0sB,GAAY1sB,EAAUhG,EAAMigB,EAAM,IAAMA,EAAM,QAAK7pB,EAAW6pB,EAAM,IAAMA,EAAM,QAAK7pB,EAC9F,CAEM,GAeqB,CArGN,GA6FToe,IACZ,MAAMyL,EAAQ8S,GAAWxP,KAAK/O,GAE9B,OAAOyL,EACHyS,GAAYzS,EAAM,GAAIA,EAAM,IAAMwS,IAAmBxS,EAAM,GAAIA,EAAM,IAAMA,EAAM,QAAK7pB,QACtFA,CAAS,IAgDT88B,GAAgC,CAAClzB,EAAMgG,KAC3C,MAAMmtB,GAA0D,IAAtCnzB,EAAK8T,QAAQ,oBACjCsf,GAAiE,IAA1CpzB,EAAK8T,QAAQ,wBAE1C,OAAOqf,GAAqBC,EACxB,EACyB,IAAvBpzB,EAAK8T,QAAQ,KAAc9T,EAAKjC,MAAM,KAAK,GAAK00B,GAChDU,EAAoB,oBAAoBntB,IAAa,wBAAwBA,KAE/E,CAAChG,EAAMgG,EAAS,ECzJtB,SAASqtB,GACPt3B,EACAu3B,EACAxS,ECNF,SAA2B+P,GACzB,MAAM/P,EAAS,GAYf,SAASyS,EAAOC,GACd,OAAO1S,EAAOnN,OAAOmN,EAAOhN,QAAQ0f,GAAO,GAAG,EAChD,CAuEA,MAAO,CACLC,EAAG3S,EACH/C,IA7DF,SAAa2V,GACX,UAxBiBt9B,IAAVy6B,GAAuB/P,EAAOvkB,OAASs0B,GAyB5C,OAAOlqB,EAAoB,IAAIkV,GAAY,yDAI7C,MAAM2X,EAAOE,IAcb,OAb8B,IAA1B5S,EAAOhN,QAAQ0f,IACjB1S,EAAOhkB,KAAK02B,GAETA,EACF93B,MAAK,IAAM63B,EAAOC,KAIlB93B,KAAK,MAAM,IACV63B,EAAOC,GAAM93B,KAAK,MAAM,WAIrB83B,CACT,EAyCEG,MA9BF,SAAe5O,GACb,OAAO,IAAIte,GAAY,CAACC,EAASG,KAC/B,IAAI+sB,EAAU9S,EAAOvkB,OAErB,IAAKq3B,EACH,OAAOltB,GAAQ,GAIjB,MAAMmtB,EAAqBjY,YAAW,KAChCmJ,GAAWA,EAAU,GACvBre,GAAQ,EACV,GACCqe,GAGHjE,EAAO9mB,SAAQ4H,IACR,EAAoBA,GAAMlG,MAAK,OAC3Bk4B,IACLjY,aAAakY,GACbntB,GAAQ,GACV,GACCG,EAAO,GACV,GAEN,EAOF,CDrFWitB,CACP/3B,EAAQg4B,YAZ0B,KAepC,IAAIC,EAAa,CAAC,EAGlB,SAASxJ,EAAKlL,GACZ,MAAM2U,EAAwB,GAc9B,GAXAzU,GAAoBF,GAAU,CAAC1d,EAAMtB,KACnC,MAAM4zB,EAA2BrS,GAA+BvhB,GAChE,GEYN,SAAuB6zB,EAAQ7N,EAAU3wB,EAAMD,KAAKC,OAClD,OARF,SAAuBw+B,EAAQ7N,GAC7B,OAAO6N,EAAO7N,IAAa6N,EAAOC,KAAO,CAC3C,CAMSC,CAAcF,EAAQ7N,GAAY3wB,CAC3C,CFdU2+B,CAAcN,EAAYE,GAA2B,CACvD,MAAM1xB,EAAQ+xB,GAAwB3yB,EAAMtB,GAC5CvE,EAAQmoB,mBAAmB,oBAAqBgQ,EAA0B1xB,EAC5E,MACEyxB,EAAsBn3B,KAAK8E,EAC7B,IAImC,IAAjCqyB,EAAsB13B,OACxB,OAAO,IAIT,MAAMi4B,EAAmBtV,GAAeI,EAAS,GAAI2U,GAG/CQ,EAAsB7tB,IAC1B4Y,GAAoBgV,GAAkB,CAAC5yB,EAAMtB,KAC3C,MAAMkC,EAAQ+xB,GAAwB3yB,EAAMtB,GAC5CvE,EAAQmoB,mBAAmBtd,EAAQib,GAA+BvhB,GAAOkC,EAAM,GAC/E,EAoBJ,OAAOse,EAAO/C,KAjBM,IAClBuV,EAAY,CAAExb,KAAMiI,GAAkByU,EAAkBz4B,EAAQ6jB,eAAgBlkB,MAC9Ewd,SAE8B9iB,IAAxB8iB,EAASwb,aAA6Bxb,EAASwb,WAAa,KAAOxb,EAASwb,YAAc,OAC/D,oBAArBh6B,kBAAoCA,mBAAqB,OAAY,qCAAqCwe,EAASwb,6BAG7HV,EEXV,SACEG,GACA,WAAEO,EAAU,QAAEvV,GACdxpB,EAAMD,KAAKC,OAEX,MAAMg/B,EAAoB,IACrBR,GAKCS,EAAkBzV,GAAWA,EAAQ,wBACrC0V,EAAmB1V,GAAWA,EAAQ,eAE5C,GAAIyV,EAaF,IAAK,MAAM/D,KAAS+D,EAAgBE,OAAO/2B,MAAM,KAAM,CACrD,MAAOg3B,EAAYC,GAAcnE,EAAM9yB,MAAM,IAAK,GAC5Ck3B,EAAcnR,SAASiR,EAAY,IACnCG,EAAmD,KAAzCrR,MAAMoR,GAA6B,GAAdA,GACrC,GAAKD,EAGH,IAAK,MAAM1O,KAAY0O,EAAWj3B,MAAM,KACtC42B,EAAkBrO,GAAY3wB,EAAMu/B,OAHtCP,EAAkBP,IAAMz+B,EAAMu/B,CAMlC,MACSL,EACTF,EAAkBP,IAAMz+B,EA7E5B,SAA+BgiB,EAAQhiB,EAAMD,KAAKC,OAChD,MAAMs/B,EAAcnR,SAAS,GAAGnM,IAAU,IAC1C,IAAKkM,MAAMoR,GACT,OAAqB,IAAdA,EAGT,MAAME,EAAaz/B,KAAK0/B,MAAM,GAAGzd,KACjC,OAAKkM,MAAMsR,GAfe,IAgBjBA,EAAax/B,CAIxB,CAiEkC0/B,CAAsBR,EAAkBl/B,GAC9C,MAAf++B,IACTC,EAAkBP,IAAMz+B,EAAM,KAGhC,OAAOg/B,CACT,CFnCuBW,CAAiBtB,EAAY9a,GACnCA,KAETC,IAEE,MADAsb,EAAmB,iBACbtb,CAAK,MAIczd,MAC7BiM,GAAUA,IACVwR,IACE,GAAIA,aAAiB0C,GAGnB,OAF6B,oBAArBnhB,kBAAoCA,mBAAqB,QAAa,iDAC9E+5B,EAAmB,kBACZ,IAEP,MAAMtb,CACR,GAGN,CAMA,OAFAqR,EAAK+K,2BAA4B,EAE1B,CACL/K,OACA1F,MArEaC,GAAYjE,EAAO6S,MAAM5O,GAuE1C,CAEA,SAASwP,GAAwB3yB,EAAMtB,GACrC,GAAa,UAATA,GAA6B,gBAATA,EAIxB,OAAO5D,MAAMC,QAAQiF,GAAQ,EAAQ,QAAKxL,CAC5C,CG9FA,IAAIo/B,GCIJ,SAASC,GACP15B,EACA25B,EDkCF,WACE,GAAIF,GACF,OAAOA,GAMT,GAAIhgB,GAAc,UAChB,OAAQggB,GAAkB,cAAkB,IAG9C,MAAMtf,EAAW,YACjB,IAAIyf,EAAY,SAEhB,GAAIzf,GAA8C,mBAA3BA,EAASiC,cAC9B,IACE,MAAMD,EAAUhC,EAASiC,cAAc,UACvCD,EAAQE,QAAS,EACjBlC,EAASmC,KAAKC,YAAYJ,GAC1B,MAAMK,EAAgBL,EAAQK,cAC1BA,GAAiBA,EAAcP,QACjC2d,EAAYpd,EAAcP,OAE5B9B,EAASmC,KAAKG,YAAYN,EAI5B,CAHE,MAAOjf,IACsB,oBAArByB,kBAAoCA,mBAC1C,OAAY,kFAAmFzB,EACnG,CAGF,OAAQu8B,GAAkBG,EAAUr/B,KAAK,GAE3C,CCnEgBs/B,IAEd,IAAIC,EAAkB,EAClBC,EAAe,EA+CnB,OAAOzC,GAAgBt3B,GA7CvB,SAAqB1G,GACnB,MAAM0gC,EAAc1gC,EAAQyiB,KAAKvb,OACjCs5B,GAAmBE,EACnBD,IAEA,MAAME,EAAiB,CACrBle,KAAMziB,EAAQyiB,KACd7F,OAAQ,OACRgkB,eAAgB,SAChB9W,QAASpjB,EAAQojB,QAYjB+W,UAAWL,GAAmB,KAASC,EAAe,MACnD/5B,EAAQo6B,cAGb,IACE,OAAOT,EAAY35B,EAAQyJ,IAAKwwB,GAAgBt6B,MAAKwd,IACnD2c,GAAmBE,EACnBD,IACO,CACLpB,WAAYxb,EAAStP,OACrBuV,QAAS,CACP,uBAAwBjG,EAASiG,QAAQpmB,IAAI,wBAC7C,cAAemgB,EAASiG,QAAQpmB,IAAI,mBAS5C,CALE,MAAOE,GAIP,ODyBJu8B,QAAkBp/B,EC3Bdy/B,GAAmBE,EACnBD,IACOnvB,EAAoB1N,EAC7B,CACF,GAGF,CC5CA,SAASm9B,GAAiBr6B,GA+BxB,OAAOs3B,GAAgBt3B,GA9BvB,SAAqB1G,GACnB,OAAO,IAAIoR,GAAY,CAACC,EAASG,KAC/B,MAAM0Q,EAAM,IAAIX,eAEhBW,EAAIiD,QAAU3T,EAEd0Q,EAAIC,mBAAqB,KAZH,IAahBD,EAAIJ,YACNzQ,EAAQ,CACNguB,WAAYnd,EAAI3N,OAChBuV,QAAS,CACP,uBAAwB5H,EAAI8e,kBAAkB,wBAC9C,cAAe9e,EAAI8e,kBAAkB,iBAG3C,EAGF9e,EAAI+e,KAAK,OAAQv6B,EAAQyJ,KAEzB,IAAK,MAAMmS,KAAU5b,EAAQojB,QACvBrqB,OAAOC,UAAUyE,eAAevE,KAAK8G,EAAQojB,QAASxH,IACxDJ,EAAIgf,iBAAiB5e,EAAQ5b,EAAQojB,QAAQxH,IAIjDJ,EAAIiT,KAAKn1B,EAAQyiB,KAAK,GAE1B,GAGF,CClCA,MAAMjF,GAAsB,CAC1B,IAAI,EACJ,IAAI,EACJ,IAAI6c,GACJ,IAAI1C,GACJ,IAAIsB,GACJ,IAAIoC,GACJ,IAAIU,GACJ,IAAIH,IAyNN,SAASuF,GAAkBnyB,GACzBA,EAAIiN,aAAa,CAAEnI,gBAAgB,IACnC9E,EAAI6M,gBACN,EA5JA,SAAcnV,EAAU,CAAC,QACa3F,IAAhC2F,EAAQ8W,sBACV9W,EAAQ8W,oBAAsBA,SAERzc,IAApB2F,EAAQyN,UAEwB,iBAAvBitB,qBACT16B,EAAQyN,QAAUitB,oBAIhB,mBAAyB,uBAC3B16B,EAAQyN,QAAU,4BAGcpT,IAAhC2F,EAAQ26B,sBACV36B,EAAQ26B,qBAAsB,QAEEtgC,IAA9B2F,EAAQyqB,oBACVzqB,EAAQyqB,mBAAoB,GAG9B,MAAM/hB,EAAgB,IACjB1I,EACHisB,anC9CuCA,EmC8CQjsB,EAAQisB,aAAegL,GnC7CpEt2B,MAAMC,QAAQqrB,GACThU,MAAqBgU,GAEvBA,GmC2CLjV,aAAcH,GAAuB7W,GACrCkoB,UAAWloB,EAAQkoB,YAAc7O,KAAkBqgB,GAAqBW,KnChD5E,IAA2CpO,GoCpD3C,SACE2O,EACA56B,IAEsB,IAAlBA,EAAQ66B,QACuB,oBAArBl8B,kBAAoCA,iBAC9C,WAIAqW,QAAQC,KAAK,iFAGjB,MAAM3M,EAAM,KACEA,EAAIkL,WACZ9C,OAAO1Q,EAAQ86B,cAErB,MAAMtyB,EAAS,IAAIoyB,EAAY56B,GAC/BsI,EAAI4K,WAAW1K,EACjB,CDoFEuyB,CAAYlJ,GAAenpB,GAEvB1I,EAAQ26B,qBAkId,WACE,QAA+B,IAApB,YAGT,aAF6B,oBAArBh8B,kBAAoCA,mBAC1C,OAAY,uFAIhB,MAAM2J,EAAM,KAQPA,EAAI6M,iBAQTslB,GAAkBnyB,GAGlBuR,GAA0B,WAAW,EAAGqE,OAAME,cAE7B/jB,IAAT6jB,GAAsBA,IAASE,GACnCqc,GAAkB,KACpB,IAEJ,CAjKIO,EAEJ,CErHA,CAAY,CACR7a,IAAK,sFACL1S,QAAS,kBCLE,WACX,MAAM,IAAIlQ,MAAM,UACpB,CDMA09B,E","sources":["webpack:///./node_modules/@sentry/webpack-plugin/src/sentry-webpack.module.js","webpack:///./node_modules/@sentry/utils/esm/env.js","webpack:///./node_modules/@sentry/utils/esm/node.js","webpack:///./node_modules/@sentry/utils/esm/time.js","webpack:///./node_modules/@sentry/utils/esm/worldwide.js","webpack:///webpack/bootstrap","webpack:///webpack/runtime/define property getters","webpack:///webpack/runtime/global","webpack:///webpack/runtime/harmony module decorator","webpack:///webpack/runtime/hasOwnProperty shorthand","webpack:///./node_modules/@sentry/utils/esm/logger.js","webpack:///./node_modules/@sentry/utils/esm/is.js","webpack:///./node_modules/@sentry/utils/esm/browser.js","webpack:///./node_modules/@sentry/utils/esm/string.js","webpack:///./node_modules/@sentry/utils/esm/object.js","webpack:///./node_modules/@sentry/utils/esm/misc.js","webpack:///./node_modules/@sentry/core/esm/integrations/inboundfilters.js","webpack:///./node_modules/@sentry/core/esm/integrations/functiontostring.js","webpack:///./node_modules/@sentry/core/esm/constants.js","webpack:///./node_modules/@sentry/utils/esm/syncpromise.js","webpack:///./node_modules/@sentry/core/esm/session.js","webpack:///./node_modules/@sentry/core/esm/scope.js","webpack:///./node_modules/@sentry/core/esm/hub.js","webpack:///./node_modules/@sentry/core/esm/integration.js","webpack:///./node_modules/@sentry/utils/esm/stacktrace.js","webpack:///./node_modules/@sentry/utils/esm/supports.js","webpack:///./node_modules/@sentry/utils/esm/vendor/supportsHistory.js","webpack:///./node_modules/@sentry/utils/esm/instrument.js","webpack:///./node_modules/@sentry/utils/esm/error.js","webpack:///./node_modules/@sentry/utils/esm/dsn.js","webpack:///./node_modules/@sentry/utils/esm/normalize.js","webpack:///./node_modules/@sentry/utils/esm/memo.js","webpack:///./node_modules/@sentry/utils/esm/envelope.js","webpack:///./node_modules/@sentry/core/esm/api.js","webpack:///./node_modules/@sentry/core/esm/utils/prepareEvent.js","webpack:///./node_modules/@sentry/core/esm/baseclient.js","webpack:///./node_modules/@sentry/core/esm/envelope.js","webpack:///./node_modules/@sentry/core/esm/version.js","webpack:///./node_modules/@sentry/browser/esm/eventbuilder.js","webpack:///./node_modules/@sentry/core/esm/exports.js","webpack:///./node_modules/@sentry/browser/esm/helpers.js","webpack:///./node_modules/@sentry/utils/esm/severity.js","webpack:///./node_modules/@sentry/utils/esm/url.js","webpack:///./node_modules/@sentry/browser/esm/integrations/breadcrumbs.js","webpack:///./node_modules/@sentry/browser/esm/client.js","webpack:///./node_modules/@sentry/browser/esm/userfeedback.js","webpack:///./node_modules/@sentry/utils/esm/clientreport.js","webpack:///./node_modules/@sentry/browser/esm/integrations/globalhandlers.js","webpack:///./node_modules/@sentry/browser/esm/integrations/trycatch.js","webpack:///./node_modules/@sentry/browser/esm/integrations/linkederrors.js","webpack:///./node_modules/@sentry/browser/esm/integrations/httpcontext.js","webpack:///./node_modules/@sentry/browser/esm/integrations/dedupe.js","webpack:///./node_modules/@sentry/browser/esm/stack-parsers.js","webpack:///./node_modules/@sentry/core/esm/transports/base.js","webpack:///./node_modules/@sentry/utils/esm/promisebuffer.js","webpack:///./node_modules/@sentry/utils/esm/ratelimit.js","webpack:///./node_modules/@sentry/browser/esm/transports/utils.js","webpack:///./node_modules/@sentry/browser/esm/transports/fetch.js","webpack:///./node_modules/@sentry/browser/esm/transports/xhr.js","webpack:///./node_modules/@sentry/browser/esm/sdk.js","webpack:///./node_modules/@sentry/core/esm/sdk.js","webpack:///./src/index.js","webpack:///./src/foo.js"],"sourcesContent":["var _global = (typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {}); _global.SENTRY_RELEASE={id:\"webpack@1.0.0\"};\n      _global.SENTRY_RELEASES=_global.SENTRY_RELEASES || {};\n      _global.SENTRY_RELEASES[\"javascript-webpack@dragonfruit-dev\"]={id:\"webpack@1.0.0\"};\n      ","/*\n * This module exists for optimizations in the build process through rollup and terser.  We define some global\n * constants, which can be overridden during build. By guarding certain pieces of code with functions that return these\n * constants, we can control whether or not they appear in the final bundle. (Any code guarded by a false condition will\n * never run, and will hence be dropped during treeshaking.) The two primary uses for this are stripping out calls to\n * `logger` and preventing node-related code from appearing in browser bundles.\n *\n * Attention:\n * This file should not be used to define constants/flags that are intended to be used for tree-shaking conducted by\n * users. These flags should live in their respective packages, as we identified user tooling (specifically webpack)\n * having issues tree-shaking these constants across package boundaries.\n * An example for this is the __SENTRY_DEBUG__ constant. It is declared in each package individually because we want\n * users to be able to shake away expressions that it guards.\n */\n\n/**\n * Figures out if we're building a browser bundle.\n *\n * @returns true if this is a browser bundle build.\n */\nfunction isBrowserBundle() {\n  return typeof __SENTRY_BROWSER_BUNDLE__ !== 'undefined' && !!__SENTRY_BROWSER_BUNDLE__;\n}\n\n/**\n * Get source of SDK.\n */\nfunction getSDKSource() {\n  // @ts-ignore \"npm\" is injected by rollup during build process\n  return \"npm\";\n}\n\nexport { getSDKSource, isBrowserBundle };\n//# sourceMappingURL=env.js.map\n","import { isBrowserBundle } from './env.js';\n\n/**\n * NOTE: In order to avoid circular dependencies, if you add a function to this module and it needs to print something,\n * you must either a) use `console.log` rather than the logger, or b) put your function elsewhere.\n */\n\n/**\n * Checks whether we're in the Node.js or Browser environment\n *\n * @returns Answer to given question\n */\nfunction isNodeEnv() {\n  // explicitly check for browser bundles as those can be optimized statically\n  // by terser/rollup.\n  return (\n    !isBrowserBundle() &&\n    Object.prototype.toString.call(typeof process !== 'undefined' ? process : 0) === '[object process]'\n  );\n}\n\n/**\n * Requires a module which is protected against bundler minification.\n *\n * @param request The module path to resolve\n */\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types, @typescript-eslint/no-explicit-any\nfunction dynamicRequire(mod, request) {\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n  return mod.require(request);\n}\n\n/**\n * Helper for dynamically loading module that should work with linked dependencies.\n * The problem is that we _should_ be using `require(require.resolve(moduleName, { paths: [cwd()] }))`\n * However it's _not possible_ to do that with Webpack, as it has to know all the dependencies during\n * build time. `require.resolve` is also not available in any other way, so we cannot create,\n * a fake helper like we do with `dynamicRequire`.\n *\n * We always prefer to use local package, thus the value is not returned early from each `try/catch` block.\n * That is to mimic the behavior of `require.resolve` exactly.\n *\n * @param moduleName module name to require\n * @returns possibly required module\n */\nfunction loadModule(moduleName) {\n  let mod;\n\n  try {\n    mod = dynamicRequire(module, moduleName);\n  } catch (e) {\n    // no-empty\n  }\n\n  try {\n    const { cwd } = dynamicRequire(module, 'process');\n    mod = dynamicRequire(module, `${cwd()}/node_modules/${moduleName}`) ;\n  } catch (e) {\n    // no-empty\n  }\n\n  return mod;\n}\n\nexport { dynamicRequire, isNodeEnv, loadModule };\n//# sourceMappingURL=node.js.map\n","import { isNodeEnv, dynamicRequire } from './node.js';\nimport { getGlobalObject } from './worldwide.js';\n\n// eslint-disable-next-line deprecation/deprecation\nconst WINDOW = getGlobalObject();\n\n/**\n * An object that can return the current timestamp in seconds since the UNIX epoch.\n */\n\n/**\n * A TimestampSource implementation for environments that do not support the Performance Web API natively.\n *\n * Note that this TimestampSource does not use a monotonic clock. A call to `nowSeconds` may return a timestamp earlier\n * than a previously returned value. We do not try to emulate a monotonic behavior in order to facilitate debugging. It\n * is more obvious to explain \"why does my span have negative duration\" than \"why my spans have zero duration\".\n */\nconst dateTimestampSource = {\n  nowSeconds: () => Date.now() / 1000,\n};\n\n/**\n * A partial definition of the [Performance Web API]{@link https://developer.mozilla.org/en-US/docs/Web/API/Performance}\n * for accessing a high-resolution monotonic clock.\n */\n\n/**\n * Returns a wrapper around the native Performance API browser implementation, or undefined for browsers that do not\n * support the API.\n *\n * Wrapping the native API works around differences in behavior from different browsers.\n */\nfunction getBrowserPerformance() {\n  const { performance } = WINDOW;\n  if (!performance || !performance.now) {\n    return undefined;\n  }\n\n  // Replace performance.timeOrigin with our own timeOrigin based on Date.now().\n  //\n  // This is a partial workaround for browsers reporting performance.timeOrigin such that performance.timeOrigin +\n  // performance.now() gives a date arbitrarily in the past.\n  //\n  // Additionally, computing timeOrigin in this way fills the gap for browsers where performance.timeOrigin is\n  // undefined.\n  //\n  // The assumption that performance.timeOrigin + performance.now() ~= Date.now() is flawed, but we depend on it to\n  // interact with data coming out of performance entries.\n  //\n  // Note that despite recommendations against it in the spec, browsers implement the Performance API with a clock that\n  // might stop when the computer is asleep (and perhaps under other circumstances). Such behavior causes\n  // performance.timeOrigin + performance.now() to have an arbitrary skew over Date.now(). In laptop computers, we have\n  // observed skews that can be as long as days, weeks or months.\n  //\n  // See https://github.com/getsentry/sentry-javascript/issues/2590.\n  //\n  // BUG: despite our best intentions, this workaround has its limitations. It mostly addresses timings of pageload\n  // transactions, but ignores the skew built up over time that can aversely affect timestamps of navigation\n  // transactions of long-lived web pages.\n  const timeOrigin = Date.now() - performance.now();\n\n  return {\n    now: () => performance.now(),\n    timeOrigin,\n  };\n}\n\n/**\n * Returns the native Performance API implementation from Node.js. Returns undefined in old Node.js versions that don't\n * implement the API.\n */\nfunction getNodePerformance() {\n  try {\n    const perfHooks = dynamicRequire(module, 'perf_hooks') ;\n    return perfHooks.performance;\n  } catch (_) {\n    return undefined;\n  }\n}\n\n/**\n * The Performance API implementation for the current platform, if available.\n */\nconst platformPerformance = isNodeEnv() ? getNodePerformance() : getBrowserPerformance();\n\nconst timestampSource =\n  platformPerformance === undefined\n    ? dateTimestampSource\n    : {\n        nowSeconds: () => (platformPerformance.timeOrigin + platformPerformance.now()) / 1000,\n      };\n\n/**\n * Returns a timestamp in seconds since the UNIX epoch using the Date API.\n */\nconst dateTimestampInSeconds = dateTimestampSource.nowSeconds.bind(dateTimestampSource);\n\n/**\n * Returns a timestamp in seconds since the UNIX epoch using either the Performance or Date APIs, depending on the\n * availability of the Performance API.\n *\n * See `usingPerformanceAPI` to test whether the Performance API is used.\n *\n * BUG: Note that because of how browsers implement the Performance API, the clock might stop when the computer is\n * asleep. This creates a skew between `dateTimestampInSeconds` and `timestampInSeconds`. The\n * skew can grow to arbitrary amounts like days, weeks or months.\n * See https://github.com/getsentry/sentry-javascript/issues/2590.\n */\nconst timestampInSeconds = timestampSource.nowSeconds.bind(timestampSource);\n\n/**\n * Re-exported with an old name for backwards-compatibility.\n * TODO (v8): Remove this\n *\n * @deprecated Use `timestampInSeconds` instead.\n */\nconst timestampWithMs = timestampInSeconds;\n\n/**\n * A boolean that is true when timestampInSeconds uses the Performance API to produce monotonic timestamps.\n */\nconst usingPerformanceAPI = platformPerformance !== undefined;\n\n/**\n * Internal helper to store what is the source of browserPerformanceTimeOrigin below. For debugging only.\n */\nlet _browserPerformanceTimeOriginMode;\n\n/**\n * The number of milliseconds since the UNIX epoch. This value is only usable in a browser, and only when the\n * performance API is available.\n */\nconst browserPerformanceTimeOrigin = (() => {\n  // Unfortunately browsers may report an inaccurate time origin data, through either performance.timeOrigin or\n  // performance.timing.navigationStart, which results in poor results in performance data. We only treat time origin\n  // data as reliable if they are within a reasonable threshold of the current time.\n\n  const { performance } = WINDOW;\n  if (!performance || !performance.now) {\n    _browserPerformanceTimeOriginMode = 'none';\n    return undefined;\n  }\n\n  const threshold = 3600 * 1000;\n  const performanceNow = performance.now();\n  const dateNow = Date.now();\n\n  // if timeOrigin isn't available set delta to threshold so it isn't used\n  const timeOriginDelta = performance.timeOrigin\n    ? Math.abs(performance.timeOrigin + performanceNow - dateNow)\n    : threshold;\n  const timeOriginIsReliable = timeOriginDelta < threshold;\n\n  // While performance.timing.navigationStart is deprecated in favor of performance.timeOrigin, performance.timeOrigin\n  // is not as widely supported. Namely, performance.timeOrigin is undefined in Safari as of writing.\n  // Also as of writing, performance.timing is not available in Web Workers in mainstream browsers, so it is not always\n  // a valid fallback. In the absence of an initial time provided by the browser, fallback to the current time from the\n  // Date API.\n  // eslint-disable-next-line deprecation/deprecation\n  const navigationStart = performance.timing && performance.timing.navigationStart;\n  const hasNavigationStart = typeof navigationStart === 'number';\n  // if navigationStart isn't available set delta to threshold so it isn't used\n  const navigationStartDelta = hasNavigationStart ? Math.abs(navigationStart + performanceNow - dateNow) : threshold;\n  const navigationStartIsReliable = navigationStartDelta < threshold;\n\n  if (timeOriginIsReliable || navigationStartIsReliable) {\n    // Use the more reliable time origin\n    if (timeOriginDelta <= navigationStartDelta) {\n      _browserPerformanceTimeOriginMode = 'timeOrigin';\n      return performance.timeOrigin;\n    } else {\n      _browserPerformanceTimeOriginMode = 'navigationStart';\n      return navigationStart;\n    }\n  }\n\n  // Either both timeOrigin and navigationStart are skewed or neither is available, fallback to Date.\n  _browserPerformanceTimeOriginMode = 'dateNow';\n  return dateNow;\n})();\n\nexport { _browserPerformanceTimeOriginMode, browserPerformanceTimeOrigin, dateTimestampInSeconds, timestampInSeconds, timestampWithMs, usingPerformanceAPI };\n//# sourceMappingURL=time.js.map\n","/** Internal global with common properties and Sentry extensions  */\n\n// The code below for 'isGlobalObj' and 'GLOBAL_OBJ' was copied from core-js before modification\n// https://github.com/zloirock/core-js/blob/1b944df55282cdc99c90db5f49eb0b6eda2cc0a3/packages/core-js/internals/global.js\n// core-js has the following licence:\n//\n// Copyright (c) 2014-2022 Denis Pushkarev\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n/** Returns 'obj' if it's the global object, otherwise returns undefined */\nfunction isGlobalObj(obj) {\n  return obj && obj.Math == Math ? obj : undefined;\n}\n\n/** Get's the global object for the current JavaScript runtime */\nconst GLOBAL_OBJ =\n  (typeof globalThis == 'object' && isGlobalObj(globalThis)) ||\n  // eslint-disable-next-line no-restricted-globals\n  (typeof window == 'object' && isGlobalObj(window)) ||\n  (typeof self == 'object' && isGlobalObj(self)) ||\n  (typeof global == 'object' && isGlobalObj(global)) ||\n  (function () {\n    return this;\n  })() ||\n  {};\n\n/**\n * @deprecated Use GLOBAL_OBJ instead or WINDOW from @sentry/browser. This will be removed in v8\n */\nfunction getGlobalObject() {\n  return GLOBAL_OBJ ;\n}\n\n/**\n * Returns a global singleton contained in the global `__SENTRY__` object.\n *\n * If the singleton doesn't already exist in `__SENTRY__`, it will be created using the given factory\n * function and added to the `__SENTRY__` object.\n *\n * @param name name of the global singleton on __SENTRY__\n * @param creator creator Factory function to create the singleton if it doesn't already exist on `__SENTRY__`\n * @param obj (Optional) The global object on which to look for `__SENTRY__`, if not `GLOBAL_OBJ`'s return value\n * @returns the singleton\n */\nfunction getGlobalSingleton(name, creator, obj) {\n  const gbl = (obj || GLOBAL_OBJ) ;\n  const __SENTRY__ = (gbl.__SENTRY__ = gbl.__SENTRY__ || {});\n  const singleton = __SENTRY__[name] || (__SENTRY__[name] = creator());\n  return singleton;\n}\n\nexport { GLOBAL_OBJ, getGlobalObject, getGlobalSingleton };\n//# sourceMappingURL=worldwide.js.map\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.hmd = (module) => {\n\tmodule = Object.create(module);\n\tif (!module.children) module.children = [];\n\tObject.defineProperty(module, 'exports', {\n\t\tenumerable: true,\n\t\tset: () => {\n\t\t\tthrow new Error('ES Modules may not assign module.exports or exports.*, Use ESM export syntax, instead: ' + module.id);\n\t\t}\n\t});\n\treturn module;\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","import { getGlobalSingleton, GLOBAL_OBJ } from './worldwide.js';\n\n/** Prefix for logging strings */\nconst PREFIX = 'Sentry Logger ';\n\nconst CONSOLE_LEVELS = ['debug', 'info', 'warn', 'error', 'log', 'assert', 'trace'] ;\n\n/**\n * Temporarily disable sentry console instrumentations.\n *\n * @param callback The function to run against the original `console` messages\n * @returns The results of the callback\n */\nfunction consoleSandbox(callback) {\n  if (!('console' in GLOBAL_OBJ)) {\n    return callback();\n  }\n\n  const originalConsole = GLOBAL_OBJ.console ;\n  const wrappedLevels = {};\n\n  // Restore all wrapped console methods\n  CONSOLE_LEVELS.forEach(level => {\n    // TODO(v7): Remove this check as it's only needed for Node 6\n    const originalWrappedFunc =\n      originalConsole[level] && (originalConsole[level] ).__sentry_original__;\n    if (level in originalConsole && originalWrappedFunc) {\n      wrappedLevels[level] = originalConsole[level] ;\n      originalConsole[level] = originalWrappedFunc ;\n    }\n  });\n\n  try {\n    return callback();\n  } finally {\n    // Revert restoration to wrapped state\n    Object.keys(wrappedLevels).forEach(level => {\n      originalConsole[level] = wrappedLevels[level ];\n    });\n  }\n}\n\nfunction makeLogger() {\n  let enabled = false;\n  const logger = {\n    enable: () => {\n      enabled = true;\n    },\n    disable: () => {\n      enabled = false;\n    },\n  };\n\n  if ((typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__)) {\n    CONSOLE_LEVELS.forEach(name => {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      logger[name] = (...args) => {\n        if (enabled) {\n          consoleSandbox(() => {\n            GLOBAL_OBJ.console[name](`${PREFIX}[${name}]:`, ...args);\n          });\n        }\n      };\n    });\n  } else {\n    CONSOLE_LEVELS.forEach(name => {\n      logger[name] = () => undefined;\n    });\n  }\n\n  return logger ;\n}\n\n// Ensure we only have a single logger instance, even if multiple versions of @sentry/utils are being used\nlet logger;\nif ((typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__)) {\n  logger = getGlobalSingleton('logger', makeLogger);\n} else {\n  logger = makeLogger();\n}\n\nexport { CONSOLE_LEVELS, consoleSandbox, logger };\n//# sourceMappingURL=logger.js.map\n","// eslint-disable-next-line @typescript-eslint/unbound-method\nconst objectToString = Object.prototype.toString;\n\n/**\n * Checks whether given value's type is one of a few Error or Error-like\n * {@link isError}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isError(wat) {\n  switch (objectToString.call(wat)) {\n    case '[object Error]':\n    case '[object Exception]':\n    case '[object DOMException]':\n      return true;\n    default:\n      return isInstanceOf(wat, Error);\n  }\n}\n/**\n * Checks whether given value is an instance of the given built-in class.\n *\n * @param wat The value to be checked\n * @param className\n * @returns A boolean representing the result.\n */\nfunction isBuiltin(wat, className) {\n  return objectToString.call(wat) === `[object ${className}]`;\n}\n\n/**\n * Checks whether given value's type is ErrorEvent\n * {@link isErrorEvent}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isErrorEvent(wat) {\n  return isBuiltin(wat, 'ErrorEvent');\n}\n\n/**\n * Checks whether given value's type is DOMError\n * {@link isDOMError}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isDOMError(wat) {\n  return isBuiltin(wat, 'DOMError');\n}\n\n/**\n * Checks whether given value's type is DOMException\n * {@link isDOMException}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isDOMException(wat) {\n  return isBuiltin(wat, 'DOMException');\n}\n\n/**\n * Checks whether given value's type is a string\n * {@link isString}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isString(wat) {\n  return isBuiltin(wat, 'String');\n}\n\n/**\n * Checks whether given value is a primitive (undefined, null, number, boolean, string, bigint, symbol)\n * {@link isPrimitive}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isPrimitive(wat) {\n  return wat === null || (typeof wat !== 'object' && typeof wat !== 'function');\n}\n\n/**\n * Checks whether given value's type is an object literal\n * {@link isPlainObject}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isPlainObject(wat) {\n  return isBuiltin(wat, 'Object');\n}\n\n/**\n * Checks whether given value's type is an Event instance\n * {@link isEvent}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isEvent(wat) {\n  return typeof Event !== 'undefined' && isInstanceOf(wat, Event);\n}\n\n/**\n * Checks whether given value's type is an Element instance\n * {@link isElement}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isElement(wat) {\n  return typeof Element !== 'undefined' && isInstanceOf(wat, Element);\n}\n\n/**\n * Checks whether given value's type is an regexp\n * {@link isRegExp}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isRegExp(wat) {\n  return isBuiltin(wat, 'RegExp');\n}\n\n/**\n * Checks whether given value has a then function.\n * @param wat A value to be checked.\n */\nfunction isThenable(wat) {\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n  return Boolean(wat && wat.then && typeof wat.then === 'function');\n}\n\n/**\n * Checks whether given value's type is a SyntheticEvent\n * {@link isSyntheticEvent}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isSyntheticEvent(wat) {\n  return isPlainObject(wat) && 'nativeEvent' in wat && 'preventDefault' in wat && 'stopPropagation' in wat;\n}\n\n/**\n * Checks whether given value is NaN\n * {@link isNaN}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isNaN(wat) {\n  return typeof wat === 'number' && wat !== wat;\n}\n\n/**\n * Checks whether given value's type is an instance of provided constructor.\n * {@link isInstanceOf}.\n *\n * @param wat A value to be checked.\n * @param base A constructor to be used in a check.\n * @returns A boolean representing the result.\n */\nfunction isInstanceOf(wat, base) {\n  try {\n    return wat instanceof base;\n  } catch (_e) {\n    return false;\n  }\n}\n\nexport { isDOMError, isDOMException, isElement, isError, isErrorEvent, isEvent, isInstanceOf, isNaN, isPlainObject, isPrimitive, isRegExp, isString, isSyntheticEvent, isThenable };\n//# sourceMappingURL=is.js.map\n","import { isString } from './is.js';\nimport { getGlobalObject } from './worldwide.js';\n\n// eslint-disable-next-line deprecation/deprecation\nconst WINDOW = getGlobalObject();\n\nconst DEFAULT_MAX_STRING_LENGTH = 80;\n\n/**\n * Given a child DOM element, returns a query-selector statement describing that\n * and its ancestors\n * e.g. [HTMLElement] => body > div > input#foo.btn[name=baz]\n * @returns generated DOM path\n */\nfunction htmlTreeAsString(\n  elem,\n  options = {},\n) {\n\n  // try/catch both:\n  // - accessing event.target (see getsentry/raven-js#838, #768)\n  // - `htmlTreeAsString` because it's complex, and just accessing the DOM incorrectly\n  // - can throw an exception in some circumstances.\n  try {\n    let currentElem = elem ;\n    const MAX_TRAVERSE_HEIGHT = 5;\n    const out = [];\n    let height = 0;\n    let len = 0;\n    const separator = ' > ';\n    const sepLength = separator.length;\n    let nextStr;\n    const keyAttrs = Array.isArray(options) ? options : options.keyAttrs;\n    const maxStringLength = (!Array.isArray(options) && options.maxStringLength) || DEFAULT_MAX_STRING_LENGTH;\n\n    while (currentElem && height++ < MAX_TRAVERSE_HEIGHT) {\n      nextStr = _htmlElementAsString(currentElem, keyAttrs);\n      // bail out if\n      // - nextStr is the 'html' element\n      // - the length of the string that would be created exceeds maxStringLength\n      //   (ignore this limit if we are on the first iteration)\n      if (nextStr === 'html' || (height > 1 && len + out.length * sepLength + nextStr.length >= maxStringLength)) {\n        break;\n      }\n\n      out.push(nextStr);\n\n      len += nextStr.length;\n      currentElem = currentElem.parentNode;\n    }\n\n    return out.reverse().join(separator);\n  } catch (_oO) {\n    return '<unknown>';\n  }\n}\n\n/**\n * Returns a simple, query-selector representation of a DOM element\n * e.g. [HTMLElement] => input#foo.btn[name=baz]\n * @returns generated DOM path\n */\nfunction _htmlElementAsString(el, keyAttrs) {\n  const elem = el\n\n;\n\n  const out = [];\n  let className;\n  let classes;\n  let key;\n  let attr;\n  let i;\n\n  if (!elem || !elem.tagName) {\n    return '';\n  }\n\n  out.push(elem.tagName.toLowerCase());\n\n  // Pairs of attribute keys defined in `serializeAttribute` and their values on element.\n  const keyAttrPairs =\n    keyAttrs && keyAttrs.length\n      ? keyAttrs.filter(keyAttr => elem.getAttribute(keyAttr)).map(keyAttr => [keyAttr, elem.getAttribute(keyAttr)])\n      : null;\n\n  if (keyAttrPairs && keyAttrPairs.length) {\n    keyAttrPairs.forEach(keyAttrPair => {\n      out.push(`[${keyAttrPair[0]}=\"${keyAttrPair[1]}\"]`);\n    });\n  } else {\n    if (elem.id) {\n      out.push(`#${elem.id}`);\n    }\n\n    // eslint-disable-next-line prefer-const\n    className = elem.className;\n    if (className && isString(className)) {\n      classes = className.split(/\\s+/);\n      for (i = 0; i < classes.length; i++) {\n        out.push(`.${classes[i]}`);\n      }\n    }\n  }\n  const allowedAttrs = ['aria-label', 'type', 'name', 'title', 'alt'];\n  for (i = 0; i < allowedAttrs.length; i++) {\n    key = allowedAttrs[i];\n    attr = elem.getAttribute(key);\n    if (attr) {\n      out.push(`[${key}=\"${attr}\"]`);\n    }\n  }\n  return out.join('');\n}\n\n/**\n * A safe form of location.href\n */\nfunction getLocationHref() {\n  try {\n    return WINDOW.document.location.href;\n  } catch (oO) {\n    return '';\n  }\n}\n\n/**\n * Gets a DOM element by using document.querySelector.\n *\n * This wrapper will first check for the existance of the function before\n * actually calling it so that we don't have to take care of this check,\n * every time we want to access the DOM.\n *\n * Reason: DOM/querySelector is not available in all environments.\n *\n * We have to cast to any because utils can be consumed by a variety of environments,\n * and we don't want to break TS users. If you know what element will be selected by\n * `document.querySelector`, specify it as part of the generic call. For example,\n * `const element = getDomElement<Element>('selector');`\n *\n * @param selector the selector string passed on to document.querySelector\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction getDomElement(selector) {\n  if (WINDOW.document && WINDOW.document.querySelector) {\n    return WINDOW.document.querySelector(selector) ;\n  }\n  return null;\n}\n\nexport { getDomElement, getLocationHref, htmlTreeAsString };\n//# sourceMappingURL=browser.js.map\n","import { isString, isRegExp } from './is.js';\n\n/**\n * Truncates given string to the maximum characters count\n *\n * @param str An object that contains serializable values\n * @param max Maximum number of characters in truncated string (0 = unlimited)\n * @returns string Encoded\n */\nfunction truncate(str, max = 0) {\n  if (typeof str !== 'string' || max === 0) {\n    return str;\n  }\n  return str.length <= max ? str : `${str.slice(0, max)}...`;\n}\n\n/**\n * This is basically just `trim_line` from\n * https://github.com/getsentry/sentry/blob/master/src/sentry/lang/javascript/processor.py#L67\n *\n * @param str An object that contains serializable values\n * @param max Maximum number of characters in truncated string\n * @returns string Encoded\n */\nfunction snipLine(line, colno) {\n  let newLine = line;\n  const lineLength = newLine.length;\n  if (lineLength <= 150) {\n    return newLine;\n  }\n  if (colno > lineLength) {\n    // eslint-disable-next-line no-param-reassign\n    colno = lineLength;\n  }\n\n  let start = Math.max(colno - 60, 0);\n  if (start < 5) {\n    start = 0;\n  }\n\n  let end = Math.min(start + 140, lineLength);\n  if (end > lineLength - 5) {\n    end = lineLength;\n  }\n  if (end === lineLength) {\n    start = Math.max(end - 140, 0);\n  }\n\n  newLine = newLine.slice(start, end);\n  if (start > 0) {\n    newLine = `'{snip} ${newLine}`;\n  }\n  if (end < lineLength) {\n    newLine += ' {snip}';\n  }\n\n  return newLine;\n}\n\n/**\n * Join values in array\n * @param input array of values to be joined together\n * @param delimiter string to be placed in-between values\n * @returns Joined values\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction safeJoin(input, delimiter) {\n  if (!Array.isArray(input)) {\n    return '';\n  }\n\n  const output = [];\n  // eslint-disable-next-line @typescript-eslint/prefer-for-of\n  for (let i = 0; i < input.length; i++) {\n    const value = input[i];\n    try {\n      output.push(String(value));\n    } catch (e) {\n      output.push('[value cannot be serialized]');\n    }\n  }\n\n  return output.join(delimiter);\n}\n\n/**\n * Checks if the given value matches a regex or string\n *\n * @param value The string to test\n * @param pattern Either a regex or a string against which `value` will be matched\n * @param requireExactStringMatch If true, `value` must match `pattern` exactly. If false, `value` will match\n * `pattern` if it contains `pattern`. Only applies to string-type patterns.\n */\nfunction isMatchingPattern(\n  value,\n  pattern,\n  requireExactStringMatch = false,\n) {\n  if (!isString(value)) {\n    return false;\n  }\n\n  if (isRegExp(pattern)) {\n    return pattern.test(value);\n  }\n  if (isString(pattern)) {\n    return requireExactStringMatch ? value === pattern : value.includes(pattern);\n  }\n\n  return false;\n}\n\n/**\n * Test the given string against an array of strings and regexes. By default, string matching is done on a\n * substring-inclusion basis rather than a strict equality basis\n *\n * @param testString The string to test\n * @param patterns The patterns against which to test the string\n * @param requireExactStringMatch If true, `testString` must match one of the given string patterns exactly in order to\n * count. If false, `testString` will match a string pattern if it contains that pattern.\n * @returns\n */\nfunction stringMatchesSomePattern(\n  testString,\n  patterns = [],\n  requireExactStringMatch = false,\n) {\n  return patterns.some(pattern => isMatchingPattern(testString, pattern, requireExactStringMatch));\n}\n\nexport { isMatchingPattern, safeJoin, snipLine, stringMatchesSomePattern, truncate };\n//# sourceMappingURL=string.js.map\n","import { htmlTreeAsString } from './browser.js';\nimport { isError, isEvent, isInstanceOf, isElement, isPlainObject, isPrimitive } from './is.js';\nimport { truncate } from './string.js';\n\n/**\n * Replace a method in an object with a wrapped version of itself.\n *\n * @param source An object that contains a method to be wrapped.\n * @param name The name of the method to be wrapped.\n * @param replacementFactory A higher-order function that takes the original version of the given method and returns a\n * wrapped version. Note: The function returned by `replacementFactory` needs to be a non-arrow function, in order to\n * preserve the correct value of `this`, and the original method must be called using `origMethod.call(this, <other\n * args>)` or `origMethod.apply(this, [<other args>])` (rather than being called directly), again to preserve `this`.\n * @returns void\n */\nfunction fill(source, name, replacementFactory) {\n  if (!(name in source)) {\n    return;\n  }\n\n  const original = source[name] ;\n  const wrapped = replacementFactory(original) ;\n\n  // Make sure it's a function first, as we need to attach an empty prototype for `defineProperties` to work\n  // otherwise it'll throw \"TypeError: Object.defineProperties called on non-object\"\n  if (typeof wrapped === 'function') {\n    try {\n      markFunctionWrapped(wrapped, original);\n    } catch (_Oo) {\n      // This can throw if multiple fill happens on a global object like XMLHttpRequest\n      // Fixes https://github.com/getsentry/sentry-javascript/issues/2043\n    }\n  }\n\n  source[name] = wrapped;\n}\n\n/**\n * Defines a non-enumerable property on the given object.\n *\n * @param obj The object on which to set the property\n * @param name The name of the property to be set\n * @param value The value to which to set the property\n */\nfunction addNonEnumerableProperty(obj, name, value) {\n  Object.defineProperty(obj, name, {\n    // enumerable: false, // the default, so we can save on bundle size by not explicitly setting it\n    value: value,\n    writable: true,\n    configurable: true,\n  });\n}\n\n/**\n * Remembers the original function on the wrapped function and\n * patches up the prototype.\n *\n * @param wrapped the wrapper function\n * @param original the original function that gets wrapped\n */\nfunction markFunctionWrapped(wrapped, original) {\n  const proto = original.prototype || {};\n  wrapped.prototype = original.prototype = proto;\n  addNonEnumerableProperty(wrapped, '__sentry_original__', original);\n}\n\n/**\n * This extracts the original function if available.  See\n * `markFunctionWrapped` for more information.\n *\n * @param func the function to unwrap\n * @returns the unwrapped version of the function if available.\n */\nfunction getOriginalFunction(func) {\n  return func.__sentry_original__;\n}\n\n/**\n * Encodes given object into url-friendly format\n *\n * @param object An object that contains serializable values\n * @returns string Encoded\n */\nfunction urlEncode(object) {\n  return Object.keys(object)\n    .map(key => `${encodeURIComponent(key)}=${encodeURIComponent(object[key])}`)\n    .join('&');\n}\n\n/**\n * Transforms any `Error` or `Event` into a plain object with all of their enumerable properties, and some of their\n * non-enumerable properties attached.\n *\n * @param value Initial source that we have to transform in order for it to be usable by the serializer\n * @returns An Event or Error turned into an object - or the value argurment itself, when value is neither an Event nor\n *  an Error.\n */\nfunction convertToPlainObject(value)\n\n {\n  if (isError(value)) {\n    return {\n      message: value.message,\n      name: value.name,\n      stack: value.stack,\n      ...getOwnProperties(value),\n    };\n  } else if (isEvent(value)) {\n    const newObj\n\n = {\n      type: value.type,\n      target: serializeEventTarget(value.target),\n      currentTarget: serializeEventTarget(value.currentTarget),\n      ...getOwnProperties(value),\n    };\n\n    if (typeof CustomEvent !== 'undefined' && isInstanceOf(value, CustomEvent)) {\n      newObj.detail = value.detail;\n    }\n\n    return newObj;\n  } else {\n    return value;\n  }\n}\n\n/** Creates a string representation of the target of an `Event` object */\nfunction serializeEventTarget(target) {\n  try {\n    return isElement(target) ? htmlTreeAsString(target) : Object.prototype.toString.call(target);\n  } catch (_oO) {\n    return '<unknown>';\n  }\n}\n\n/** Filters out all but an object's own properties */\nfunction getOwnProperties(obj) {\n  if (typeof obj === 'object' && obj !== null) {\n    const extractedProps = {};\n    for (const property in obj) {\n      if (Object.prototype.hasOwnProperty.call(obj, property)) {\n        extractedProps[property] = (obj )[property];\n      }\n    }\n    return extractedProps;\n  } else {\n    return {};\n  }\n}\n\n/**\n * Given any captured exception, extract its keys and create a sorted\n * and truncated list that will be used inside the event message.\n * eg. `Non-error exception captured with keys: foo, bar, baz`\n */\nfunction extractExceptionKeysForMessage(exception, maxLength = 40) {\n  const keys = Object.keys(convertToPlainObject(exception));\n  keys.sort();\n\n  if (!keys.length) {\n    return '[object has no keys]';\n  }\n\n  if (keys[0].length >= maxLength) {\n    return truncate(keys[0], maxLength);\n  }\n\n  for (let includedKeys = keys.length; includedKeys > 0; includedKeys--) {\n    const serialized = keys.slice(0, includedKeys).join(', ');\n    if (serialized.length > maxLength) {\n      continue;\n    }\n    if (includedKeys === keys.length) {\n      return serialized;\n    }\n    return truncate(serialized, maxLength);\n  }\n\n  return '';\n}\n\n/**\n * Given any object, return a new object having removed all fields whose value was `undefined`.\n * Works recursively on objects and arrays.\n *\n * Attention: This function keeps circular references in the returned object.\n */\nfunction dropUndefinedKeys(inputValue) {\n  // This map keeps track of what already visited nodes map to.\n  // Our Set - based memoBuilder doesn't work here because we want to the output object to have the same circular\n  // references as the input object.\n  const memoizationMap = new Map();\n\n  // This function just proxies `_dropUndefinedKeys` to keep the `memoBuilder` out of this function's API\n  return _dropUndefinedKeys(inputValue, memoizationMap);\n}\n\nfunction _dropUndefinedKeys(inputValue, memoizationMap) {\n  if (isPlainObject(inputValue)) {\n    // If this node has already been visited due to a circular reference, return the object it was mapped to in the new object\n    const memoVal = memoizationMap.get(inputValue);\n    if (memoVal !== undefined) {\n      return memoVal ;\n    }\n\n    const returnValue = {};\n    // Store the mapping of this value in case we visit it again, in case of circular data\n    memoizationMap.set(inputValue, returnValue);\n\n    for (const key of Object.keys(inputValue)) {\n      if (typeof inputValue[key] !== 'undefined') {\n        returnValue[key] = _dropUndefinedKeys(inputValue[key], memoizationMap);\n      }\n    }\n\n    return returnValue ;\n  }\n\n  if (Array.isArray(inputValue)) {\n    // If this node has already been visited due to a circular reference, return the array it was mapped to in the new object\n    const memoVal = memoizationMap.get(inputValue);\n    if (memoVal !== undefined) {\n      return memoVal ;\n    }\n\n    const returnValue = [];\n    // Store the mapping of this value in case we visit it again, in case of circular data\n    memoizationMap.set(inputValue, returnValue);\n\n    inputValue.forEach((item) => {\n      returnValue.push(_dropUndefinedKeys(item, memoizationMap));\n    });\n\n    return returnValue ;\n  }\n\n  return inputValue;\n}\n\n/**\n * Ensure that something is an object.\n *\n * Turns `undefined` and `null` into `String`s and all other primitives into instances of their respective wrapper\n * classes (String, Boolean, Number, etc.). Acts as the identity function on non-primitives.\n *\n * @param wat The subject of the objectification\n * @returns A version of `wat` which can safely be used with `Object` class methods\n */\nfunction objectify(wat) {\n  let objectified;\n  switch (true) {\n    case wat === undefined || wat === null:\n      objectified = new String(wat);\n      break;\n\n    // Though symbols and bigints do have wrapper classes (`Symbol` and `BigInt`, respectively), for whatever reason\n    // those classes don't have constructors which can be used with the `new` keyword. We therefore need to cast each as\n    // an object in order to wrap it.\n    case typeof wat === 'symbol' || typeof wat === 'bigint':\n      objectified = Object(wat);\n      break;\n\n    // this will catch the remaining primitives: `String`, `Number`, and `Boolean`\n    case isPrimitive(wat):\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n      objectified = new (wat ).constructor(wat);\n      break;\n\n    // by process of elimination, at this point we know that `wat` must already be an object\n    default:\n      objectified = wat;\n      break;\n  }\n  return objectified;\n}\n\nexport { addNonEnumerableProperty, convertToPlainObject, dropUndefinedKeys, extractExceptionKeysForMessage, fill, getOriginalFunction, markFunctionWrapped, objectify, urlEncode };\n//# sourceMappingURL=object.js.map\n","import { addNonEnumerableProperty } from './object.js';\nimport { snipLine } from './string.js';\nimport { GLOBAL_OBJ } from './worldwide.js';\n\n/**\n * UUID4 generator\n *\n * @returns string Generated UUID4.\n */\nfunction uuid4() {\n  const gbl = GLOBAL_OBJ ;\n  const crypto = gbl.crypto || gbl.msCrypto;\n\n  if (crypto && crypto.randomUUID) {\n    return crypto.randomUUID().replace(/-/g, '');\n  }\n\n  const getRandomByte =\n    crypto && crypto.getRandomValues ? () => crypto.getRandomValues(new Uint8Array(1))[0] : () => Math.random() * 16;\n\n  // http://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid-in-javascript/2117523#2117523\n  // Concatenating the following numbers as strings results in '10000000100040008000100000000000'\n  return (([1e7] ) + 1e3 + 4e3 + 8e3 + 1e11).replace(/[018]/g, c =>\n    // eslint-disable-next-line no-bitwise\n    ((c ) ^ ((getRandomByte() & 15) >> ((c ) / 4))).toString(16),\n  );\n}\n\nfunction getFirstException(event) {\n  return event.exception && event.exception.values ? event.exception.values[0] : undefined;\n}\n\n/**\n * Extracts either message or type+value from an event that can be used for user-facing logs\n * @returns event's description\n */\nfunction getEventDescription(event) {\n  const { message, event_id: eventId } = event;\n  if (message) {\n    return message;\n  }\n\n  const firstException = getFirstException(event);\n  if (firstException) {\n    if (firstException.type && firstException.value) {\n      return `${firstException.type}: ${firstException.value}`;\n    }\n    return firstException.type || firstException.value || eventId || '<unknown>';\n  }\n  return eventId || '<unknown>';\n}\n\n/**\n * Adds exception values, type and value to an synthetic Exception.\n * @param event The event to modify.\n * @param value Value of the exception.\n * @param type Type of the exception.\n * @hidden\n */\nfunction addExceptionTypeValue(event, value, type) {\n  const exception = (event.exception = event.exception || {});\n  const values = (exception.values = exception.values || []);\n  const firstException = (values[0] = values[0] || {});\n  if (!firstException.value) {\n    firstException.value = value || '';\n  }\n  if (!firstException.type) {\n    firstException.type = type || 'Error';\n  }\n}\n\n/**\n * Adds exception mechanism data to a given event. Uses defaults if the second parameter is not passed.\n *\n * @param event The event to modify.\n * @param newMechanism Mechanism data to add to the event.\n * @hidden\n */\nfunction addExceptionMechanism(event, newMechanism) {\n  const firstException = getFirstException(event);\n  if (!firstException) {\n    return;\n  }\n\n  const defaultMechanism = { type: 'generic', handled: true };\n  const currentMechanism = firstException.mechanism;\n  firstException.mechanism = { ...defaultMechanism, ...currentMechanism, ...newMechanism };\n\n  if (newMechanism && 'data' in newMechanism) {\n    const mergedData = { ...(currentMechanism && currentMechanism.data), ...newMechanism.data };\n    firstException.mechanism.data = mergedData;\n  }\n}\n\n// https://semver.org/#is-there-a-suggested-regular-expression-regex-to-check-a-semver-string\nconst SEMVER_REGEXP =\n  /^(0|[1-9]\\d*)\\.(0|[1-9]\\d*)\\.(0|[1-9]\\d*)(?:-((?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\\.(?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\\+([0-9a-zA-Z-]+(?:\\.[0-9a-zA-Z-]+)*))?$/;\n\n/**\n * Represents Semantic Versioning object\n */\n\n/**\n * Parses input into a SemVer interface\n * @param input string representation of a semver version\n */\nfunction parseSemver(input) {\n  const match = input.match(SEMVER_REGEXP) || [];\n  const major = parseInt(match[1], 10);\n  const minor = parseInt(match[2], 10);\n  const patch = parseInt(match[3], 10);\n  return {\n    buildmetadata: match[5],\n    major: isNaN(major) ? undefined : major,\n    minor: isNaN(minor) ? undefined : minor,\n    patch: isNaN(patch) ? undefined : patch,\n    prerelease: match[4],\n  };\n}\n\n/**\n * This function adds context (pre/post/line) lines to the provided frame\n *\n * @param lines string[] containing all lines\n * @param frame StackFrame that will be mutated\n * @param linesOfContext number of context lines we want to add pre/post\n */\nfunction addContextToFrame(lines, frame, linesOfContext = 5) {\n  // When there is no line number in the frame, attaching context is nonsensical and will even break grouping\n  if (frame.lineno === undefined) {\n    return;\n  }\n\n  const maxLines = lines.length;\n  const sourceLine = Math.max(Math.min(maxLines, frame.lineno - 1), 0);\n\n  frame.pre_context = lines\n    .slice(Math.max(0, sourceLine - linesOfContext), sourceLine)\n    .map((line) => snipLine(line, 0));\n\n  frame.context_line = snipLine(lines[Math.min(maxLines - 1, sourceLine)], frame.colno || 0);\n\n  frame.post_context = lines\n    .slice(Math.min(sourceLine + 1, maxLines), sourceLine + 1 + linesOfContext)\n    .map((line) => snipLine(line, 0));\n}\n\n/**\n * Checks whether or not we've already captured the given exception (note: not an identical exception - the very object\n * in question), and marks it captured if not.\n *\n * This is useful because it's possible for an error to get captured by more than one mechanism. After we intercept and\n * record an error, we rethrow it (assuming we've intercepted it before it's reached the top-level global handlers), so\n * that we don't interfere with whatever effects the error might have had were the SDK not there. At that point, because\n * the error has been rethrown, it's possible for it to bubble up to some other code we've instrumented. If it's not\n * caught after that, it will bubble all the way up to the global handlers (which of course we also instrument). This\n * function helps us ensure that even if we encounter the same error more than once, we only record it the first time we\n * see it.\n *\n * Note: It will ignore primitives (always return `false` and not mark them as seen), as properties can't be set on\n * them. {@link: Object.objectify} can be used on exceptions to convert any that are primitives into their equivalent\n * object wrapper forms so that this check will always work. However, because we need to flag the exact object which\n * will get rethrown, and because that rethrowing happens outside of the event processing pipeline, the objectification\n * must be done before the exception captured.\n *\n * @param A thrown exception to check or flag as having been seen\n * @returns `true` if the exception has already been captured, `false` if not (with the side effect of marking it seen)\n */\nfunction checkOrSetAlreadyCaught(exception) {\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n  if (exception && (exception ).__sentry_captured__) {\n    return true;\n  }\n\n  try {\n    // set it this way rather than by assignment so that it's not ennumerable and therefore isn't recorded by the\n    // `ExtraErrorData` integration\n    addNonEnumerableProperty(exception , '__sentry_captured__', true);\n  } catch (err) {\n    // `exception` is a primitive, so we can't mark it seen\n  }\n\n  return false;\n}\n\n/**\n * Checks whether the given input is already an array, and if it isn't, wraps it in one.\n *\n * @param maybeArray Input to turn into an array, if necessary\n * @returns The input, if already an array, or an array with the input as the only element, if not\n */\nfunction arrayify(maybeArray) {\n  return Array.isArray(maybeArray) ? maybeArray : [maybeArray];\n}\n\nexport { addContextToFrame, addExceptionMechanism, addExceptionTypeValue, arrayify, checkOrSetAlreadyCaught, getEventDescription, parseSemver, uuid4 };\n//# sourceMappingURL=misc.js.map\n","import { logger, getEventDescription, stringMatchesSomePattern } from '@sentry/utils';\n\n// \"Script error.\" is hard coded into browsers for errors that it can't read.\n// this is the result of a script being pulled in from an external domain and CORS.\nconst DEFAULT_IGNORE_ERRORS = [/^Script error\\.?$/, /^Javascript error: Script error\\.? on line 0$/];\n\n/** Options for the InboundFilters integration */\n\n/** Inbound filters configurable by the user */\nclass InboundFilters  {\n  /**\n   * @inheritDoc\n   */\n   static __initStatic() {this.id = 'InboundFilters';}\n\n  /**\n   * @inheritDoc\n   */\n   __init() {this.name = InboundFilters.id;}\n\n   constructor(  _options = {}) {this._options = _options;InboundFilters.prototype.__init.call(this);}\n\n  /**\n   * @inheritDoc\n   */\n   setupOnce(addGlobalEventProcessor, getCurrentHub) {\n    const eventProcess = (event) => {\n      const hub = getCurrentHub();\n      if (hub) {\n        const self = hub.getIntegration(InboundFilters);\n        if (self) {\n          const client = hub.getClient();\n          const clientOptions = client ? client.getOptions() : {};\n          const options = _mergeOptions(self._options, clientOptions);\n          return _shouldDropEvent(event, options) ? null : event;\n        }\n      }\n      return event;\n    };\n\n    eventProcess.id = this.name;\n    addGlobalEventProcessor(eventProcess);\n  }\n} InboundFilters.__initStatic();\n\n/** JSDoc */\nfunction _mergeOptions(\n  internalOptions = {},\n  clientOptions = {},\n) {\n  return {\n    allowUrls: [...(internalOptions.allowUrls || []), ...(clientOptions.allowUrls || [])],\n    denyUrls: [...(internalOptions.denyUrls || []), ...(clientOptions.denyUrls || [])],\n    ignoreErrors: [\n      ...(internalOptions.ignoreErrors || []),\n      ...(clientOptions.ignoreErrors || []),\n      ...DEFAULT_IGNORE_ERRORS,\n    ],\n    ignoreTransactions: [...(internalOptions.ignoreTransactions || []), ...(clientOptions.ignoreTransactions || [])],\n    ignoreInternal: internalOptions.ignoreInternal !== undefined ? internalOptions.ignoreInternal : true,\n  };\n}\n\n/** JSDoc */\nfunction _shouldDropEvent(event, options) {\n  if (options.ignoreInternal && _isSentryError(event)) {\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n      logger.warn(`Event dropped due to being internal Sentry Error.\\nEvent: ${getEventDescription(event)}`);\n    return true;\n  }\n  if (_isIgnoredError(event, options.ignoreErrors)) {\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n      logger.warn(\n        `Event dropped due to being matched by \\`ignoreErrors\\` option.\\nEvent: ${getEventDescription(event)}`,\n      );\n    return true;\n  }\n  if (_isIgnoredTransaction(event, options.ignoreTransactions)) {\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n      logger.warn(\n        `Event dropped due to being matched by \\`ignoreTransactions\\` option.\\nEvent: ${getEventDescription(event)}`,\n      );\n    return true;\n  }\n  if (_isDeniedUrl(event, options.denyUrls)) {\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n      logger.warn(\n        `Event dropped due to being matched by \\`denyUrls\\` option.\\nEvent: ${getEventDescription(\n          event,\n        )}.\\nUrl: ${_getEventFilterUrl(event)}`,\n      );\n    return true;\n  }\n  if (!_isAllowedUrl(event, options.allowUrls)) {\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n      logger.warn(\n        `Event dropped due to not being matched by \\`allowUrls\\` option.\\nEvent: ${getEventDescription(\n          event,\n        )}.\\nUrl: ${_getEventFilterUrl(event)}`,\n      );\n    return true;\n  }\n  return false;\n}\n\nfunction _isIgnoredError(event, ignoreErrors) {\n  // If event.type, this is not an error\n  if (event.type || !ignoreErrors || !ignoreErrors.length) {\n    return false;\n  }\n\n  return _getPossibleEventMessages(event).some(message => stringMatchesSomePattern(message, ignoreErrors));\n}\n\nfunction _isIgnoredTransaction(event, ignoreTransactions) {\n  if (event.type !== 'transaction' || !ignoreTransactions || !ignoreTransactions.length) {\n    return false;\n  }\n\n  const name = event.transaction;\n  return name ? stringMatchesSomePattern(name, ignoreTransactions) : false;\n}\n\nfunction _isDeniedUrl(event, denyUrls) {\n  // TODO: Use Glob instead?\n  if (!denyUrls || !denyUrls.length) {\n    return false;\n  }\n  const url = _getEventFilterUrl(event);\n  return !url ? false : stringMatchesSomePattern(url, denyUrls);\n}\n\nfunction _isAllowedUrl(event, allowUrls) {\n  // TODO: Use Glob instead?\n  if (!allowUrls || !allowUrls.length) {\n    return true;\n  }\n  const url = _getEventFilterUrl(event);\n  return !url ? true : stringMatchesSomePattern(url, allowUrls);\n}\n\nfunction _getPossibleEventMessages(event) {\n  if (event.message) {\n    return [event.message];\n  }\n  if (event.exception) {\n    try {\n      const { type = '', value = '' } = (event.exception.values && event.exception.values[0]) || {};\n      return [`${value}`, `${type}: ${value}`];\n    } catch (oO) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.error(`Cannot extract message for event ${getEventDescription(event)}`);\n      return [];\n    }\n  }\n  return [];\n}\n\nfunction _isSentryError(event) {\n  try {\n    // @ts-ignore can't be a sentry error if undefined\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n    return event.exception.values[0].type === 'SentryError';\n  } catch (e) {\n    // ignore\n  }\n  return false;\n}\n\nfunction _getLastValidUrl(frames = []) {\n  for (let i = frames.length - 1; i >= 0; i--) {\n    const frame = frames[i];\n\n    if (frame && frame.filename !== '<anonymous>' && frame.filename !== '[native code]') {\n      return frame.filename || null;\n    }\n  }\n\n  return null;\n}\n\nfunction _getEventFilterUrl(event) {\n  try {\n    let frames;\n    try {\n      // @ts-ignore we only care about frames if the whole thing here is defined\n      frames = event.exception.values[0].stacktrace.frames;\n    } catch (e) {\n      // ignore\n    }\n    return frames ? _getLastValidUrl(frames) : null;\n  } catch (oO) {\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.error(`Cannot extract url for event ${getEventDescription(event)}`);\n    return null;\n  }\n}\n\nexport { InboundFilters, _mergeOptions, _shouldDropEvent };\n//# sourceMappingURL=inboundfilters.js.map\n","import { getOriginalFunction } from '@sentry/utils';\n\nlet originalFunctionToString;\n\n/** Patch toString calls to return proper name for wrapped functions */\nclass FunctionToString  {constructor() { FunctionToString.prototype.__init.call(this); }\n  /**\n   * @inheritDoc\n   */\n   static __initStatic() {this.id = 'FunctionToString';}\n\n  /**\n   * @inheritDoc\n   */\n   __init() {this.name = FunctionToString.id;}\n\n  /**\n   * @inheritDoc\n   */\n   setupOnce() {\n    // eslint-disable-next-line @typescript-eslint/unbound-method\n    originalFunctionToString = Function.prototype.toString;\n\n    // intrinsics (like Function.prototype) might be immutable in some environments\n    // e.g. Node with --frozen-intrinsics, XS (an embedded JavaScript engine) or SES (a JavaScript proposal)\n    try {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      Function.prototype.toString = function ( ...args) {\n        const context = getOriginalFunction(this) || this;\n        return originalFunctionToString.apply(context, args);\n      };\n    } catch (e) {\n      // ignore errors here, just don't patch this\n    }\n  }\n} FunctionToString.__initStatic();\n\nexport { FunctionToString };\n//# sourceMappingURL=functiontostring.js.map\n","const DEFAULT_ENVIRONMENT = 'production';\n\nexport { DEFAULT_ENVIRONMENT };\n//# sourceMappingURL=constants.js.map\n","import { isThenable } from './is.js';\n\n/* eslint-disable @typescript-eslint/explicit-function-return-type */\n\n/** SyncPromise internal states */\nvar States; (function (States) {\n  /** Pending */\n  const PENDING = 0; States[States[\"PENDING\"] = PENDING] = \"PENDING\";\n  /** Resolved / OK */\n  const RESOLVED = 1; States[States[\"RESOLVED\"] = RESOLVED] = \"RESOLVED\";\n  /** Rejected / Error */\n  const REJECTED = 2; States[States[\"REJECTED\"] = REJECTED] = \"REJECTED\";\n})(States || (States = {}));\n\n// Overloads so we can call resolvedSyncPromise without arguments and generic argument\n\n/**\n * Creates a resolved sync promise.\n *\n * @param value the value to resolve the promise with\n * @returns the resolved sync promise\n */\nfunction resolvedSyncPromise(value) {\n  return new SyncPromise(resolve => {\n    resolve(value);\n  });\n}\n\n/**\n * Creates a rejected sync promise.\n *\n * @param value the value to reject the promise with\n * @returns the rejected sync promise\n */\nfunction rejectedSyncPromise(reason) {\n  return new SyncPromise((_, reject) => {\n    reject(reason);\n  });\n}\n\n/**\n * Thenable class that behaves like a Promise and follows it's interface\n * but is not async internally\n */\nclass SyncPromise {\n   __init() {this._state = States.PENDING;}\n   __init2() {this._handlers = [];}\n\n   constructor(\n    executor,\n  ) {SyncPromise.prototype.__init.call(this);SyncPromise.prototype.__init2.call(this);SyncPromise.prototype.__init3.call(this);SyncPromise.prototype.__init4.call(this);SyncPromise.prototype.__init5.call(this);SyncPromise.prototype.__init6.call(this);\n    try {\n      executor(this._resolve, this._reject);\n    } catch (e) {\n      this._reject(e);\n    }\n  }\n\n  /** JSDoc */\n   then(\n    onfulfilled,\n    onrejected,\n  ) {\n    return new SyncPromise((resolve, reject) => {\n      this._handlers.push([\n        false,\n        result => {\n          if (!onfulfilled) {\n            // TODO: ¯\\_(ツ)_/¯\n            // TODO: FIXME\n            resolve(result );\n          } else {\n            try {\n              resolve(onfulfilled(result));\n            } catch (e) {\n              reject(e);\n            }\n          }\n        },\n        reason => {\n          if (!onrejected) {\n            reject(reason);\n          } else {\n            try {\n              resolve(onrejected(reason));\n            } catch (e) {\n              reject(e);\n            }\n          }\n        },\n      ]);\n      this._executeHandlers();\n    });\n  }\n\n  /** JSDoc */\n   catch(\n    onrejected,\n  ) {\n    return this.then(val => val, onrejected);\n  }\n\n  /** JSDoc */\n   finally(onfinally) {\n    return new SyncPromise((resolve, reject) => {\n      let val;\n      let isRejected;\n\n      return this.then(\n        value => {\n          isRejected = false;\n          val = value;\n          if (onfinally) {\n            onfinally();\n          }\n        },\n        reason => {\n          isRejected = true;\n          val = reason;\n          if (onfinally) {\n            onfinally();\n          }\n        },\n      ).then(() => {\n        if (isRejected) {\n          reject(val);\n          return;\n        }\n\n        resolve(val );\n      });\n    });\n  }\n\n  /** JSDoc */\n    __init3() {this._resolve = (value) => {\n    this._setResult(States.RESOLVED, value);\n  };}\n\n  /** JSDoc */\n    __init4() {this._reject = (reason) => {\n    this._setResult(States.REJECTED, reason);\n  };}\n\n  /** JSDoc */\n    __init5() {this._setResult = (state, value) => {\n    if (this._state !== States.PENDING) {\n      return;\n    }\n\n    if (isThenable(value)) {\n      void (value ).then(this._resolve, this._reject);\n      return;\n    }\n\n    this._state = state;\n    this._value = value;\n\n    this._executeHandlers();\n  };}\n\n  /** JSDoc */\n    __init6() {this._executeHandlers = () => {\n    if (this._state === States.PENDING) {\n      return;\n    }\n\n    const cachedHandlers = this._handlers.slice();\n    this._handlers = [];\n\n    cachedHandlers.forEach(handler => {\n      if (handler[0]) {\n        return;\n      }\n\n      if (this._state === States.RESOLVED) {\n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\n        handler[1](this._value );\n      }\n\n      if (this._state === States.REJECTED) {\n        handler[2](this._value);\n      }\n\n      handler[0] = true;\n    });\n  };}\n}\n\nexport { SyncPromise, rejectedSyncPromise, resolvedSyncPromise };\n//# sourceMappingURL=syncpromise.js.map\n","import { timestampInSeconds, uuid4, dropUndefinedKeys } from '@sentry/utils';\n\n/**\n * Creates a new `Session` object by setting certain default parameters. If optional @param context\n * is passed, the passed properties are applied to the session object.\n *\n * @param context (optional) additional properties to be applied to the returned session object\n *\n * @returns a new `Session` object\n */\nfunction makeSession(context) {\n  // Both timestamp and started are in seconds since the UNIX epoch.\n  const startingTime = timestampInSeconds();\n\n  const session = {\n    sid: uuid4(),\n    init: true,\n    timestamp: startingTime,\n    started: startingTime,\n    duration: 0,\n    status: 'ok',\n    errors: 0,\n    ignoreDuration: false,\n    toJSON: () => sessionToJSON(session),\n  };\n\n  if (context) {\n    updateSession(session, context);\n  }\n\n  return session;\n}\n\n/**\n * Updates a session object with the properties passed in the context.\n *\n * Note that this function mutates the passed object and returns void.\n * (Had to do this instead of returning a new and updated session because closing and sending a session\n * makes an update to the session after it was passed to the sending logic.\n * @see BaseClient.captureSession )\n *\n * @param session the `Session` to update\n * @param context the `SessionContext` holding the properties that should be updated in @param session\n */\n// eslint-disable-next-line complexity\nfunction updateSession(session, context = {}) {\n  if (context.user) {\n    if (!session.ipAddress && context.user.ip_address) {\n      session.ipAddress = context.user.ip_address;\n    }\n\n    if (!session.did && !context.did) {\n      session.did = context.user.id || context.user.email || context.user.username;\n    }\n  }\n\n  session.timestamp = context.timestamp || timestampInSeconds();\n\n  if (context.ignoreDuration) {\n    session.ignoreDuration = context.ignoreDuration;\n  }\n  if (context.sid) {\n    // Good enough uuid validation. — Kamil\n    session.sid = context.sid.length === 32 ? context.sid : uuid4();\n  }\n  if (context.init !== undefined) {\n    session.init = context.init;\n  }\n  if (!session.did && context.did) {\n    session.did = `${context.did}`;\n  }\n  if (typeof context.started === 'number') {\n    session.started = context.started;\n  }\n  if (session.ignoreDuration) {\n    session.duration = undefined;\n  } else if (typeof context.duration === 'number') {\n    session.duration = context.duration;\n  } else {\n    const duration = session.timestamp - session.started;\n    session.duration = duration >= 0 ? duration : 0;\n  }\n  if (context.release) {\n    session.release = context.release;\n  }\n  if (context.environment) {\n    session.environment = context.environment;\n  }\n  if (!session.ipAddress && context.ipAddress) {\n    session.ipAddress = context.ipAddress;\n  }\n  if (!session.userAgent && context.userAgent) {\n    session.userAgent = context.userAgent;\n  }\n  if (typeof context.errors === 'number') {\n    session.errors = context.errors;\n  }\n  if (context.status) {\n    session.status = context.status;\n  }\n}\n\n/**\n * Closes a session by setting its status and updating the session object with it.\n * Internally calls `updateSession` to update the passed session object.\n *\n * Note that this function mutates the passed session (@see updateSession for explanation).\n *\n * @param session the `Session` object to be closed\n * @param status the `SessionStatus` with which the session was closed. If you don't pass a status,\n *               this function will keep the previously set status, unless it was `'ok'` in which case\n *               it is changed to `'exited'`.\n */\nfunction closeSession(session, status) {\n  let context = {};\n  if (status) {\n    context = { status };\n  } else if (session.status === 'ok') {\n    context = { status: 'exited' };\n  }\n\n  updateSession(session, context);\n}\n\n/**\n * Serializes a passed session object to a JSON object with a slightly different structure.\n * This is necessary because the Sentry backend requires a slightly different schema of a session\n * than the one the JS SDKs use internally.\n *\n * @param session the session to be converted\n *\n * @returns a JSON object of the passed session\n */\nfunction sessionToJSON(session) {\n  return dropUndefinedKeys({\n    sid: `${session.sid}`,\n    init: session.init,\n    // Make sure that sec is converted to ms for date constructor\n    started: new Date(session.started * 1000).toISOString(),\n    timestamp: new Date(session.timestamp * 1000).toISOString(),\n    status: session.status,\n    errors: session.errors,\n    did: typeof session.did === 'number' || typeof session.did === 'string' ? `${session.did}` : undefined,\n    duration: session.duration,\n    attrs: {\n      release: session.release,\n      environment: session.environment,\n      ip_address: session.ipAddress,\n      user_agent: session.userAgent,\n    },\n  });\n}\n\nexport { closeSession, makeSession, updateSession };\n//# sourceMappingURL=session.js.map\n","import { isPlainObject, dateTimestampInSeconds, SyncPromise, logger, isThenable, arrayify, getGlobalSingleton } from '@sentry/utils';\nimport { updateSession } from './session.js';\n\n/**\n * Default value for maximum number of breadcrumbs added to an event.\n */\nconst DEFAULT_MAX_BREADCRUMBS = 100;\n\n/**\n * Holds additional event information. {@link Scope.applyToEvent} will be\n * called by the client before an event will be sent.\n */\nclass Scope  {\n  /** Flag if notifying is happening. */\n\n  /** Callback for client to receive scope changes. */\n\n  /** Callback list that will be called after {@link applyToEvent}. */\n\n  /** Array of breadcrumbs. */\n\n  /** User */\n\n  /** Tags */\n\n  /** Extra */\n\n  /** Contexts */\n\n  /** Attachments */\n\n  /**\n   * A place to stash data which is needed at some point in the SDK's event processing pipeline but which shouldn't get\n   * sent to Sentry\n   */\n\n  /** Fingerprint */\n\n  /** Severity */\n  // eslint-disable-next-line deprecation/deprecation\n\n  /** Transaction Name */\n\n  /** Span */\n\n  /** Session */\n\n  /** Request Mode Session Status */\n\n  // NOTE: Any field which gets added here should get added not only to the constructor but also to the `clone` method.\n\n   constructor() {\n    this._notifyingListeners = false;\n    this._scopeListeners = [];\n    this._eventProcessors = [];\n    this._breadcrumbs = [];\n    this._attachments = [];\n    this._user = {};\n    this._tags = {};\n    this._extra = {};\n    this._contexts = {};\n    this._sdkProcessingMetadata = {};\n  }\n\n  /**\n   * Inherit values from the parent scope.\n   * @param scope to clone.\n   */\n   static clone(scope) {\n    const newScope = new Scope();\n    if (scope) {\n      newScope._breadcrumbs = [...scope._breadcrumbs];\n      newScope._tags = { ...scope._tags };\n      newScope._extra = { ...scope._extra };\n      newScope._contexts = { ...scope._contexts };\n      newScope._user = scope._user;\n      newScope._level = scope._level;\n      newScope._span = scope._span;\n      newScope._session = scope._session;\n      newScope._transactionName = scope._transactionName;\n      newScope._fingerprint = scope._fingerprint;\n      newScope._eventProcessors = [...scope._eventProcessors];\n      newScope._requestSession = scope._requestSession;\n      newScope._attachments = [...scope._attachments];\n      newScope._sdkProcessingMetadata = { ...scope._sdkProcessingMetadata };\n    }\n    return newScope;\n  }\n\n  /**\n   * Add internal on change listener. Used for sub SDKs that need to store the scope.\n   * @hidden\n   */\n   addScopeListener(callback) {\n    this._scopeListeners.push(callback);\n  }\n\n  /**\n   * @inheritDoc\n   */\n   addEventProcessor(callback) {\n    this._eventProcessors.push(callback);\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setUser(user) {\n    this._user = user || {};\n    if (this._session) {\n      updateSession(this._session, { user });\n    }\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   getUser() {\n    return this._user;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   getRequestSession() {\n    return this._requestSession;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setRequestSession(requestSession) {\n    this._requestSession = requestSession;\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setTags(tags) {\n    this._tags = {\n      ...this._tags,\n      ...tags,\n    };\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setTag(key, value) {\n    this._tags = { ...this._tags, [key]: value };\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setExtras(extras) {\n    this._extra = {\n      ...this._extra,\n      ...extras,\n    };\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setExtra(key, extra) {\n    this._extra = { ...this._extra, [key]: extra };\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setFingerprint(fingerprint) {\n    this._fingerprint = fingerprint;\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setLevel(\n    // eslint-disable-next-line deprecation/deprecation\n    level,\n  ) {\n    this._level = level;\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setTransactionName(name) {\n    this._transactionName = name;\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setContext(key, context) {\n    if (context === null) {\n      // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n      delete this._contexts[key];\n    } else {\n      this._contexts[key] = context;\n    }\n\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setSpan(span) {\n    this._span = span;\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   getSpan() {\n    return this._span;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   getTransaction() {\n    // Often, this span (if it exists at all) will be a transaction, but it's not guaranteed to be. Regardless, it will\n    // have a pointer to the currently-active transaction.\n    const span = this.getSpan();\n    return span && span.transaction;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setSession(session) {\n    if (!session) {\n      delete this._session;\n    } else {\n      this._session = session;\n    }\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   getSession() {\n    return this._session;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   update(captureContext) {\n    if (!captureContext) {\n      return this;\n    }\n\n    if (typeof captureContext === 'function') {\n      const updatedScope = (captureContext )(this);\n      return updatedScope instanceof Scope ? updatedScope : this;\n    }\n\n    if (captureContext instanceof Scope) {\n      this._tags = { ...this._tags, ...captureContext._tags };\n      this._extra = { ...this._extra, ...captureContext._extra };\n      this._contexts = { ...this._contexts, ...captureContext._contexts };\n      if (captureContext._user && Object.keys(captureContext._user).length) {\n        this._user = captureContext._user;\n      }\n      if (captureContext._level) {\n        this._level = captureContext._level;\n      }\n      if (captureContext._fingerprint) {\n        this._fingerprint = captureContext._fingerprint;\n      }\n      if (captureContext._requestSession) {\n        this._requestSession = captureContext._requestSession;\n      }\n    } else if (isPlainObject(captureContext)) {\n      // eslint-disable-next-line no-param-reassign\n      captureContext = captureContext ;\n      this._tags = { ...this._tags, ...captureContext.tags };\n      this._extra = { ...this._extra, ...captureContext.extra };\n      this._contexts = { ...this._contexts, ...captureContext.contexts };\n      if (captureContext.user) {\n        this._user = captureContext.user;\n      }\n      if (captureContext.level) {\n        this._level = captureContext.level;\n      }\n      if (captureContext.fingerprint) {\n        this._fingerprint = captureContext.fingerprint;\n      }\n      if (captureContext.requestSession) {\n        this._requestSession = captureContext.requestSession;\n      }\n    }\n\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   clear() {\n    this._breadcrumbs = [];\n    this._tags = {};\n    this._extra = {};\n    this._user = {};\n    this._contexts = {};\n    this._level = undefined;\n    this._transactionName = undefined;\n    this._fingerprint = undefined;\n    this._requestSession = undefined;\n    this._span = undefined;\n    this._session = undefined;\n    this._notifyScopeListeners();\n    this._attachments = [];\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   addBreadcrumb(breadcrumb, maxBreadcrumbs) {\n    const maxCrumbs = typeof maxBreadcrumbs === 'number' ? maxBreadcrumbs : DEFAULT_MAX_BREADCRUMBS;\n\n    // No data has been changed, so don't notify scope listeners\n    if (maxCrumbs <= 0) {\n      return this;\n    }\n\n    const mergedBreadcrumb = {\n      timestamp: dateTimestampInSeconds(),\n      ...breadcrumb,\n    };\n    this._breadcrumbs = [...this._breadcrumbs, mergedBreadcrumb].slice(-maxCrumbs);\n    this._notifyScopeListeners();\n\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   getLastBreadcrumb() {\n    return this._breadcrumbs[this._breadcrumbs.length - 1];\n  }\n\n  /**\n   * @inheritDoc\n   */\n   clearBreadcrumbs() {\n    this._breadcrumbs = [];\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   addAttachment(attachment) {\n    this._attachments.push(attachment);\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   getAttachments() {\n    return this._attachments;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   clearAttachments() {\n    this._attachments = [];\n    return this;\n  }\n\n  /**\n   * Applies data from the scope to the event and runs all event processors on it.\n   *\n   * @param event Event\n   * @param hint Object containing additional information about the original exception, for use by the event processors.\n   * @hidden\n   */\n   applyToEvent(event, hint = {}) {\n    if (this._extra && Object.keys(this._extra).length) {\n      event.extra = { ...this._extra, ...event.extra };\n    }\n    if (this._tags && Object.keys(this._tags).length) {\n      event.tags = { ...this._tags, ...event.tags };\n    }\n    if (this._user && Object.keys(this._user).length) {\n      event.user = { ...this._user, ...event.user };\n    }\n    if (this._contexts && Object.keys(this._contexts).length) {\n      event.contexts = { ...this._contexts, ...event.contexts };\n    }\n    if (this._level) {\n      event.level = this._level;\n    }\n    if (this._transactionName) {\n      event.transaction = this._transactionName;\n    }\n\n    // We want to set the trace context for normal events only if there isn't already\n    // a trace context on the event. There is a product feature in place where we link\n    // errors with transaction and it relies on that.\n    if (this._span) {\n      event.contexts = { trace: this._span.getTraceContext(), ...event.contexts };\n      const transaction = this._span.transaction;\n      if (transaction) {\n        event.sdkProcessingMetadata = {\n          dynamicSamplingContext: transaction.getDynamicSamplingContext(),\n          ...event.sdkProcessingMetadata,\n        };\n        const transactionName = transaction.name;\n        if (transactionName) {\n          event.tags = { transaction: transactionName, ...event.tags };\n        }\n      }\n    }\n\n    this._applyFingerprint(event);\n\n    event.breadcrumbs = [...(event.breadcrumbs || []), ...this._breadcrumbs];\n    event.breadcrumbs = event.breadcrumbs.length > 0 ? event.breadcrumbs : undefined;\n\n    event.sdkProcessingMetadata = { ...event.sdkProcessingMetadata, ...this._sdkProcessingMetadata };\n\n    return this._notifyEventProcessors([...getGlobalEventProcessors(), ...this._eventProcessors], event, hint);\n  }\n\n  /**\n   * Add data which will be accessible during event processing but won't get sent to Sentry\n   */\n   setSDKProcessingMetadata(newData) {\n    this._sdkProcessingMetadata = { ...this._sdkProcessingMetadata, ...newData };\n\n    return this;\n  }\n\n  /**\n   * This will be called after {@link applyToEvent} is finished.\n   */\n   _notifyEventProcessors(\n    processors,\n    event,\n    hint,\n    index = 0,\n  ) {\n    return new SyncPromise((resolve, reject) => {\n      const processor = processors[index];\n      if (event === null || typeof processor !== 'function') {\n        resolve(event);\n      } else {\n        const result = processor({ ...event }, hint) ;\n\n        (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n          processor.id &&\n          result === null &&\n          logger.log(`Event processor \"${processor.id}\" dropped event`);\n\n        if (isThenable(result)) {\n          void result\n            .then(final => this._notifyEventProcessors(processors, final, hint, index + 1).then(resolve))\n            .then(null, reject);\n        } else {\n          void this._notifyEventProcessors(processors, result, hint, index + 1)\n            .then(resolve)\n            .then(null, reject);\n        }\n      }\n    });\n  }\n\n  /**\n   * This will be called on every set call.\n   */\n   _notifyScopeListeners() {\n    // We need this check for this._notifyingListeners to be able to work on scope during updates\n    // If this check is not here we'll produce endless recursion when something is done with the scope\n    // during the callback.\n    if (!this._notifyingListeners) {\n      this._notifyingListeners = true;\n      this._scopeListeners.forEach(callback => {\n        callback(this);\n      });\n      this._notifyingListeners = false;\n    }\n  }\n\n  /**\n   * Applies fingerprint from the scope to the event if there's one,\n   * uses message if there's one instead or get rid of empty fingerprint\n   */\n   _applyFingerprint(event) {\n    // Make sure it's an array first and we actually have something in place\n    event.fingerprint = event.fingerprint ? arrayify(event.fingerprint) : [];\n\n    // If we have something on the scope, then merge it with event\n    if (this._fingerprint) {\n      event.fingerprint = event.fingerprint.concat(this._fingerprint);\n    }\n\n    // If we have no data at all, remove empty array default\n    if (event.fingerprint && !event.fingerprint.length) {\n      delete event.fingerprint;\n    }\n  }\n}\n\n/**\n * Returns the global event processors.\n */\nfunction getGlobalEventProcessors() {\n  return getGlobalSingleton('globalEventProcessors', () => []);\n}\n\n/**\n * Add a EventProcessor to be kept globally.\n * @param callback EventProcessor to add\n */\nfunction addGlobalEventProcessor(callback) {\n  getGlobalEventProcessors().push(callback);\n}\n\nexport { Scope, addGlobalEventProcessor };\n//# sourceMappingURL=scope.js.map\n","import { uuid4, dateTimestampInSeconds, consoleSandbox, logger, GLOBAL_OBJ, getGlobalSingleton } from '@sentry/utils';\nimport { DEFAULT_ENVIRONMENT } from './constants.js';\nimport { Scope } from './scope.js';\nimport { closeSession, makeSession, updateSession } from './session.js';\n\n/**\n * API compatibility version of this hub.\n *\n * WARNING: This number should only be increased when the global interface\n * changes and new methods are introduced.\n *\n * @hidden\n */\nconst API_VERSION = 4;\n\n/**\n * Default maximum number of breadcrumbs added to an event. Can be overwritten\n * with {@link Options.maxBreadcrumbs}.\n */\nconst DEFAULT_BREADCRUMBS = 100;\n\n/**\n * @inheritDoc\n */\nclass Hub  {\n  /** Is a {@link Layer}[] containing the client and scope */\n\n  /** Contains the last event id of a captured event.  */\n\n  /**\n   * Creates a new instance of the hub, will push one {@link Layer} into the\n   * internal stack on creation.\n   *\n   * @param client bound to the hub.\n   * @param scope bound to the hub.\n   * @param version number, higher number means higher priority.\n   */\n   constructor(client, scope = new Scope(),   _version = API_VERSION) {this._version = _version;\n    this._stack = [{ scope }];\n    if (client) {\n      this.bindClient(client);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n   isOlderThan(version) {\n    return this._version < version;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   bindClient(client) {\n    const top = this.getStackTop();\n    top.client = client;\n    if (client && client.setupIntegrations) {\n      client.setupIntegrations();\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n   pushScope() {\n    // We want to clone the content of prev scope\n    const scope = Scope.clone(this.getScope());\n    this.getStack().push({\n      client: this.getClient(),\n      scope,\n    });\n    return scope;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   popScope() {\n    if (this.getStack().length <= 1) return false;\n    return !!this.getStack().pop();\n  }\n\n  /**\n   * @inheritDoc\n   */\n   withScope(callback) {\n    const scope = this.pushScope();\n    try {\n      callback(scope);\n    } finally {\n      this.popScope();\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n   getClient() {\n    return this.getStackTop().client ;\n  }\n\n  /** Returns the scope of the top stack. */\n   getScope() {\n    return this.getStackTop().scope;\n  }\n\n  /** Returns the scope stack for domains or the process. */\n   getStack() {\n    return this._stack;\n  }\n\n  /** Returns the topmost scope layer in the order domain > local > process. */\n   getStackTop() {\n    return this._stack[this._stack.length - 1];\n  }\n\n  /**\n   * @inheritDoc\n   */\n   captureException(exception, hint) {\n    const eventId = (this._lastEventId = hint && hint.event_id ? hint.event_id : uuid4());\n    const syntheticException = new Error('Sentry syntheticException');\n    this._withClient((client, scope) => {\n      client.captureException(\n        exception,\n        {\n          originalException: exception,\n          syntheticException,\n          ...hint,\n          event_id: eventId,\n        },\n        scope,\n      );\n    });\n    return eventId;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   captureMessage(\n    message,\n    // eslint-disable-next-line deprecation/deprecation\n    level,\n    hint,\n  ) {\n    const eventId = (this._lastEventId = hint && hint.event_id ? hint.event_id : uuid4());\n    const syntheticException = new Error(message);\n    this._withClient((client, scope) => {\n      client.captureMessage(\n        message,\n        level,\n        {\n          originalException: message,\n          syntheticException,\n          ...hint,\n          event_id: eventId,\n        },\n        scope,\n      );\n    });\n    return eventId;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   captureEvent(event, hint) {\n    const eventId = hint && hint.event_id ? hint.event_id : uuid4();\n    if (!event.type) {\n      this._lastEventId = eventId;\n    }\n\n    this._withClient((client, scope) => {\n      client.captureEvent(event, { ...hint, event_id: eventId }, scope);\n    });\n    return eventId;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   lastEventId() {\n    return this._lastEventId;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   addBreadcrumb(breadcrumb, hint) {\n    const { scope, client } = this.getStackTop();\n\n    if (!client) return;\n\n    const { beforeBreadcrumb = null, maxBreadcrumbs = DEFAULT_BREADCRUMBS } =\n      (client.getOptions && client.getOptions()) || {};\n\n    if (maxBreadcrumbs <= 0) return;\n\n    const timestamp = dateTimestampInSeconds();\n    const mergedBreadcrumb = { timestamp, ...breadcrumb };\n    const finalBreadcrumb = beforeBreadcrumb\n      ? (consoleSandbox(() => beforeBreadcrumb(mergedBreadcrumb, hint)) )\n      : mergedBreadcrumb;\n\n    if (finalBreadcrumb === null) return;\n\n    if (client.emit) {\n      client.emit('beforeAddBreadcrumb', finalBreadcrumb, hint);\n    }\n\n    scope.addBreadcrumb(finalBreadcrumb, maxBreadcrumbs);\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setUser(user) {\n    this.getScope().setUser(user);\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setTags(tags) {\n    this.getScope().setTags(tags);\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setExtras(extras) {\n    this.getScope().setExtras(extras);\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setTag(key, value) {\n    this.getScope().setTag(key, value);\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setExtra(key, extra) {\n    this.getScope().setExtra(key, extra);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n   setContext(name, context) {\n    this.getScope().setContext(name, context);\n  }\n\n  /**\n   * @inheritDoc\n   */\n   configureScope(callback) {\n    const { scope, client } = this.getStackTop();\n    if (client) {\n      callback(scope);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n   run(callback) {\n    const oldHub = makeMain(this);\n    try {\n      callback(this);\n    } finally {\n      makeMain(oldHub);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n   getIntegration(integration) {\n    const client = this.getClient();\n    if (!client) return null;\n    try {\n      return client.getIntegration(integration);\n    } catch (_oO) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.warn(`Cannot retrieve integration ${integration.id} from the current Hub`);\n      return null;\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n   startTransaction(context, customSamplingContext) {\n    const result = this._callExtensionMethod('startTransaction', context, customSamplingContext);\n\n    if ((typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && !result) {\n      // eslint-disable-next-line no-console\n      console.warn(`Tracing extension 'startTransaction' has not been added. Call 'addTracingExtensions' before calling 'init':\nSentry.addTracingExtensions();\nSentry.init({...});\n`);\n    }\n\n    return result;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   traceHeaders() {\n    return this._callExtensionMethod('traceHeaders');\n  }\n\n  /**\n   * @inheritDoc\n   */\n   captureSession(endSession = false) {\n    // both send the update and pull the session from the scope\n    if (endSession) {\n      return this.endSession();\n    }\n\n    // only send the update\n    this._sendSessionUpdate();\n  }\n\n  /**\n   * @inheritDoc\n   */\n   endSession() {\n    const layer = this.getStackTop();\n    const scope = layer.scope;\n    const session = scope.getSession();\n    if (session) {\n      closeSession(session);\n    }\n    this._sendSessionUpdate();\n\n    // the session is over; take it off of the scope\n    scope.setSession();\n  }\n\n  /**\n   * @inheritDoc\n   */\n   startSession(context) {\n    const { scope, client } = this.getStackTop();\n    const { release, environment = DEFAULT_ENVIRONMENT } = (client && client.getOptions()) || {};\n\n    // Will fetch userAgent if called from browser sdk\n    const { userAgent } = GLOBAL_OBJ.navigator || {};\n\n    const session = makeSession({\n      release,\n      environment,\n      user: scope.getUser(),\n      ...(userAgent && { userAgent }),\n      ...context,\n    });\n\n    // End existing session if there's one\n    const currentSession = scope.getSession && scope.getSession();\n    if (currentSession && currentSession.status === 'ok') {\n      updateSession(currentSession, { status: 'exited' });\n    }\n    this.endSession();\n\n    // Afterwards we set the new session on the scope\n    scope.setSession(session);\n\n    return session;\n  }\n\n  /**\n   * Returns if default PII should be sent to Sentry and propagated in ourgoing requests\n   * when Tracing is used.\n   */\n   shouldSendDefaultPii() {\n    const client = this.getClient();\n    const options = client && client.getOptions();\n    return Boolean(options && options.sendDefaultPii);\n  }\n\n  /**\n   * Sends the current Session on the scope\n   */\n   _sendSessionUpdate() {\n    const { scope, client } = this.getStackTop();\n\n    const session = scope.getSession();\n    if (session && client && client.captureSession) {\n      client.captureSession(session);\n    }\n  }\n\n  /**\n   * Internal helper function to call a method on the top client if it exists.\n   *\n   * @param method The method to call on the client.\n   * @param args Arguments to pass to the client function.\n   */\n   _withClient(callback) {\n    const { scope, client } = this.getStackTop();\n    if (client) {\n      callback(client, scope);\n    }\n  }\n\n  /**\n   * Calls global extension method and binding current instance to the function call\n   */\n  // @ts-ignore Function lacks ending return statement and return type does not include 'undefined'. ts(2366)\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n   _callExtensionMethod(method, ...args) {\n    const carrier = getMainCarrier();\n    const sentry = carrier.__SENTRY__;\n    if (sentry && sentry.extensions && typeof sentry.extensions[method] === 'function') {\n      return sentry.extensions[method].apply(this, args);\n    }\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.warn(`Extension method ${method} couldn't be found, doing nothing.`);\n  }\n}\n\n/**\n * Returns the global shim registry.\n *\n * FIXME: This function is problematic, because despite always returning a valid Carrier,\n * it has an optional `__SENTRY__` property, which then in turn requires us to always perform an unnecessary check\n * at the call-site. We always access the carrier through this function, so we can guarantee that `__SENTRY__` is there.\n **/\nfunction getMainCarrier() {\n  GLOBAL_OBJ.__SENTRY__ = GLOBAL_OBJ.__SENTRY__ || {\n    extensions: {},\n    hub: undefined,\n  };\n  return GLOBAL_OBJ;\n}\n\n/**\n * Replaces the current main hub with the passed one on the global object\n *\n * @returns The old replaced hub\n */\nfunction makeMain(hub) {\n  const registry = getMainCarrier();\n  const oldHub = getHubFromCarrier(registry);\n  setHubOnCarrier(registry, hub);\n  return oldHub;\n}\n\n/**\n * Returns the default hub instance.\n *\n * If a hub is already registered in the global carrier but this module\n * contains a more recent version, it replaces the registered version.\n * Otherwise, the currently registered hub will be returned.\n */\nfunction getCurrentHub() {\n  // Get main carrier (global for every environment)\n  const registry = getMainCarrier();\n\n  if (registry.__SENTRY__ && registry.__SENTRY__.acs) {\n    const hub = registry.__SENTRY__.acs.getCurrentHub();\n\n    if (hub) {\n      return hub;\n    }\n  }\n\n  // Return hub that lives on a global object\n  return getGlobalHub(registry);\n}\n\nfunction getGlobalHub(registry = getMainCarrier()) {\n  // If there's no hub, or its an old API, assign a new one\n  if (!hasHubOnCarrier(registry) || getHubFromCarrier(registry).isOlderThan(API_VERSION)) {\n    setHubOnCarrier(registry, new Hub());\n  }\n\n  // Return hub that lives on a global object\n  return getHubFromCarrier(registry);\n}\n\n/**\n * @private Private API with no semver guarantees!\n *\n * If the carrier does not contain a hub, a new hub is created with the global hub client and scope.\n */\nfunction ensureHubOnCarrier(carrier, parent = getGlobalHub()) {\n  // If there's no hub on current domain, or it's an old API, assign a new one\n  if (!hasHubOnCarrier(carrier) || getHubFromCarrier(carrier).isOlderThan(API_VERSION)) {\n    const globalHubTopStack = parent.getStackTop();\n    setHubOnCarrier(carrier, new Hub(globalHubTopStack.client, Scope.clone(globalHubTopStack.scope)));\n  }\n}\n\n/**\n * @private Private API with no semver guarantees!\n *\n * Sets the global async context strategy\n */\nfunction setAsyncContextStrategy(strategy) {\n  // Get main carrier (global for every environment)\n  const registry = getMainCarrier();\n  registry.__SENTRY__ = registry.__SENTRY__ || {};\n  registry.__SENTRY__.acs = strategy;\n}\n\n/**\n * Runs the supplied callback in its own async context. Async Context strategies are defined per SDK.\n *\n * @param callback The callback to run in its own async context\n * @param options Options to pass to the async context strategy\n * @returns The result of the callback\n */\nfunction runWithAsyncContext(callback, options = {}) {\n  const registry = getMainCarrier();\n\n  if (registry.__SENTRY__ && registry.__SENTRY__.acs) {\n    return registry.__SENTRY__.acs.runWithAsyncContext(callback, options);\n  }\n\n  // if there was no strategy, fallback to just calling the callback\n  return callback();\n}\n\n/**\n * This will tell whether a carrier has a hub on it or not\n * @param carrier object\n */\nfunction hasHubOnCarrier(carrier) {\n  return !!(carrier && carrier.__SENTRY__ && carrier.__SENTRY__.hub);\n}\n\n/**\n * This will create a new {@link Hub} and add to the passed object on\n * __SENTRY__.hub.\n * @param carrier object\n * @hidden\n */\nfunction getHubFromCarrier(carrier) {\n  return getGlobalSingleton('hub', () => new Hub(), carrier);\n}\n\n/**\n * This will set passed {@link Hub} on the passed object's __SENTRY__.hub attribute\n * @param carrier object\n * @param hub Hub\n * @returns A boolean indicating success or failure\n */\nfunction setHubOnCarrier(carrier, hub) {\n  if (!carrier) return false;\n  const __SENTRY__ = (carrier.__SENTRY__ = carrier.__SENTRY__ || {});\n  __SENTRY__.hub = hub;\n  return true;\n}\n\nexport { API_VERSION, Hub, ensureHubOnCarrier, getCurrentHub, getHubFromCarrier, getMainCarrier, makeMain, runWithAsyncContext, setAsyncContextStrategy, setHubOnCarrier };\n//# sourceMappingURL=hub.js.map\n","import { arrayify, logger } from '@sentry/utils';\nimport { getCurrentHub } from './hub.js';\nimport { addGlobalEventProcessor } from './scope.js';\n\nconst installedIntegrations = [];\n\n/** Map of integrations assigned to a client */\n\n/**\n * Remove duplicates from the given array, preferring the last instance of any duplicate. Not guaranteed to\n * preseve the order of integrations in the array.\n *\n * @private\n */\nfunction filterDuplicates(integrations) {\n  const integrationsByName = {};\n\n  integrations.forEach(currentInstance => {\n    const { name } = currentInstance;\n\n    const existingInstance = integrationsByName[name];\n\n    // We want integrations later in the array to overwrite earlier ones of the same type, except that we never want a\n    // default instance to overwrite an existing user instance\n    if (existingInstance && !existingInstance.isDefaultInstance && currentInstance.isDefaultInstance) {\n      return;\n    }\n\n    integrationsByName[name] = currentInstance;\n  });\n\n  return Object.keys(integrationsByName).map(k => integrationsByName[k]);\n}\n\n/** Gets integrations to install */\nfunction getIntegrationsToSetup(options) {\n  const defaultIntegrations = options.defaultIntegrations || [];\n  const userIntegrations = options.integrations;\n\n  // We flag default instances, so that later we can tell them apart from any user-created instances of the same class\n  defaultIntegrations.forEach(integration => {\n    integration.isDefaultInstance = true;\n  });\n\n  let integrations;\n\n  if (Array.isArray(userIntegrations)) {\n    integrations = [...defaultIntegrations, ...userIntegrations];\n  } else if (typeof userIntegrations === 'function') {\n    integrations = arrayify(userIntegrations(defaultIntegrations));\n  } else {\n    integrations = defaultIntegrations;\n  }\n\n  const finalIntegrations = filterDuplicates(integrations);\n\n  // The `Debug` integration prints copies of the `event` and `hint` which will be passed to `beforeSend` or\n  // `beforeSendTransaction`. It therefore has to run after all other integrations, so that the changes of all event\n  // processors will be reflected in the printed values. For lack of a more elegant way to guarantee that, we therefore\n  // locate it and, assuming it exists, pop it out of its current spot and shove it onto the end of the array.\n  const debugIndex = findIndex(finalIntegrations, integration => integration.name === 'Debug');\n  if (debugIndex !== -1) {\n    const [debugInstance] = finalIntegrations.splice(debugIndex, 1);\n    finalIntegrations.push(debugInstance);\n  }\n\n  return finalIntegrations;\n}\n\n/**\n * Given a list of integration instances this installs them all. When `withDefaults` is set to `true` then all default\n * integrations are added unless they were already provided before.\n * @param integrations array of integration instances\n * @param withDefault should enable default integrations\n */\nfunction setupIntegrations(integrations) {\n  const integrationIndex = {};\n\n  integrations.forEach(integration => {\n    // guard against empty provided integrations\n    if (integration) {\n      setupIntegration(integration, integrationIndex);\n    }\n  });\n\n  return integrationIndex;\n}\n\n/** Setup a single integration.  */\nfunction setupIntegration(integration, integrationIndex) {\n  integrationIndex[integration.name] = integration;\n\n  if (installedIntegrations.indexOf(integration.name) === -1) {\n    integration.setupOnce(addGlobalEventProcessor, getCurrentHub);\n    installedIntegrations.push(integration.name);\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.log(`Integration installed: ${integration.name}`);\n  }\n}\n\n// Polyfill for Array.findIndex(), which is not supported in ES5\nfunction findIndex(arr, callback) {\n  for (let i = 0; i < arr.length; i++) {\n    if (callback(arr[i]) === true) {\n      return i;\n    }\n  }\n\n  return -1;\n}\n\nexport { getIntegrationsToSetup, installedIntegrations, setupIntegration, setupIntegrations };\n//# sourceMappingURL=integration.js.map\n","import { node } from './node-stack-trace.js';\n\nconst STACKTRACE_FRAME_LIMIT = 50;\n// Used to sanitize webpack (error: *) wrapped stack errors\nconst WEBPACK_ERROR_REGEXP = /\\(error: (.*)\\)/;\n\n/**\n * Creates a stack parser with the supplied line parsers\n *\n * StackFrames are returned in the correct order for Sentry Exception\n * frames and with Sentry SDK internal frames removed from the top and bottom\n *\n */\nfunction createStackParser(...parsers) {\n  const sortedParsers = parsers.sort((a, b) => a[0] - b[0]).map(p => p[1]);\n\n  return (stack, skipFirst = 0) => {\n    const frames = [];\n    const lines = stack.split('\\n');\n\n    for (let i = skipFirst; i < lines.length; i++) {\n      const line = lines[i];\n      // Ignore lines over 1kb as they are unlikely to be stack frames.\n      // Many of the regular expressions use backtracking which results in run time that increases exponentially with\n      // input size. Huge strings can result in hangs/Denial of Service:\n      // https://github.com/getsentry/sentry-javascript/issues/2286\n      if (line.length > 1024) {\n        continue;\n      }\n\n      // https://github.com/getsentry/sentry-javascript/issues/5459\n      // Remove webpack (error: *) wrappers\n      const cleanedLine = WEBPACK_ERROR_REGEXP.test(line) ? line.replace(WEBPACK_ERROR_REGEXP, '$1') : line;\n\n      // https://github.com/getsentry/sentry-javascript/issues/7813\n      // Skip Error: lines\n      if (cleanedLine.match(/\\S*Error: /)) {\n        continue;\n      }\n\n      for (const parser of sortedParsers) {\n        const frame = parser(cleanedLine);\n\n        if (frame) {\n          frames.push(frame);\n          break;\n        }\n      }\n\n      if (frames.length >= STACKTRACE_FRAME_LIMIT) {\n        break;\n      }\n    }\n\n    return stripSentryFramesAndReverse(frames);\n  };\n}\n\n/**\n * Gets a stack parser implementation from Options.stackParser\n * @see Options\n *\n * If options contains an array of line parsers, it is converted into a parser\n */\nfunction stackParserFromStackParserOptions(stackParser) {\n  if (Array.isArray(stackParser)) {\n    return createStackParser(...stackParser);\n  }\n  return stackParser;\n}\n\n/**\n * Removes Sentry frames from the top and bottom of the stack if present and enforces a limit of max number of frames.\n * Assumes stack input is ordered from top to bottom and returns the reverse representation so call site of the\n * function that caused the crash is the last frame in the array.\n * @hidden\n */\nfunction stripSentryFramesAndReverse(stack) {\n  if (!stack.length) {\n    return [];\n  }\n\n  const localStack = stack.slice(0, STACKTRACE_FRAME_LIMIT);\n\n  const lastFrameFunction = localStack[localStack.length - 1].function;\n  // If stack starts with one of our API calls, remove it (starts, meaning it's the top of the stack - aka last call)\n  if (lastFrameFunction && /sentryWrapped/.test(lastFrameFunction)) {\n    localStack.pop();\n  }\n\n  // Reversing in the middle of the procedure allows us to just pop the values off the stack\n  localStack.reverse();\n\n  const firstFrameFunction = localStack[localStack.length - 1].function;\n  // If stack ends with one of our internal API calls, remove it (ends, meaning it's the bottom of the stack - aka top-most call)\n  if (firstFrameFunction && /captureMessage|captureException/.test(firstFrameFunction)) {\n    localStack.pop();\n  }\n\n  return localStack.map(frame => ({\n    ...frame,\n    filename: frame.filename || localStack[localStack.length - 1].filename,\n    function: frame.function || '?',\n  }));\n}\n\nconst defaultFunctionName = '<anonymous>';\n\n/**\n * Safely extract function name from itself\n */\nfunction getFunctionName(fn) {\n  try {\n    if (!fn || typeof fn !== 'function') {\n      return defaultFunctionName;\n    }\n    return fn.name || defaultFunctionName;\n  } catch (e) {\n    // Just accessing custom props in some Selenium environments\n    // can cause a \"Permission denied\" exception (see raven-js#495).\n    return defaultFunctionName;\n  }\n}\n\n/**\n * Node.js stack line parser\n *\n * This is in @sentry/utils so it can be used from the Electron SDK in the browser for when `nodeIntegration == true`.\n * This allows it to be used without referencing or importing any node specific code which causes bundlers to complain\n */\nfunction nodeStackLineParser(getModule) {\n  return [90, node(getModule)];\n}\n\nexport { createStackParser, getFunctionName, nodeStackLineParser, stackParserFromStackParserOptions, stripSentryFramesAndReverse };\n//# sourceMappingURL=stacktrace.js.map\n","import { logger } from './logger.js';\nimport { getGlobalObject } from './worldwide.js';\n\n// eslint-disable-next-line deprecation/deprecation\nconst WINDOW = getGlobalObject();\n\n/**\n * Tells whether current environment supports ErrorEvent objects\n * {@link supportsErrorEvent}.\n *\n * @returns Answer to the given question.\n */\nfunction supportsErrorEvent() {\n  try {\n    new ErrorEvent('');\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * Tells whether current environment supports DOMError objects\n * {@link supportsDOMError}.\n *\n * @returns Answer to the given question.\n */\nfunction supportsDOMError() {\n  try {\n    // Chrome: VM89:1 Uncaught TypeError: Failed to construct 'DOMError':\n    // 1 argument required, but only 0 present.\n    // @ts-ignore It really needs 1 argument, not 0.\n    new DOMError('');\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * Tells whether current environment supports DOMException objects\n * {@link supportsDOMException}.\n *\n * @returns Answer to the given question.\n */\nfunction supportsDOMException() {\n  try {\n    new DOMException('');\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * Tells whether current environment supports Fetch API\n * {@link supportsFetch}.\n *\n * @returns Answer to the given question.\n */\nfunction supportsFetch() {\n  if (!('fetch' in WINDOW)) {\n    return false;\n  }\n\n  try {\n    new Headers();\n    new Request('http://www.example.com');\n    new Response();\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n/**\n * isNativeFetch checks if the given function is a native implementation of fetch()\n */\n// eslint-disable-next-line @typescript-eslint/ban-types\nfunction isNativeFetch(func) {\n  return func && /^function fetch\\(\\)\\s+\\{\\s+\\[native code\\]\\s+\\}$/.test(func.toString());\n}\n\n/**\n * Tells whether current environment supports Fetch API natively\n * {@link supportsNativeFetch}.\n *\n * @returns true if `window.fetch` is natively implemented, false otherwise\n */\nfunction supportsNativeFetch() {\n  if (!supportsFetch()) {\n    return false;\n  }\n\n  // Fast path to avoid DOM I/O\n  // eslint-disable-next-line @typescript-eslint/unbound-method\n  if (isNativeFetch(WINDOW.fetch)) {\n    return true;\n  }\n\n  // window.fetch is implemented, but is polyfilled or already wrapped (e.g: by a chrome extension)\n  // so create a \"pure\" iframe to see if that has native fetch\n  let result = false;\n  const doc = WINDOW.document;\n  // eslint-disable-next-line deprecation/deprecation\n  if (doc && typeof (doc.createElement ) === 'function') {\n    try {\n      const sandbox = doc.createElement('iframe');\n      sandbox.hidden = true;\n      doc.head.appendChild(sandbox);\n      if (sandbox.contentWindow && sandbox.contentWindow.fetch) {\n        // eslint-disable-next-line @typescript-eslint/unbound-method\n        result = isNativeFetch(sandbox.contentWindow.fetch);\n      }\n      doc.head.removeChild(sandbox);\n    } catch (err) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n        logger.warn('Could not create sandbox iframe for pure fetch check, bailing to window.fetch: ', err);\n    }\n  }\n\n  return result;\n}\n\n/**\n * Tells whether current environment supports ReportingObserver API\n * {@link supportsReportingObserver}.\n *\n * @returns Answer to the given question.\n */\nfunction supportsReportingObserver() {\n  return 'ReportingObserver' in WINDOW;\n}\n\n/**\n * Tells whether current environment supports Referrer Policy API\n * {@link supportsReferrerPolicy}.\n *\n * @returns Answer to the given question.\n */\nfunction supportsReferrerPolicy() {\n  // Despite all stars in the sky saying that Edge supports old draft syntax, aka 'never', 'always', 'origin' and 'default'\n  // (see https://caniuse.com/#feat=referrer-policy),\n  // it doesn't. And it throws an exception instead of ignoring this parameter...\n  // REF: https://github.com/getsentry/raven-js/issues/1233\n\n  if (!supportsFetch()) {\n    return false;\n  }\n\n  try {\n    new Request('_', {\n      referrerPolicy: 'origin' ,\n    });\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nexport { isNativeFetch, supportsDOMError, supportsDOMException, supportsErrorEvent, supportsFetch, supportsNativeFetch, supportsReferrerPolicy, supportsReportingObserver };\n//# sourceMappingURL=supports.js.map\n","import { getGlobalObject } from '../worldwide.js';\n\n// Based on https://github.com/angular/angular.js/pull/13945/files\n\n// eslint-disable-next-line deprecation/deprecation\nconst WINDOW = getGlobalObject();\n\n/**\n * Tells whether current environment supports History API\n * {@link supportsHistory}.\n *\n * @returns Answer to the given question.\n */\nfunction supportsHistory() {\n  // NOTE: in Chrome App environment, touching history.pushState, *even inside\n  //       a try/catch block*, will cause Chrome to output an error to console.error\n  // borrowed from: https://github.com/angular/angular.js/pull/13945/files\n  /* eslint-disable @typescript-eslint/no-unsafe-member-access */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const chrome = (WINDOW ).chrome;\n  const isChromePackagedApp = chrome && chrome.app && chrome.app.runtime;\n  /* eslint-enable @typescript-eslint/no-unsafe-member-access */\n  const hasHistoryApi = 'history' in WINDOW && !!WINDOW.history.pushState && !!WINDOW.history.replaceState;\n\n  return !isChromePackagedApp && hasHistoryApi;\n}\n\nexport { supportsHistory };\n//# sourceMappingURL=supportsHistory.js.map\n","import { isString } from './is.js';\nimport { logger, CONSOLE_LEVELS } from './logger.js';\nimport { fill } from './object.js';\nimport { getFunctionName } from './stacktrace.js';\nimport { supportsNativeFetch } from './supports.js';\nimport { getGlobalObject } from './worldwide.js';\nimport { supportsHistory } from './vendor/supportsHistory.js';\n\n// eslint-disable-next-line deprecation/deprecation\nconst WINDOW = getGlobalObject();\n\nconst SENTRY_XHR_DATA_KEY = '__sentry_xhr_v2__';\n\n/**\n * Instrument native APIs to call handlers that can be used to create breadcrumbs, APM spans etc.\n *  - Console API\n *  - Fetch API\n *  - XHR API\n *  - History API\n *  - DOM API (click/typing)\n *  - Error API\n *  - UnhandledRejection API\n */\n\nconst handlers = {};\nconst instrumented = {};\n\n/** Instruments given API */\nfunction instrument(type) {\n  if (instrumented[type]) {\n    return;\n  }\n\n  instrumented[type] = true;\n\n  switch (type) {\n    case 'console':\n      instrumentConsole();\n      break;\n    case 'dom':\n      instrumentDOM();\n      break;\n    case 'xhr':\n      instrumentXHR();\n      break;\n    case 'fetch':\n      instrumentFetch();\n      break;\n    case 'history':\n      instrumentHistory();\n      break;\n    case 'error':\n      instrumentError();\n      break;\n    case 'unhandledrejection':\n      instrumentUnhandledRejection();\n      break;\n    default:\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.warn('unknown instrumentation type:', type);\n      return;\n  }\n}\n\n/**\n * Add handler that will be called when given type of instrumentation triggers.\n * Use at your own risk, this might break without changelog notice, only used internally.\n * @hidden\n */\nfunction addInstrumentationHandler(type, callback) {\n  handlers[type] = handlers[type] || [];\n  (handlers[type] ).push(callback);\n  instrument(type);\n}\n\n/** JSDoc */\nfunction triggerHandlers(type, data) {\n  if (!type || !handlers[type]) {\n    return;\n  }\n\n  for (const handler of handlers[type] || []) {\n    try {\n      handler(data);\n    } catch (e) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n        logger.error(\n          `Error while triggering instrumentation handler.\\nType: ${type}\\nName: ${getFunctionName(handler)}\\nError:`,\n          e,\n        );\n    }\n  }\n}\n\n/** JSDoc */\nfunction instrumentConsole() {\n  if (!('console' in WINDOW)) {\n    return;\n  }\n\n  CONSOLE_LEVELS.forEach(function (level) {\n    if (!(level in WINDOW.console)) {\n      return;\n    }\n\n    fill(WINDOW.console, level, function (originalConsoleMethod) {\n      return function (...args) {\n        triggerHandlers('console', { args, level });\n\n        // this fails for some browsers. :(\n        if (originalConsoleMethod) {\n          originalConsoleMethod.apply(WINDOW.console, args);\n        }\n      };\n    });\n  });\n}\n\n/** JSDoc */\nfunction instrumentFetch() {\n  if (!supportsNativeFetch()) {\n    return;\n  }\n\n  fill(WINDOW, 'fetch', function (originalFetch) {\n    return function (...args) {\n      const { method, url } = parseFetchArgs(args);\n\n      const handlerData = {\n        args,\n        fetchData: {\n          method,\n          url,\n        },\n        startTimestamp: Date.now(),\n      };\n\n      triggerHandlers('fetch', {\n        ...handlerData,\n      });\n\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n      return originalFetch.apply(WINDOW, args).then(\n        (response) => {\n          triggerHandlers('fetch', {\n            ...handlerData,\n            endTimestamp: Date.now(),\n            response,\n          });\n          return response;\n        },\n        (error) => {\n          triggerHandlers('fetch', {\n            ...handlerData,\n            endTimestamp: Date.now(),\n            error,\n          });\n          // NOTE: If you are a Sentry user, and you are seeing this stack frame,\n          //       it means the sentry.javascript SDK caught an error invoking your application code.\n          //       This is expected behavior and NOT indicative of a bug with sentry.javascript.\n          throw error;\n        },\n      );\n    };\n  });\n}\n\nfunction hasProp(obj, prop) {\n  return !!obj && typeof obj === 'object' && !!(obj )[prop];\n}\n\nfunction getUrlFromResource(resource) {\n  if (typeof resource === 'string') {\n    return resource;\n  }\n\n  if (!resource) {\n    return '';\n  }\n\n  if (hasProp(resource, 'url')) {\n    return resource.url;\n  }\n\n  if (resource.toString) {\n    return resource.toString();\n  }\n\n  return '';\n}\n\n/**\n * Parses the fetch arguments to find the used Http method and the url of the request\n */\nfunction parseFetchArgs(fetchArgs) {\n  if (fetchArgs.length === 0) {\n    return { method: 'GET', url: '' };\n  }\n\n  if (fetchArgs.length === 2) {\n    const [url, options] = fetchArgs ;\n\n    return {\n      url: getUrlFromResource(url),\n      method: hasProp(options, 'method') ? String(options.method).toUpperCase() : 'GET',\n    };\n  }\n\n  const arg = fetchArgs[0];\n  return {\n    url: getUrlFromResource(arg ),\n    method: hasProp(arg, 'method') ? String(arg.method).toUpperCase() : 'GET',\n  };\n}\n\n/** JSDoc */\nfunction instrumentXHR() {\n  if (!('XMLHttpRequest' in WINDOW)) {\n    return;\n  }\n\n  const xhrproto = XMLHttpRequest.prototype;\n\n  fill(xhrproto, 'open', function (originalOpen) {\n    return function ( ...args) {\n      const url = args[1];\n      const xhrInfo = (this[SENTRY_XHR_DATA_KEY] = {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n        method: isString(args[0]) ? args[0].toUpperCase() : args[0],\n        url: args[1],\n        request_headers: {},\n      });\n\n      // if Sentry key appears in URL, don't capture it as a request\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n      if (isString(url) && xhrInfo.method === 'POST' && url.match(/sentry_key/)) {\n        this.__sentry_own_request__ = true;\n      }\n\n      const onreadystatechangeHandler = () => {\n        // For whatever reason, this is not the same instance here as from the outer method\n        const xhrInfo = this[SENTRY_XHR_DATA_KEY];\n\n        if (!xhrInfo) {\n          return;\n        }\n\n        if (this.readyState === 4) {\n          try {\n            // touching statusCode in some platforms throws\n            // an exception\n            xhrInfo.status_code = this.status;\n          } catch (e) {\n            /* do nothing */\n          }\n\n          triggerHandlers('xhr', {\n            args: args ,\n            endTimestamp: Date.now(),\n            startTimestamp: Date.now(),\n            xhr: this,\n          } );\n        }\n      };\n\n      if ('onreadystatechange' in this && typeof this.onreadystatechange === 'function') {\n        fill(this, 'onreadystatechange', function (original) {\n          return function ( ...readyStateArgs) {\n            onreadystatechangeHandler();\n            return original.apply(this, readyStateArgs);\n          };\n        });\n      } else {\n        this.addEventListener('readystatechange', onreadystatechangeHandler);\n      }\n\n      // Intercepting `setRequestHeader` to access the request headers of XHR instance.\n      // This will only work for user/library defined headers, not for the default/browser-assigned headers.\n      // Request cookies are also unavailable for XHR, as `Cookie` header can't be defined by `setRequestHeader`.\n      fill(this, 'setRequestHeader', function (original) {\n        return function ( ...setRequestHeaderArgs) {\n          const [header, value] = setRequestHeaderArgs ;\n\n          const xhrInfo = this[SENTRY_XHR_DATA_KEY];\n\n          if (xhrInfo) {\n            xhrInfo.request_headers[header.toLowerCase()] = value;\n          }\n\n          return original.apply(this, setRequestHeaderArgs);\n        };\n      });\n\n      return originalOpen.apply(this, args);\n    };\n  });\n\n  fill(xhrproto, 'send', function (originalSend) {\n    return function ( ...args) {\n      const sentryXhrData = this[SENTRY_XHR_DATA_KEY];\n      if (sentryXhrData && args[0] !== undefined) {\n        sentryXhrData.body = args[0];\n      }\n\n      triggerHandlers('xhr', {\n        args,\n        startTimestamp: Date.now(),\n        xhr: this,\n      });\n\n      return originalSend.apply(this, args);\n    };\n  });\n}\n\nlet lastHref;\n\n/** JSDoc */\nfunction instrumentHistory() {\n  if (!supportsHistory()) {\n    return;\n  }\n\n  const oldOnPopState = WINDOW.onpopstate;\n  WINDOW.onpopstate = function ( ...args) {\n    const to = WINDOW.location.href;\n    // keep track of the current URL state, as we always receive only the updated state\n    const from = lastHref;\n    lastHref = to;\n    triggerHandlers('history', {\n      from,\n      to,\n    });\n    if (oldOnPopState) {\n      // Apparently this can throw in Firefox when incorrectly implemented plugin is installed.\n      // https://github.com/getsentry/sentry-javascript/issues/3344\n      // https://github.com/bugsnag/bugsnag-js/issues/469\n      try {\n        return oldOnPopState.apply(this, args);\n      } catch (_oO) {\n        // no-empty\n      }\n    }\n  };\n\n  /** @hidden */\n  function historyReplacementFunction(originalHistoryFunction) {\n    return function ( ...args) {\n      const url = args.length > 2 ? args[2] : undefined;\n      if (url) {\n        // coerce to string (this is what pushState does)\n        const from = lastHref;\n        const to = String(url);\n        // keep track of the current URL state, as we always receive only the updated state\n        lastHref = to;\n        triggerHandlers('history', {\n          from,\n          to,\n        });\n      }\n      return originalHistoryFunction.apply(this, args);\n    };\n  }\n\n  fill(WINDOW.history, 'pushState', historyReplacementFunction);\n  fill(WINDOW.history, 'replaceState', historyReplacementFunction);\n}\n\nconst debounceDuration = 1000;\nlet debounceTimerID;\nlet lastCapturedEvent;\n\n/**\n * Decide whether the current event should finish the debounce of previously captured one.\n * @param previous previously captured event\n * @param current event to be captured\n */\nfunction shouldShortcircuitPreviousDebounce(previous, current) {\n  // If there was no previous event, it should always be swapped for the new one.\n  if (!previous) {\n    return true;\n  }\n\n  // If both events have different type, then user definitely performed two separate actions. e.g. click + keypress.\n  if (previous.type !== current.type) {\n    return true;\n  }\n\n  try {\n    // If both events have the same type, it's still possible that actions were performed on different targets.\n    // e.g. 2 clicks on different buttons.\n    if (previous.target !== current.target) {\n      return true;\n    }\n  } catch (e) {\n    // just accessing `target` property can throw an exception in some rare circumstances\n    // see: https://github.com/getsentry/sentry-javascript/issues/838\n  }\n\n  // If both events have the same type _and_ same `target` (an element which triggered an event, _not necessarily_\n  // to which an event listener was attached), we treat them as the same action, as we want to capture\n  // only one breadcrumb. e.g. multiple clicks on the same button, or typing inside a user input box.\n  return false;\n}\n\n/**\n * Decide whether an event should be captured.\n * @param event event to be captured\n */\nfunction shouldSkipDOMEvent(event) {\n  // We are only interested in filtering `keypress` events for now.\n  if (event.type !== 'keypress') {\n    return false;\n  }\n\n  try {\n    const target = event.target ;\n\n    if (!target || !target.tagName) {\n      return true;\n    }\n\n    // Only consider keypress events on actual input elements. This will disregard keypresses targeting body\n    // e.g.tabbing through elements, hotkeys, etc.\n    if (target.tagName === 'INPUT' || target.tagName === 'TEXTAREA' || target.isContentEditable) {\n      return false;\n    }\n  } catch (e) {\n    // just accessing `target` property can throw an exception in some rare circumstances\n    // see: https://github.com/getsentry/sentry-javascript/issues/838\n  }\n\n  return true;\n}\n\n/**\n * Wraps addEventListener to capture UI breadcrumbs\n * @param handler function that will be triggered\n * @param globalListener indicates whether event was captured by the global event listener\n * @returns wrapped breadcrumb events handler\n * @hidden\n */\nfunction makeDOMEventHandler(handler, globalListener = false) {\n  return (event) => {\n    // It's possible this handler might trigger multiple times for the same\n    // event (e.g. event propagation through node ancestors).\n    // Ignore if we've already captured that event.\n    if (!event || lastCapturedEvent === event) {\n      return;\n    }\n\n    // We always want to skip _some_ events.\n    if (shouldSkipDOMEvent(event)) {\n      return;\n    }\n\n    const name = event.type === 'keypress' ? 'input' : event.type;\n\n    // If there is no debounce timer, it means that we can safely capture the new event and store it for future comparisons.\n    if (debounceTimerID === undefined) {\n      handler({\n        event: event,\n        name,\n        global: globalListener,\n      });\n      lastCapturedEvent = event;\n    }\n    // If there is a debounce awaiting, see if the new event is different enough to treat it as a unique one.\n    // If that's the case, emit the previous event and store locally the newly-captured DOM event.\n    else if (shouldShortcircuitPreviousDebounce(lastCapturedEvent, event)) {\n      handler({\n        event: event,\n        name,\n        global: globalListener,\n      });\n      lastCapturedEvent = event;\n    }\n\n    // Start a new debounce timer that will prevent us from capturing multiple events that should be grouped together.\n    clearTimeout(debounceTimerID);\n    debounceTimerID = WINDOW.setTimeout(() => {\n      debounceTimerID = undefined;\n    }, debounceDuration);\n  };\n}\n\n/** JSDoc */\nfunction instrumentDOM() {\n  if (!('document' in WINDOW)) {\n    return;\n  }\n\n  // Make it so that any click or keypress that is unhandled / bubbled up all the way to the document triggers our dom\n  // handlers. (Normally we have only one, which captures a breadcrumb for each click or keypress.) Do this before\n  // we instrument `addEventListener` so that we don't end up attaching this handler twice.\n  const triggerDOMHandler = triggerHandlers.bind(null, 'dom');\n  const globalDOMEventHandler = makeDOMEventHandler(triggerDOMHandler, true);\n  WINDOW.document.addEventListener('click', globalDOMEventHandler, false);\n  WINDOW.document.addEventListener('keypress', globalDOMEventHandler, false);\n\n  // After hooking into click and keypress events bubbled up to `document`, we also hook into user-handled\n  // clicks & keypresses, by adding an event listener of our own to any element to which they add a listener. That\n  // way, whenever one of their handlers is triggered, ours will be, too. (This is needed because their handler\n  // could potentially prevent the event from bubbling up to our global listeners. This way, our handler are still\n  // guaranteed to fire at least once.)\n  ['EventTarget', 'Node'].forEach((target) => {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n    const proto = (WINDOW )[target] && (WINDOW )[target].prototype;\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, no-prototype-builtins\n    if (!proto || !proto.hasOwnProperty || !proto.hasOwnProperty('addEventListener')) {\n      return;\n    }\n\n    fill(proto, 'addEventListener', function (originalAddEventListener) {\n      return function (\n\n        type,\n        listener,\n        options,\n      ) {\n        if (type === 'click' || type == 'keypress') {\n          try {\n            const el = this ;\n            const handlers = (el.__sentry_instrumentation_handlers__ = el.__sentry_instrumentation_handlers__ || {});\n            const handlerForType = (handlers[type] = handlers[type] || { refCount: 0 });\n\n            if (!handlerForType.handler) {\n              const handler = makeDOMEventHandler(triggerDOMHandler);\n              handlerForType.handler = handler;\n              originalAddEventListener.call(this, type, handler, options);\n            }\n\n            handlerForType.refCount++;\n          } catch (e) {\n            // Accessing dom properties is always fragile.\n            // Also allows us to skip `addEventListenrs` calls with no proper `this` context.\n          }\n        }\n\n        return originalAddEventListener.call(this, type, listener, options);\n      };\n    });\n\n    fill(\n      proto,\n      'removeEventListener',\n      function (originalRemoveEventListener) {\n        return function (\n\n          type,\n          listener,\n          options,\n        ) {\n          if (type === 'click' || type == 'keypress') {\n            try {\n              const el = this ;\n              const handlers = el.__sentry_instrumentation_handlers__ || {};\n              const handlerForType = handlers[type];\n\n              if (handlerForType) {\n                handlerForType.refCount--;\n                // If there are no longer any custom handlers of the current type on this element, we can remove ours, too.\n                if (handlerForType.refCount <= 0) {\n                  originalRemoveEventListener.call(this, type, handlerForType.handler, options);\n                  handlerForType.handler = undefined;\n                  delete handlers[type]; // eslint-disable-line @typescript-eslint/no-dynamic-delete\n                }\n\n                // If there are no longer any custom handlers of any type on this element, cleanup everything.\n                if (Object.keys(handlers).length === 0) {\n                  delete el.__sentry_instrumentation_handlers__;\n                }\n              }\n            } catch (e) {\n              // Accessing dom properties is always fragile.\n              // Also allows us to skip `addEventListenrs` calls with no proper `this` context.\n            }\n          }\n\n          return originalRemoveEventListener.call(this, type, listener, options);\n        };\n      },\n    );\n  });\n}\n\nlet _oldOnErrorHandler = null;\n/** JSDoc */\nfunction instrumentError() {\n  _oldOnErrorHandler = WINDOW.onerror;\n\n  WINDOW.onerror = function (msg, url, line, column, error) {\n    triggerHandlers('error', {\n      column,\n      error,\n      line,\n      msg,\n      url,\n    });\n\n    if (_oldOnErrorHandler && !_oldOnErrorHandler.__SENTRY_LOADER__) {\n      // eslint-disable-next-line prefer-rest-params\n      return _oldOnErrorHandler.apply(this, arguments);\n    }\n\n    return false;\n  };\n\n  WINDOW.onerror.__SENTRY_INSTRUMENTED__ = true;\n}\n\nlet _oldOnUnhandledRejectionHandler = null;\n/** JSDoc */\nfunction instrumentUnhandledRejection() {\n  _oldOnUnhandledRejectionHandler = WINDOW.onunhandledrejection;\n\n  WINDOW.onunhandledrejection = function (e) {\n    triggerHandlers('unhandledrejection', e);\n\n    if (_oldOnUnhandledRejectionHandler && !_oldOnUnhandledRejectionHandler.__SENTRY_LOADER__) {\n      // eslint-disable-next-line prefer-rest-params\n      return _oldOnUnhandledRejectionHandler.apply(this, arguments);\n    }\n\n    return true;\n  };\n\n  WINDOW.onunhandledrejection.__SENTRY_INSTRUMENTED__ = true;\n}\n\nexport { SENTRY_XHR_DATA_KEY, addInstrumentationHandler, parseFetchArgs };\n//# sourceMappingURL=instrument.js.map\n","/** An error emitted by Sentry SDKs and related utilities. */\nclass SentryError extends Error {\n  /** Display name of this error instance. */\n\n   constructor( message, logLevel = 'warn') {\n    super(message);this.message = message;\n    this.name = new.target.prototype.constructor.name;\n    // This sets the prototype to be `Error`, not `SentryError`. It's unclear why we do this, but commenting this line\n    // out causes various (seemingly totally unrelated) playwright tests consistently time out. FYI, this makes\n    // instances of `SentryError` fail `obj instanceof SentryError` checks.\n    Object.setPrototypeOf(this, new.target.prototype);\n    this.logLevel = logLevel;\n  }\n}\n\nexport { SentryError };\n//# sourceMappingURL=error.js.map\n","import { SentryError } from './error.js';\n\n/** Regular expression used to parse a Dsn. */\nconst DSN_REGEX = /^(?:(\\w+):)\\/\\/(?:(\\w+)(?::(\\w+)?)?@)([\\w.-]+)(?::(\\d+))?\\/(.+)/;\n\nfunction isValidProtocol(protocol) {\n  return protocol === 'http' || protocol === 'https';\n}\n\n/**\n * Renders the string representation of this Dsn.\n *\n * By default, this will render the public representation without the password\n * component. To get the deprecated private representation, set `withPassword`\n * to true.\n *\n * @param withPassword When set to true, the password will be included.\n */\nfunction dsnToString(dsn, withPassword = false) {\n  const { host, path, pass, port, projectId, protocol, publicKey } = dsn;\n  return (\n    `${protocol}://${publicKey}${withPassword && pass ? `:${pass}` : ''}` +\n    `@${host}${port ? `:${port}` : ''}/${path ? `${path}/` : path}${projectId}`\n  );\n}\n\n/**\n * Parses a Dsn from a given string.\n *\n * @param str A Dsn as string\n * @returns Dsn as DsnComponents\n */\nfunction dsnFromString(str) {\n  const match = DSN_REGEX.exec(str);\n\n  if (!match) {\n    throw new SentryError(`Invalid Sentry Dsn: ${str}`);\n  }\n\n  const [protocol, publicKey, pass = '', host, port = '', lastPath] = match.slice(1);\n  let path = '';\n  let projectId = lastPath;\n\n  const split = projectId.split('/');\n  if (split.length > 1) {\n    path = split.slice(0, -1).join('/');\n    projectId = split.pop() ;\n  }\n\n  if (projectId) {\n    const projectMatch = projectId.match(/^\\d+/);\n    if (projectMatch) {\n      projectId = projectMatch[0];\n    }\n  }\n\n  return dsnFromComponents({ host, pass, path, projectId, port, protocol: protocol , publicKey });\n}\n\nfunction dsnFromComponents(components) {\n  return {\n    protocol: components.protocol,\n    publicKey: components.publicKey || '',\n    pass: components.pass || '',\n    host: components.host,\n    port: components.port || '',\n    path: components.path || '',\n    projectId: components.projectId,\n  };\n}\n\nfunction validateDsn(dsn) {\n  if (!(typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__)) {\n    return;\n  }\n\n  const { port, projectId, protocol } = dsn;\n\n  const requiredComponents = ['protocol', 'publicKey', 'host', 'projectId'];\n  requiredComponents.forEach(component => {\n    if (!dsn[component]) {\n      throw new SentryError(`Invalid Sentry Dsn: ${component} missing`);\n    }\n  });\n\n  if (!projectId.match(/^\\d+$/)) {\n    throw new SentryError(`Invalid Sentry Dsn: Invalid projectId ${projectId}`);\n  }\n\n  if (!isValidProtocol(protocol)) {\n    throw new SentryError(`Invalid Sentry Dsn: Invalid protocol ${protocol}`);\n  }\n\n  if (port && isNaN(parseInt(port, 10))) {\n    throw new SentryError(`Invalid Sentry Dsn: Invalid port ${port}`);\n  }\n\n  return true;\n}\n\n/** The Sentry Dsn, identifying a Sentry instance and project. */\nfunction makeDsn(from) {\n  const components = typeof from === 'string' ? dsnFromString(from) : dsnFromComponents(from);\n  validateDsn(components);\n  return components;\n}\n\nexport { dsnFromString, dsnToString, makeDsn };\n//# sourceMappingURL=dsn.js.map\n","import { isNaN, isSyntheticEvent } from './is.js';\nimport { memoBuilder } from './memo.js';\nimport { convertToPlainObject } from './object.js';\nimport { getFunctionName } from './stacktrace.js';\n\n/**\n * Recursively normalizes the given object.\n *\n * - Creates a copy to prevent original input mutation\n * - Skips non-enumerable properties\n * - When stringifying, calls `toJSON` if implemented\n * - Removes circular references\n * - Translates non-serializable values (`undefined`/`NaN`/functions) to serializable format\n * - Translates known global objects/classes to a string representations\n * - Takes care of `Error` object serialization\n * - Optionally limits depth of final output\n * - Optionally limits number of properties/elements included in any single object/array\n *\n * @param input The object to be normalized.\n * @param depth The max depth to which to normalize the object. (Anything deeper stringified whole.)\n * @param maxProperties The max number of elements or properties to be included in any single array or\n * object in the normallized output.\n * @returns A normalized version of the object, or `\"**non-serializable**\"` if any errors are thrown during normalization.\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction normalize(input, depth = 100, maxProperties = +Infinity) {\n  try {\n    // since we're at the outermost level, we don't provide a key\n    return visit('', input, depth, maxProperties);\n  } catch (err) {\n    return { ERROR: `**non-serializable** (${err})` };\n  }\n}\n\n/** JSDoc */\nfunction normalizeToSize(\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  object,\n  // Default Node.js REPL depth\n  depth = 3,\n  // 100kB, as 200kB is max payload size, so half sounds reasonable\n  maxSize = 100 * 1024,\n) {\n  const normalized = normalize(object, depth);\n\n  if (jsonSize(normalized) > maxSize) {\n    return normalizeToSize(object, depth - 1, maxSize);\n  }\n\n  return normalized ;\n}\n\n/**\n * Visits a node to perform normalization on it\n *\n * @param key The key corresponding to the given node\n * @param value The node to be visited\n * @param depth Optional number indicating the maximum recursion depth\n * @param maxProperties Optional maximum number of properties/elements included in any single object/array\n * @param memo Optional Memo class handling decycling\n */\nfunction visit(\n  key,\n  value,\n  depth = +Infinity,\n  maxProperties = +Infinity,\n  memo = memoBuilder(),\n) {\n  const [memoize, unmemoize] = memo;\n\n  // Get the simple cases out of the way first\n  if (value === null || (['number', 'boolean', 'string'].includes(typeof value) && !isNaN(value))) {\n    return value ;\n  }\n\n  const stringified = stringifyValue(key, value);\n\n  // Anything we could potentially dig into more (objects or arrays) will have come back as `\"[object XXXX]\"`.\n  // Everything else will have already been serialized, so if we don't see that pattern, we're done.\n  if (!stringified.startsWith('[object ')) {\n    return stringified;\n  }\n\n  // From here on, we can assert that `value` is either an object or an array.\n\n  // Do not normalize objects that we know have already been normalized. As a general rule, the\n  // \"__sentry_skip_normalization__\" property should only be used sparingly and only should only be set on objects that\n  // have already been normalized.\n  if ((value )['__sentry_skip_normalization__']) {\n    return value ;\n  }\n\n  // We can set `__sentry_override_normalization_depth__` on an object to ensure that from there\n  // We keep a certain amount of depth.\n  // This should be used sparingly, e.g. we use it for the redux integration to ensure we get a certain amount of state.\n  const remainingDepth =\n    typeof (value )['__sentry_override_normalization_depth__'] === 'number'\n      ? ((value )['__sentry_override_normalization_depth__'] )\n      : depth;\n\n  // We're also done if we've reached the max depth\n  if (remainingDepth === 0) {\n    // At this point we know `serialized` is a string of the form `\"[object XXXX]\"`. Clean it up so it's just `\"[XXXX]\"`.\n    return stringified.replace('object ', '');\n  }\n\n  // If we've already visited this branch, bail out, as it's circular reference. If not, note that we're seeing it now.\n  if (memoize(value)) {\n    return '[Circular ~]';\n  }\n\n  // If the value has a `toJSON` method, we call it to extract more information\n  const valueWithToJSON = value ;\n  if (valueWithToJSON && typeof valueWithToJSON.toJSON === 'function') {\n    try {\n      const jsonValue = valueWithToJSON.toJSON();\n      // We need to normalize the return value of `.toJSON()` in case it has circular references\n      return visit('', jsonValue, remainingDepth - 1, maxProperties, memo);\n    } catch (err) {\n      // pass (The built-in `toJSON` failed, but we can still try to do it ourselves)\n    }\n  }\n\n  // At this point we know we either have an object or an array, we haven't seen it before, and we're going to recurse\n  // because we haven't yet reached the max depth. Create an accumulator to hold the results of visiting each\n  // property/entry, and keep track of the number of items we add to it.\n  const normalized = (Array.isArray(value) ? [] : {}) ;\n  let numAdded = 0;\n\n  // Before we begin, convert`Error` and`Event` instances into plain objects, since some of each of their relevant\n  // properties are non-enumerable and otherwise would get missed.\n  const visitable = convertToPlainObject(value );\n\n  for (const visitKey in visitable) {\n    // Avoid iterating over fields in the prototype if they've somehow been exposed to enumeration.\n    if (!Object.prototype.hasOwnProperty.call(visitable, visitKey)) {\n      continue;\n    }\n\n    if (numAdded >= maxProperties) {\n      normalized[visitKey] = '[MaxProperties ~]';\n      break;\n    }\n\n    // Recursively visit all the child nodes\n    const visitValue = visitable[visitKey];\n    normalized[visitKey] = visit(visitKey, visitValue, remainingDepth - 1, maxProperties, memo);\n\n    numAdded++;\n  }\n\n  // Once we've visited all the branches, remove the parent from memo storage\n  unmemoize(value);\n\n  // Return accumulated values\n  return normalized;\n}\n\n/* eslint-disable complexity */\n/**\n * Stringify the given value. Handles various known special values and types.\n *\n * Not meant to be used on simple primitives which already have a string representation, as it will, for example, turn\n * the number 1231 into \"[Object Number]\", nor on `null`, as it will throw.\n *\n * @param value The value to stringify\n * @returns A stringified representation of the given value\n */\nfunction stringifyValue(\n  key,\n  // this type is a tiny bit of a cheat, since this function does handle NaN (which is technically a number), but for\n  // our internal use, it'll do\n  value,\n) {\n  try {\n    if (key === 'domain' && value && typeof value === 'object' && (value )._events) {\n      return '[Domain]';\n    }\n\n    if (key === 'domainEmitter') {\n      return '[DomainEmitter]';\n    }\n\n    // It's safe to use `global`, `window`, and `document` here in this manner, as we are asserting using `typeof` first\n    // which won't throw if they are not present.\n\n    if (typeof global !== 'undefined' && value === global) {\n      return '[Global]';\n    }\n\n    // eslint-disable-next-line no-restricted-globals\n    if (typeof window !== 'undefined' && value === window) {\n      return '[Window]';\n    }\n\n    // eslint-disable-next-line no-restricted-globals\n    if (typeof document !== 'undefined' && value === document) {\n      return '[Document]';\n    }\n\n    // React's SyntheticEvent thingy\n    if (isSyntheticEvent(value)) {\n      return '[SyntheticEvent]';\n    }\n\n    if (typeof value === 'number' && value !== value) {\n      return '[NaN]';\n    }\n\n    // this catches `undefined` (but not `null`, which is a primitive and can be serialized on its own)\n    if (value === void 0) {\n      return '[undefined]';\n    }\n\n    if (typeof value === 'function') {\n      return `[Function: ${getFunctionName(value)}]`;\n    }\n\n    if (typeof value === 'symbol') {\n      return `[${String(value)}]`;\n    }\n\n    // stringified BigInts are indistinguishable from regular numbers, so we need to label them to avoid confusion\n    if (typeof value === 'bigint') {\n      return `[BigInt: ${String(value)}]`;\n    }\n\n    // Now that we've knocked out all the special cases and the primitives, all we have left are objects. Simply casting\n    // them to strings means that instances of classes which haven't defined their `toStringTag` will just come out as\n    // `\"[object Object]\"`. If we instead look at the constructor's name (which is the same as the name of the class),\n    // we can make sure that only plain objects come out that way.\n    const objName = getConstructorName(value);\n\n    // Handle HTML Elements\n    if (/^HTML(\\w*)Element$/.test(objName)) {\n      return `[HTMLElement: ${objName}]`;\n    }\n\n    return `[object ${objName}]`;\n  } catch (err) {\n    return `**non-serializable** (${err})`;\n  }\n}\n/* eslint-enable complexity */\n\nfunction getConstructorName(value) {\n  const prototype = Object.getPrototypeOf(value);\n\n  return prototype ? prototype.constructor.name : 'null prototype';\n}\n\n/** Calculates bytes size of input string */\nfunction utf8Length(value) {\n  // eslint-disable-next-line no-bitwise\n  return ~-encodeURI(value).split(/%..|./).length;\n}\n\n/** Calculates bytes size of input object */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction jsonSize(value) {\n  return utf8Length(JSON.stringify(value));\n}\n\nexport { normalize, normalizeToSize, visit as walk };\n//# sourceMappingURL=normalize.js.map\n","/* eslint-disable @typescript-eslint/no-unsafe-member-access */\n/* eslint-disable @typescript-eslint/no-explicit-any */\n\n/**\n * Helper to decycle json objects\n */\nfunction memoBuilder() {\n  const hasWeakSet = typeof WeakSet === 'function';\n  const inner = hasWeakSet ? new WeakSet() : [];\n  function memoize(obj) {\n    if (hasWeakSet) {\n      if (inner.has(obj)) {\n        return true;\n      }\n      inner.add(obj);\n      return false;\n    }\n    // eslint-disable-next-line @typescript-eslint/prefer-for-of\n    for (let i = 0; i < inner.length; i++) {\n      const value = inner[i];\n      if (value === obj) {\n        return true;\n      }\n    }\n    inner.push(obj);\n    return false;\n  }\n\n  function unmemoize(obj) {\n    if (hasWeakSet) {\n      inner.delete(obj);\n    } else {\n      for (let i = 0; i < inner.length; i++) {\n        if (inner[i] === obj) {\n          inner.splice(i, 1);\n          break;\n        }\n      }\n    }\n  }\n  return [memoize, unmemoize];\n}\n\nexport { memoBuilder };\n//# sourceMappingURL=memo.js.map\n","import { dsnToString } from './dsn.js';\nimport { normalize } from './normalize.js';\nimport { dropUndefinedKeys } from './object.js';\n\n/**\n * Creates an envelope.\n * Make sure to always explicitly provide the generic to this function\n * so that the envelope types resolve correctly.\n */\nfunction createEnvelope(headers, items = []) {\n  return [headers, items] ;\n}\n\n/**\n * Add an item to an envelope.\n * Make sure to always explicitly provide the generic to this function\n * so that the envelope types resolve correctly.\n */\nfunction addItemToEnvelope(envelope, newItem) {\n  const [headers, items] = envelope;\n  return [headers, [...items, newItem]] ;\n}\n\n/**\n * Convenience function to loop through the items and item types of an envelope.\n * (This function was mostly created because working with envelope types is painful at the moment)\n *\n * If the callback returns true, the rest of the items will be skipped.\n */\nfunction forEachEnvelopeItem(\n  envelope,\n  callback,\n) {\n  const envelopeItems = envelope[1];\n\n  for (const envelopeItem of envelopeItems) {\n    const envelopeItemType = envelopeItem[0].type;\n    const result = callback(envelopeItem, envelopeItemType);\n\n    if (result) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\n/**\n * Returns true if the envelope contains any of the given envelope item types\n */\nfunction envelopeContainsItemType(envelope, types) {\n  return forEachEnvelopeItem(envelope, (_, type) => types.includes(type));\n}\n\n/**\n * Encode a string to UTF8.\n */\nfunction encodeUTF8(input, textEncoder) {\n  const utf8 = textEncoder || new TextEncoder();\n  return utf8.encode(input);\n}\n\n/**\n * Serializes an envelope.\n */\nfunction serializeEnvelope(envelope, textEncoder) {\n  const [envHeaders, items] = envelope;\n\n  // Initially we construct our envelope as a string and only convert to binary chunks if we encounter binary data\n  let parts = JSON.stringify(envHeaders);\n\n  function append(next) {\n    if (typeof parts === 'string') {\n      parts = typeof next === 'string' ? parts + next : [encodeUTF8(parts, textEncoder), next];\n    } else {\n      parts.push(typeof next === 'string' ? encodeUTF8(next, textEncoder) : next);\n    }\n  }\n\n  for (const item of items) {\n    const [itemHeaders, payload] = item;\n\n    append(`\\n${JSON.stringify(itemHeaders)}\\n`);\n\n    if (typeof payload === 'string' || payload instanceof Uint8Array) {\n      append(payload);\n    } else {\n      let stringifiedPayload;\n      try {\n        stringifiedPayload = JSON.stringify(payload);\n      } catch (e) {\n        // In case, despite all our efforts to keep `payload` circular-dependency-free, `JSON.strinify()` still\n        // fails, we try again after normalizing it again with infinite normalization depth. This of course has a\n        // performance impact but in this case a performance hit is better than throwing.\n        stringifiedPayload = JSON.stringify(normalize(payload));\n      }\n      append(stringifiedPayload);\n    }\n  }\n\n  return typeof parts === 'string' ? parts : concatBuffers(parts);\n}\n\nfunction concatBuffers(buffers) {\n  const totalLength = buffers.reduce((acc, buf) => acc + buf.length, 0);\n\n  const merged = new Uint8Array(totalLength);\n  let offset = 0;\n  for (const buffer of buffers) {\n    merged.set(buffer, offset);\n    offset += buffer.length;\n  }\n\n  return merged;\n}\n\n/**\n * Parses an envelope\n */\nfunction parseEnvelope(\n  env,\n  textEncoder,\n  textDecoder,\n) {\n  let buffer = typeof env === 'string' ? textEncoder.encode(env) : env;\n\n  function readBinary(length) {\n    const bin = buffer.subarray(0, length);\n    // Replace the buffer with the remaining data excluding trailing newline\n    buffer = buffer.subarray(length + 1);\n    return bin;\n  }\n\n  function readJson() {\n    let i = buffer.indexOf(0xa);\n    // If we couldn't find a newline, we must have found the end of the buffer\n    if (i < 0) {\n      i = buffer.length;\n    }\n\n    return JSON.parse(textDecoder.decode(readBinary(i))) ;\n  }\n\n  const envelopeHeader = readJson();\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const items = [];\n\n  while (buffer.length) {\n    const itemHeader = readJson();\n    const binaryLength = typeof itemHeader.length === 'number' ? itemHeader.length : undefined;\n\n    items.push([itemHeader, binaryLength ? readBinary(binaryLength) : readJson()]);\n  }\n\n  return [envelopeHeader, items];\n}\n\n/**\n * Creates attachment envelope items\n */\nfunction createAttachmentEnvelopeItem(\n  attachment,\n  textEncoder,\n) {\n  const buffer = typeof attachment.data === 'string' ? encodeUTF8(attachment.data, textEncoder) : attachment.data;\n\n  return [\n    dropUndefinedKeys({\n      type: 'attachment',\n      length: buffer.length,\n      filename: attachment.filename,\n      content_type: attachment.contentType,\n      attachment_type: attachment.attachmentType,\n    }),\n    buffer,\n  ];\n}\n\nconst ITEM_TYPE_TO_DATA_CATEGORY_MAP = {\n  session: 'session',\n  sessions: 'session',\n  attachment: 'attachment',\n  transaction: 'transaction',\n  event: 'error',\n  client_report: 'internal',\n  user_report: 'default',\n  profile: 'profile',\n  replay_event: 'replay',\n  replay_recording: 'replay',\n  check_in: 'monitor',\n};\n\n/**\n * Maps the type of an envelope item to a data category.\n */\nfunction envelopeItemTypeToDataCategory(type) {\n  return ITEM_TYPE_TO_DATA_CATEGORY_MAP[type];\n}\n\n/** Extracts the minimal SDK info from from the metadata or an events */\nfunction getSdkMetadataForEnvelopeHeader(metadataOrEvent) {\n  if (!metadataOrEvent || !metadataOrEvent.sdk) {\n    return;\n  }\n  const { name, version } = metadataOrEvent.sdk;\n  return { name, version };\n}\n\n/**\n * Creates event envelope headers, based on event, sdk info and tunnel\n * Note: This function was extracted from the core package to make it available in Replay\n */\nfunction createEventEnvelopeHeaders(\n  event,\n  sdkInfo,\n  tunnel,\n  dsn,\n) {\n  const dynamicSamplingContext = event.sdkProcessingMetadata && event.sdkProcessingMetadata.dynamicSamplingContext;\n  return {\n    event_id: event.event_id ,\n    sent_at: new Date().toISOString(),\n    ...(sdkInfo && { sdk: sdkInfo }),\n    ...(!!tunnel && { dsn: dsnToString(dsn) }),\n    ...(dynamicSamplingContext && {\n      trace: dropUndefinedKeys({ ...dynamicSamplingContext }),\n    }),\n  };\n}\n\nexport { addItemToEnvelope, createAttachmentEnvelopeItem, createEnvelope, createEventEnvelopeHeaders, envelopeContainsItemType, envelopeItemTypeToDataCategory, forEachEnvelopeItem, getSdkMetadataForEnvelopeHeader, parseEnvelope, serializeEnvelope };\n//# sourceMappingURL=envelope.js.map\n","import { makeDsn, dsnToString, urlEncode } from '@sentry/utils';\n\nconst SENTRY_API_VERSION = '7';\n\n/** Returns the prefix to construct Sentry ingestion API endpoints. */\nfunction getBaseApiEndpoint(dsn) {\n  const protocol = dsn.protocol ? `${dsn.protocol}:` : '';\n  const port = dsn.port ? `:${dsn.port}` : '';\n  return `${protocol}//${dsn.host}${port}${dsn.path ? `/${dsn.path}` : ''}/api/`;\n}\n\n/** Returns the ingest API endpoint for target. */\nfunction _getIngestEndpoint(dsn) {\n  return `${getBaseApiEndpoint(dsn)}${dsn.projectId}/envelope/`;\n}\n\n/** Returns a URL-encoded string with auth config suitable for a query string. */\nfunction _encodedAuth(dsn, sdkInfo) {\n  return urlEncode({\n    // We send only the minimum set of required information. See\n    // https://github.com/getsentry/sentry-javascript/issues/2572.\n    sentry_key: dsn.publicKey,\n    sentry_version: SENTRY_API_VERSION,\n    ...(sdkInfo && { sentry_client: `${sdkInfo.name}/${sdkInfo.version}` }),\n  });\n}\n\n/**\n * Returns the envelope endpoint URL with auth in the query string.\n *\n * Sending auth as part of the query string and not as custom HTTP headers avoids CORS preflight requests.\n */\nfunction getEnvelopeEndpointWithUrlEncodedAuth(\n  dsn,\n  // TODO (v8): Remove `tunnelOrOptions` in favor of `options`, and use the substitute code below\n  // options: ClientOptions = {} as ClientOptions,\n  tunnelOrOptions = {} ,\n) {\n  // TODO (v8): Use this code instead\n  // const { tunnel, _metadata = {} } = options;\n  // return tunnel ? tunnel : `${_getIngestEndpoint(dsn)}?${_encodedAuth(dsn, _metadata.sdk)}`;\n\n  const tunnel = typeof tunnelOrOptions === 'string' ? tunnelOrOptions : tunnelOrOptions.tunnel;\n  const sdkInfo =\n    typeof tunnelOrOptions === 'string' || !tunnelOrOptions._metadata ? undefined : tunnelOrOptions._metadata.sdk;\n\n  return tunnel ? tunnel : `${_getIngestEndpoint(dsn)}?${_encodedAuth(dsn, sdkInfo)}`;\n}\n\n/** Returns the url to the report dialog endpoint. */\nfunction getReportDialogEndpoint(\n  dsnLike,\n  dialogOptions\n\n,\n) {\n  const dsn = makeDsn(dsnLike);\n  const endpoint = `${getBaseApiEndpoint(dsn)}embed/error-page/`;\n\n  let encodedOptions = `dsn=${dsnToString(dsn)}`;\n  for (const key in dialogOptions) {\n    if (key === 'dsn') {\n      continue;\n    }\n\n    if (key === 'user') {\n      const user = dialogOptions.user;\n      if (!user) {\n        continue;\n      }\n      if (user.name) {\n        encodedOptions += `&name=${encodeURIComponent(user.name)}`;\n      }\n      if (user.email) {\n        encodedOptions += `&email=${encodeURIComponent(user.email)}`;\n      }\n    } else {\n      encodedOptions += `&${encodeURIComponent(key)}=${encodeURIComponent(dialogOptions[key] )}`;\n    }\n  }\n\n  return `${endpoint}?${encodedOptions}`;\n}\n\nexport { getEnvelopeEndpointWithUrlEncodedAuth, getReportDialogEndpoint };\n//# sourceMappingURL=api.js.map\n","import { uuid4, dateTimestampInSeconds, resolvedSyncPromise, truncate, GLOBAL_OBJ, normalize } from '@sentry/utils';\nimport { DEFAULT_ENVIRONMENT } from '../constants.js';\nimport { Scope } from '../scope.js';\n\n/**\n * Adds common information to events.\n *\n * The information includes release and environment from `options`,\n * breadcrumbs and context (extra, tags and user) from the scope.\n *\n * Information that is already present in the event is never overwritten. For\n * nested objects, such as the context, keys are merged.\n *\n * Note: This also triggers callbacks for `addGlobalEventProcessor`, but not `beforeSend`.\n *\n * @param event The original event.\n * @param hint May contain additional information about the original exception.\n * @param scope A scope containing event metadata.\n * @returns A new event with more information.\n * @hidden\n */\nfunction prepareEvent(\n  options,\n  event,\n  hint,\n  scope,\n) {\n  const { normalizeDepth = 3, normalizeMaxBreadth = 1000 } = options;\n  const prepared = {\n    ...event,\n    event_id: event.event_id || hint.event_id || uuid4(),\n    timestamp: event.timestamp || dateTimestampInSeconds(),\n  };\n  const integrations = hint.integrations || options.integrations.map(i => i.name);\n\n  applyClientOptions(prepared, options);\n  applyIntegrationsMetadata(prepared, integrations);\n\n  // Only apply debug metadata to error events.\n  if (event.type === undefined) {\n    applyDebugMetadata(prepared, options.stackParser);\n  }\n\n  // If we have scope given to us, use it as the base for further modifications.\n  // This allows us to prevent unnecessary copying of data if `captureContext` is not provided.\n  let finalScope = scope;\n  if (hint.captureContext) {\n    finalScope = Scope.clone(finalScope).update(hint.captureContext);\n  }\n\n  // We prepare the result here with a resolved Event.\n  let result = resolvedSyncPromise(prepared);\n\n  // This should be the last thing called, since we want that\n  // {@link Hub.addEventProcessor} gets the finished prepared event.\n  //\n  // We need to check for the existence of `finalScope.getAttachments`\n  // because `getAttachments` can be undefined if users are using an older version\n  // of `@sentry/core` that does not have the `getAttachments` method.\n  // See: https://github.com/getsentry/sentry-javascript/issues/5229\n  if (finalScope) {\n    // Collect attachments from the hint and scope\n    if (finalScope.getAttachments) {\n      const attachments = [...(hint.attachments || []), ...finalScope.getAttachments()];\n\n      if (attachments.length) {\n        hint.attachments = attachments;\n      }\n    }\n\n    // In case we have a hub we reassign it.\n    result = finalScope.applyToEvent(prepared, hint);\n  }\n\n  return result.then(evt => {\n    if (typeof normalizeDepth === 'number' && normalizeDepth > 0) {\n      return normalizeEvent(evt, normalizeDepth, normalizeMaxBreadth);\n    }\n    return evt;\n  });\n}\n\n/**\n *  Enhances event using the client configuration.\n *  It takes care of all \"static\" values like environment, release and `dist`,\n *  as well as truncating overly long values.\n * @param event event instance to be enhanced\n */\nfunction applyClientOptions(event, options) {\n  const { environment, release, dist, maxValueLength = 250 } = options;\n\n  if (!('environment' in event)) {\n    event.environment = 'environment' in options ? environment : DEFAULT_ENVIRONMENT;\n  }\n\n  if (event.release === undefined && release !== undefined) {\n    event.release = release;\n  }\n\n  if (event.dist === undefined && dist !== undefined) {\n    event.dist = dist;\n  }\n\n  if (event.message) {\n    event.message = truncate(event.message, maxValueLength);\n  }\n\n  const exception = event.exception && event.exception.values && event.exception.values[0];\n  if (exception && exception.value) {\n    exception.value = truncate(exception.value, maxValueLength);\n  }\n\n  const request = event.request;\n  if (request && request.url) {\n    request.url = truncate(request.url, maxValueLength);\n  }\n}\n\nconst debugIdStackParserCache = new WeakMap();\n\n/**\n * Applies debug metadata images to the event in order to apply source maps by looking up their debug ID.\n */\nfunction applyDebugMetadata(event, stackParser) {\n  const debugIdMap = GLOBAL_OBJ._sentryDebugIds;\n\n  if (!debugIdMap) {\n    return;\n  }\n\n  let debugIdStackFramesCache;\n  const cachedDebugIdStackFrameCache = debugIdStackParserCache.get(stackParser);\n  if (cachedDebugIdStackFrameCache) {\n    debugIdStackFramesCache = cachedDebugIdStackFrameCache;\n  } else {\n    debugIdStackFramesCache = new Map();\n    debugIdStackParserCache.set(stackParser, debugIdStackFramesCache);\n  }\n\n  // Build a map of filename -> debug_id\n  const filenameDebugIdMap = Object.keys(debugIdMap).reduce((acc, debugIdStackTrace) => {\n    let parsedStack;\n    const cachedParsedStack = debugIdStackFramesCache.get(debugIdStackTrace);\n    if (cachedParsedStack) {\n      parsedStack = cachedParsedStack;\n    } else {\n      parsedStack = stackParser(debugIdStackTrace);\n      debugIdStackFramesCache.set(debugIdStackTrace, parsedStack);\n    }\n\n    for (let i = parsedStack.length - 1; i >= 0; i--) {\n      const stackFrame = parsedStack[i];\n      if (stackFrame.filename) {\n        acc[stackFrame.filename] = debugIdMap[debugIdStackTrace];\n        break;\n      }\n    }\n    return acc;\n  }, {});\n\n  // Get a Set of filenames in the stack trace\n  const errorFileNames = new Set();\n  try {\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    event.exception.values.forEach(exception => {\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      exception.stacktrace.frames.forEach(frame => {\n        if (frame.filename) {\n          errorFileNames.add(frame.filename);\n        }\n      });\n    });\n  } catch (e) {\n    // To save bundle size we're just try catching here instead of checking for the existence of all the different objects.\n  }\n\n  // Fill debug_meta information\n  event.debug_meta = event.debug_meta || {};\n  event.debug_meta.images = event.debug_meta.images || [];\n  const images = event.debug_meta.images;\n  errorFileNames.forEach(filename => {\n    if (filenameDebugIdMap[filename]) {\n      images.push({\n        type: 'sourcemap',\n        code_file: filename,\n        debug_id: filenameDebugIdMap[filename],\n      });\n    }\n  });\n}\n\n/**\n * This function adds all used integrations to the SDK info in the event.\n * @param event The event that will be filled with all integrations.\n */\nfunction applyIntegrationsMetadata(event, integrationNames) {\n  if (integrationNames.length > 0) {\n    event.sdk = event.sdk || {};\n    event.sdk.integrations = [...(event.sdk.integrations || []), ...integrationNames];\n  }\n}\n\n/**\n * Applies `normalize` function on necessary `Event` attributes to make them safe for serialization.\n * Normalized keys:\n * - `breadcrumbs.data`\n * - `user`\n * - `contexts`\n * - `extra`\n * @param event Event\n * @returns Normalized event\n */\nfunction normalizeEvent(event, depth, maxBreadth) {\n  if (!event) {\n    return null;\n  }\n\n  const normalized = {\n    ...event,\n    ...(event.breadcrumbs && {\n      breadcrumbs: event.breadcrumbs.map(b => ({\n        ...b,\n        ...(b.data && {\n          data: normalize(b.data, depth, maxBreadth),\n        }),\n      })),\n    }),\n    ...(event.user && {\n      user: normalize(event.user, depth, maxBreadth),\n    }),\n    ...(event.contexts && {\n      contexts: normalize(event.contexts, depth, maxBreadth),\n    }),\n    ...(event.extra && {\n      extra: normalize(event.extra, depth, maxBreadth),\n    }),\n  };\n\n  // event.contexts.trace stores information about a Transaction. Similarly,\n  // event.spans[] stores information about child Spans. Given that a\n  // Transaction is conceptually a Span, normalization should apply to both\n  // Transactions and Spans consistently.\n  // For now the decision is to skip normalization of Transactions and Spans,\n  // so this block overwrites the normalized event to add back the original\n  // Transaction information prior to normalization.\n  if (event.contexts && event.contexts.trace && normalized.contexts) {\n    normalized.contexts.trace = event.contexts.trace;\n\n    // event.contexts.trace.data may contain circular/dangerous data so we need to normalize it\n    if (event.contexts.trace.data) {\n      normalized.contexts.trace.data = normalize(event.contexts.trace.data, depth, maxBreadth);\n    }\n  }\n\n  // event.spans[].data may contain circular/dangerous data so we need to normalize it\n  if (event.spans) {\n    normalized.spans = event.spans.map(span => {\n      // We cannot use the spread operator here because `toJSON` on `span` is non-enumerable\n      if (span.data) {\n        span.data = normalize(span.data, depth, maxBreadth);\n      }\n      return span;\n    });\n  }\n\n  return normalized;\n}\n\nexport { applyDebugMetadata, prepareEvent };\n//# sourceMappingURL=prepareEvent.js.map\n","import { makeDsn, logger, checkOrSetAlreadyCaught, isPrimitive, resolvedSyncPromise, addItemToEnvelope, createAttachmentEnvelopeItem, SyncPromise, rejectedSyncPromise, SentryError, isThenable, isPlainObject } from '@sentry/utils';\nimport { getEnvelopeEndpointWithUrlEncodedAuth } from './api.js';\nimport { createEventEnvelope, createSessionEnvelope } from './envelope.js';\nimport { setupIntegrations, setupIntegration } from './integration.js';\nimport { updateSession } from './session.js';\nimport { prepareEvent } from './utils/prepareEvent.js';\n\nconst ALREADY_SEEN_ERROR = \"Not capturing exception because it's already been captured.\";\n\n/**\n * Base implementation for all JavaScript SDK clients.\n *\n * Call the constructor with the corresponding options\n * specific to the client subclass. To access these options later, use\n * {@link Client.getOptions}.\n *\n * If a Dsn is specified in the options, it will be parsed and stored. Use\n * {@link Client.getDsn} to retrieve the Dsn at any moment. In case the Dsn is\n * invalid, the constructor will throw a {@link SentryException}. Note that\n * without a valid Dsn, the SDK will not send any events to Sentry.\n *\n * Before sending an event, it is passed through\n * {@link BaseClient._prepareEvent} to add SDK information and scope data\n * (breadcrumbs and context). To add more custom information, override this\n * method and extend the resulting prepared event.\n *\n * To issue automatically created events (e.g. via instrumentation), use\n * {@link Client.captureEvent}. It will prepare the event and pass it through\n * the callback lifecycle. To issue auto-breadcrumbs, use\n * {@link Client.addBreadcrumb}.\n *\n * @example\n * class NodeClient extends BaseClient<NodeOptions> {\n *   public constructor(options: NodeOptions) {\n *     super(options);\n *   }\n *\n *   // ...\n * }\n */\nclass BaseClient {\n  /** Options passed to the SDK. */\n\n  /** The client Dsn, if specified in options. Without this Dsn, the SDK will be disabled. */\n\n  /** Array of set up integrations. */\n   __init() {this._integrations = {};}\n\n  /** Indicates whether this client's integrations have been set up. */\n   __init2() {this._integrationsInitialized = false;}\n\n  /** Number of calls being processed */\n   __init3() {this._numProcessing = 0;}\n\n  /** Holds flushable  */\n   __init4() {this._outcomes = {};}\n\n  // eslint-disable-next-line @typescript-eslint/ban-types\n   __init5() {this._hooks = {};}\n\n  /**\n   * Initializes this client instance.\n   *\n   * @param options Options for the client.\n   */\n   constructor(options) {BaseClient.prototype.__init.call(this);BaseClient.prototype.__init2.call(this);BaseClient.prototype.__init3.call(this);BaseClient.prototype.__init4.call(this);BaseClient.prototype.__init5.call(this);\n    this._options = options;\n    if (options.dsn) {\n      this._dsn = makeDsn(options.dsn);\n      const url = getEnvelopeEndpointWithUrlEncodedAuth(this._dsn, options);\n      this._transport = options.transport({\n        recordDroppedEvent: this.recordDroppedEvent.bind(this),\n        ...options.transportOptions,\n        url,\n      });\n    } else {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.warn('No DSN provided, client will not do anything.');\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/explicit-module-boundary-types\n   captureException(exception, hint, scope) {\n    // ensure we haven't captured this very object before\n    if (checkOrSetAlreadyCaught(exception)) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.log(ALREADY_SEEN_ERROR);\n      return;\n    }\n\n    let eventId = hint && hint.event_id;\n\n    this._process(\n      this.eventFromException(exception, hint)\n        .then(event => this._captureEvent(event, hint, scope))\n        .then(result => {\n          eventId = result;\n        }),\n    );\n\n    return eventId;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   captureMessage(\n    message,\n    // eslint-disable-next-line deprecation/deprecation\n    level,\n    hint,\n    scope,\n  ) {\n    let eventId = hint && hint.event_id;\n\n    const promisedEvent = isPrimitive(message)\n      ? this.eventFromMessage(String(message), level, hint)\n      : this.eventFromException(message, hint);\n\n    this._process(\n      promisedEvent\n        .then(event => this._captureEvent(event, hint, scope))\n        .then(result => {\n          eventId = result;\n        }),\n    );\n\n    return eventId;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   captureEvent(event, hint, scope) {\n    // ensure we haven't captured this very object before\n    if (hint && hint.originalException && checkOrSetAlreadyCaught(hint.originalException)) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.log(ALREADY_SEEN_ERROR);\n      return;\n    }\n\n    let eventId = hint && hint.event_id;\n\n    this._process(\n      this._captureEvent(event, hint, scope).then(result => {\n        eventId = result;\n      }),\n    );\n\n    return eventId;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   captureSession(session) {\n    if (!this._isEnabled()) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.warn('SDK not enabled, will not capture session.');\n      return;\n    }\n\n    if (!(typeof session.release === 'string')) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.warn('Discarded session because of missing or non-string release');\n    } else {\n      this.sendSession(session);\n      // After sending, we set init false to indicate it's not the first occurrence\n      updateSession(session, { init: false });\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n   getDsn() {\n    return this._dsn;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   getOptions() {\n    return this._options;\n  }\n\n  /**\n   * @see SdkMetadata in @sentry/types\n   *\n   * @return The metadata of the SDK\n   */\n   getSdkMetadata() {\n    return this._options._metadata;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   getTransport() {\n    return this._transport;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   flush(timeout) {\n    const transport = this._transport;\n    if (transport) {\n      return this._isClientDoneProcessing(timeout).then(clientFinished => {\n        return transport.flush(timeout).then(transportFlushed => clientFinished && transportFlushed);\n      });\n    } else {\n      return resolvedSyncPromise(true);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n   close(timeout) {\n    return this.flush(timeout).then(result => {\n      this.getOptions().enabled = false;\n      return result;\n    });\n  }\n\n  /**\n   * Sets up the integrations\n   */\n   setupIntegrations() {\n    if (this._isEnabled() && !this._integrationsInitialized) {\n      this._integrations = setupIntegrations(this._options.integrations);\n      this._integrationsInitialized = true;\n    }\n  }\n\n  /**\n   * Gets an installed integration by its `id`.\n   *\n   * @returns The installed integration or `undefined` if no integration with that `id` was installed.\n   */\n   getIntegrationById(integrationId) {\n    return this._integrations[integrationId];\n  }\n\n  /**\n   * @inheritDoc\n   */\n   getIntegration(integration) {\n    try {\n      return (this._integrations[integration.id] ) || null;\n    } catch (_oO) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.warn(`Cannot retrieve integration ${integration.id} from the current Client`);\n      return null;\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n   addIntegration(integration) {\n    setupIntegration(integration, this._integrations);\n  }\n\n  /**\n   * @inheritDoc\n   */\n   sendEvent(event, hint = {}) {\n    if (this._dsn) {\n      let env = createEventEnvelope(event, this._dsn, this._options._metadata, this._options.tunnel);\n\n      for (const attachment of hint.attachments || []) {\n        env = addItemToEnvelope(\n          env,\n          createAttachmentEnvelopeItem(\n            attachment,\n            this._options.transportOptions && this._options.transportOptions.textEncoder,\n          ),\n        );\n      }\n\n      const promise = this._sendEnvelope(env);\n      if (promise) {\n        promise.then(sendResponse => this.emit('afterSendEvent', event, sendResponse), null);\n      }\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n   sendSession(session) {\n    if (this._dsn) {\n      const env = createSessionEnvelope(session, this._dsn, this._options._metadata, this._options.tunnel);\n      void this._sendEnvelope(env);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n   recordDroppedEvent(reason, category, _event) {\n    // Note: we use `event` in replay, where we overwrite this hook.\n\n    if (this._options.sendClientReports) {\n      // We want to track each category (error, transaction, session, replay_event) separately\n      // but still keep the distinction between different type of outcomes.\n      // We could use nested maps, but it's much easier to read and type this way.\n      // A correct type for map-based implementation if we want to go that route\n      // would be `Partial<Record<SentryRequestType, Partial<Record<Outcome, number>>>>`\n      // With typescript 4.1 we could even use template literal types\n      const key = `${reason}:${category}`;\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.log(`Adding outcome: \"${key}\"`);\n\n      // The following works because undefined + 1 === NaN and NaN is falsy\n      this._outcomes[key] = this._outcomes[key] + 1 || 1;\n    }\n  }\n\n  // Keep on() & emit() signatures in sync with types' client.ts interface\n\n  /** @inheritdoc */\n\n  /** @inheritdoc */\n   on(hook, callback) {\n    if (!this._hooks[hook]) {\n      this._hooks[hook] = [];\n    }\n\n    // @ts-ignore We assue the types are correct\n    this._hooks[hook].push(callback);\n  }\n\n  /** @inheritdoc */\n\n  /** @inheritdoc */\n   emit(hook, ...rest) {\n    if (this._hooks[hook]) {\n      // @ts-ignore we cannot enforce the callback to match the hook\n      this._hooks[hook].forEach(callback => callback(...rest));\n    }\n  }\n\n  /** Updates existing session based on the provided event */\n   _updateSessionFromEvent(session, event) {\n    let crashed = false;\n    let errored = false;\n    const exceptions = event.exception && event.exception.values;\n\n    if (exceptions) {\n      errored = true;\n\n      for (const ex of exceptions) {\n        const mechanism = ex.mechanism;\n        if (mechanism && mechanism.handled === false) {\n          crashed = true;\n          break;\n        }\n      }\n    }\n\n    // A session is updated and that session update is sent in only one of the two following scenarios:\n    // 1. Session with non terminal status and 0 errors + an error occurred -> Will set error count to 1 and send update\n    // 2. Session with non terminal status and 1 error + a crash occurred -> Will set status crashed and send update\n    const sessionNonTerminal = session.status === 'ok';\n    const shouldUpdateAndSend = (sessionNonTerminal && session.errors === 0) || (sessionNonTerminal && crashed);\n\n    if (shouldUpdateAndSend) {\n      updateSession(session, {\n        ...(crashed && { status: 'crashed' }),\n        errors: session.errors || Number(errored || crashed),\n      });\n      this.captureSession(session);\n    }\n  }\n\n  /**\n   * Determine if the client is finished processing. Returns a promise because it will wait `timeout` ms before saying\n   * \"no\" (resolving to `false`) in order to give the client a chance to potentially finish first.\n   *\n   * @param timeout The time, in ms, after which to resolve to `false` if the client is still busy. Passing `0` (or not\n   * passing anything) will make the promise wait as long as it takes for processing to finish before resolving to\n   * `true`.\n   * @returns A promise which will resolve to `true` if processing is already done or finishes before the timeout, and\n   * `false` otherwise\n   */\n   _isClientDoneProcessing(timeout) {\n    return new SyncPromise(resolve => {\n      let ticked = 0;\n      const tick = 1;\n\n      const interval = setInterval(() => {\n        if (this._numProcessing == 0) {\n          clearInterval(interval);\n          resolve(true);\n        } else {\n          ticked += tick;\n          if (timeout && ticked >= timeout) {\n            clearInterval(interval);\n            resolve(false);\n          }\n        }\n      }, tick);\n    });\n  }\n\n  /** Determines whether this SDK is enabled and a valid Dsn is present. */\n   _isEnabled() {\n    return this.getOptions().enabled !== false && this._dsn !== undefined;\n  }\n\n  /**\n   * Adds common information to events.\n   *\n   * The information includes release and environment from `options`,\n   * breadcrumbs and context (extra, tags and user) from the scope.\n   *\n   * Information that is already present in the event is never overwritten. For\n   * nested objects, such as the context, keys are merged.\n   *\n   * @param event The original event.\n   * @param hint May contain additional information about the original exception.\n   * @param scope A scope containing event metadata.\n   * @returns A new event with more information.\n   */\n   _prepareEvent(event, hint, scope) {\n    const options = this.getOptions();\n    const integrations = Object.keys(this._integrations);\n    if (!hint.integrations && integrations.length > 0) {\n      hint.integrations = integrations;\n    }\n    return prepareEvent(options, event, hint, scope);\n  }\n\n  /**\n   * Processes the event and logs an error in case of rejection\n   * @param event\n   * @param hint\n   * @param scope\n   */\n   _captureEvent(event, hint = {}, scope) {\n    return this._processEvent(event, hint, scope).then(\n      finalEvent => {\n        return finalEvent.event_id;\n      },\n      reason => {\n        if ((typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__)) {\n          // If something's gone wrong, log the error as a warning. If it's just us having used a `SentryError` for\n          // control flow, log just the message (no stack) as a log-level log.\n          const sentryError = reason ;\n          if (sentryError.logLevel === 'log') {\n            logger.log(sentryError.message);\n          } else {\n            logger.warn(sentryError);\n          }\n        }\n        return undefined;\n      },\n    );\n  }\n\n  /**\n   * Processes an event (either error or message) and sends it to Sentry.\n   *\n   * This also adds breadcrumbs and context information to the event. However,\n   * platform specific meta data (such as the User's IP address) must be added\n   * by the SDK implementor.\n   *\n   *\n   * @param event The event to send to Sentry.\n   * @param hint May contain additional information about the original exception.\n   * @param scope A scope containing event metadata.\n   * @returns A SyncPromise that resolves with the event or rejects in case event was/will not be send.\n   */\n   _processEvent(event, hint, scope) {\n    const options = this.getOptions();\n    const { sampleRate } = options;\n\n    if (!this._isEnabled()) {\n      return rejectedSyncPromise(new SentryError('SDK not enabled, will not capture event.', 'log'));\n    }\n\n    const isTransaction = isTransactionEvent(event);\n    const isError = isErrorEvent(event);\n    const eventType = event.type || 'error';\n    const beforeSendLabel = `before send for type \\`${eventType}\\``;\n\n    // 1.0 === 100% events are sent\n    // 0.0 === 0% events are sent\n    // Sampling for transaction happens somewhere else\n    if (isError && typeof sampleRate === 'number' && Math.random() > sampleRate) {\n      this.recordDroppedEvent('sample_rate', 'error', event);\n      return rejectedSyncPromise(\n        new SentryError(\n          `Discarding event because it's not included in the random sample (sampling rate = ${sampleRate})`,\n          'log',\n        ),\n      );\n    }\n\n    const dataCategory = eventType === 'replay_event' ? 'replay' : eventType;\n\n    return this._prepareEvent(event, hint, scope)\n      .then(prepared => {\n        if (prepared === null) {\n          this.recordDroppedEvent('event_processor', dataCategory, event);\n          throw new SentryError('An event processor returned `null`, will not send event.', 'log');\n        }\n\n        const isInternalException = hint.data && (hint.data ).__sentry__ === true;\n        if (isInternalException) {\n          return prepared;\n        }\n\n        const result = processBeforeSend(options, prepared, hint);\n        return _validateBeforeSendResult(result, beforeSendLabel);\n      })\n      .then(processedEvent => {\n        if (processedEvent === null) {\n          this.recordDroppedEvent('before_send', dataCategory, event);\n          throw new SentryError(`${beforeSendLabel} returned \\`null\\`, will not send event.`, 'log');\n        }\n\n        const session = scope && scope.getSession();\n        if (!isTransaction && session) {\n          this._updateSessionFromEvent(session, processedEvent);\n        }\n\n        // None of the Sentry built event processor will update transaction name,\n        // so if the transaction name has been changed by an event processor, we know\n        // it has to come from custom event processor added by a user\n        const transactionInfo = processedEvent.transaction_info;\n        if (isTransaction && transactionInfo && processedEvent.transaction !== event.transaction) {\n          const source = 'custom';\n          processedEvent.transaction_info = {\n            ...transactionInfo,\n            source,\n          };\n        }\n\n        this.sendEvent(processedEvent, hint);\n        return processedEvent;\n      })\n      .then(null, reason => {\n        if (reason instanceof SentryError) {\n          throw reason;\n        }\n\n        this.captureException(reason, {\n          data: {\n            __sentry__: true,\n          },\n          originalException: reason,\n        });\n        throw new SentryError(\n          `Event processing pipeline threw an error, original event will not be sent. Details have been sent as a new event.\\nReason: ${reason}`,\n        );\n      });\n  }\n\n  /**\n   * Occupies the client with processing and event\n   */\n   _process(promise) {\n    this._numProcessing++;\n    void promise.then(\n      value => {\n        this._numProcessing--;\n        return value;\n      },\n      reason => {\n        this._numProcessing--;\n        return reason;\n      },\n    );\n  }\n\n  /**\n   * @inheritdoc\n   */\n   _sendEnvelope(envelope) {\n    if (this._transport && this._dsn) {\n      this.emit('beforeEnvelope', envelope);\n\n      return this._transport.send(envelope).then(null, reason => {\n        (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.error('Error while sending event:', reason);\n      });\n    } else {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.error('Transport disabled');\n    }\n  }\n\n  /**\n   * Clears outcomes on this client and returns them.\n   */\n   _clearOutcomes() {\n    const outcomes = this._outcomes;\n    this._outcomes = {};\n    return Object.keys(outcomes).map(key => {\n      const [reason, category] = key.split(':') ;\n      return {\n        reason,\n        category,\n        quantity: outcomes[key],\n      };\n    });\n  }\n\n  /**\n   * @inheritDoc\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/explicit-module-boundary-types\n\n}\n\n/**\n * Verifies that return value of configured `beforeSend` or `beforeSendTransaction` is of expected type, and returns the value if so.\n */\nfunction _validateBeforeSendResult(\n  beforeSendResult,\n  beforeSendLabel,\n) {\n  const invalidValueError = `${beforeSendLabel} must return \\`null\\` or a valid event.`;\n  if (isThenable(beforeSendResult)) {\n    return beforeSendResult.then(\n      event => {\n        if (!isPlainObject(event) && event !== null) {\n          throw new SentryError(invalidValueError);\n        }\n        return event;\n      },\n      e => {\n        throw new SentryError(`${beforeSendLabel} rejected with ${e}`);\n      },\n    );\n  } else if (!isPlainObject(beforeSendResult) && beforeSendResult !== null) {\n    throw new SentryError(invalidValueError);\n  }\n  return beforeSendResult;\n}\n\n/**\n * Process the matching `beforeSendXXX` callback.\n */\nfunction processBeforeSend(\n  options,\n  event,\n  hint,\n) {\n  const { beforeSend, beforeSendTransaction } = options;\n\n  if (isErrorEvent(event) && beforeSend) {\n    return beforeSend(event, hint);\n  }\n\n  if (isTransactionEvent(event) && beforeSendTransaction) {\n    return beforeSendTransaction(event, hint);\n  }\n\n  return event;\n}\n\nfunction isErrorEvent(event) {\n  return event.type === undefined;\n}\n\nfunction isTransactionEvent(event) {\n  return event.type === 'transaction';\n}\n\nexport { BaseClient };\n//# sourceMappingURL=baseclient.js.map\n","import { getSdkMetadataForEnvelopeHeader, dsnToString, createEnvelope, createEventEnvelopeHeaders } from '@sentry/utils';\n\n/**\n * Apply SdkInfo (name, version, packages, integrations) to the corresponding event key.\n * Merge with existing data if any.\n **/\nfunction enhanceEventWithSdkInfo(event, sdkInfo) {\n  if (!sdkInfo) {\n    return event;\n  }\n  event.sdk = event.sdk || {};\n  event.sdk.name = event.sdk.name || sdkInfo.name;\n  event.sdk.version = event.sdk.version || sdkInfo.version;\n  event.sdk.integrations = [...(event.sdk.integrations || []), ...(sdkInfo.integrations || [])];\n  event.sdk.packages = [...(event.sdk.packages || []), ...(sdkInfo.packages || [])];\n  return event;\n}\n\n/** Creates an envelope from a Session */\nfunction createSessionEnvelope(\n  session,\n  dsn,\n  metadata,\n  tunnel,\n) {\n  const sdkInfo = getSdkMetadataForEnvelopeHeader(metadata);\n  const envelopeHeaders = {\n    sent_at: new Date().toISOString(),\n    ...(sdkInfo && { sdk: sdkInfo }),\n    ...(!!tunnel && { dsn: dsnToString(dsn) }),\n  };\n\n  const envelopeItem =\n    'aggregates' in session ? [{ type: 'sessions' }, session] : [{ type: 'session' }, session];\n\n  return createEnvelope(envelopeHeaders, [envelopeItem]);\n}\n\n/**\n * Create an Envelope from an event.\n */\nfunction createEventEnvelope(\n  event,\n  dsn,\n  metadata,\n  tunnel,\n) {\n  const sdkInfo = getSdkMetadataForEnvelopeHeader(metadata);\n\n  /*\n    Note: Due to TS, event.type may be `replay_event`, theoretically.\n    In practice, we never call `createEventEnvelope` with `replay_event` type,\n    and we'd have to adjut a looot of types to make this work properly.\n    We want to avoid casting this around, as that could lead to bugs (e.g. when we add another type)\n    So the safe choice is to really guard against the replay_event type here.\n  */\n  const eventType = event.type && event.type !== 'replay_event' ? event.type : 'event';\n\n  enhanceEventWithSdkInfo(event, metadata && metadata.sdk);\n\n  const envelopeHeaders = createEventEnvelopeHeaders(event, sdkInfo, tunnel, dsn);\n\n  // Prevent this data (which, if it exists, was used in earlier steps in the processing pipeline) from being sent to\n  // sentry. (Note: Our use of this property comes and goes with whatever we might be debugging, whatever hacks we may\n  // have temporarily added, etc. Even if we don't happen to be using it at some point in the future, let's not get rid\n  // of this `delete`, lest we miss putting it back in the next time the property is in use.)\n  delete event.sdkProcessingMetadata;\n\n  const eventItem = [{ type: eventType }, event];\n  return createEnvelope(envelopeHeaders, [eventItem]);\n}\n\nexport { createEventEnvelope, createSessionEnvelope };\n//# sourceMappingURL=envelope.js.map\n","const SDK_VERSION = '7.50.0';\n\nexport { SDK_VERSION };\n//# sourceMappingURL=version.js.map\n","import { getCurrentHub } from '@sentry/core';\nimport { addExceptionMechanism, resolvedSyncPromise, isErrorEvent, isDOMError, isDOMException, addExceptionTypeValue, isError, isPlainObject, isEvent, extractExceptionKeysForMessage, normalizeToSize } from '@sentry/utils';\n\n/**\n * This function creates an exception from a JavaScript Error\n */\nfunction exceptionFromError(stackParser, ex) {\n  // Get the frames first since Opera can lose the stack if we touch anything else first\n  const frames = parseStackFrames(stackParser, ex);\n\n  const exception = {\n    type: ex && ex.name,\n    value: extractMessage(ex),\n  };\n\n  if (frames.length) {\n    exception.stacktrace = { frames };\n  }\n\n  if (exception.type === undefined && exception.value === '') {\n    exception.value = 'Unrecoverable error caught';\n  }\n\n  return exception;\n}\n\n/**\n * @hidden\n */\nfunction eventFromPlainObject(\n  stackParser,\n  exception,\n  syntheticException,\n  isUnhandledRejection,\n) {\n  const hub = getCurrentHub();\n  const client = hub.getClient();\n  const normalizeDepth = client && client.getOptions().normalizeDepth;\n\n  const event = {\n    exception: {\n      values: [\n        {\n          type: isEvent(exception) ? exception.constructor.name : isUnhandledRejection ? 'UnhandledRejection' : 'Error',\n          value: `Non-Error ${\n            isUnhandledRejection ? 'promise rejection' : 'exception'\n          } captured with keys: ${extractExceptionKeysForMessage(exception)}`,\n        },\n      ],\n    },\n    extra: {\n      __serialized__: normalizeToSize(exception, normalizeDepth),\n    },\n  };\n\n  if (syntheticException) {\n    const frames = parseStackFrames(stackParser, syntheticException);\n    if (frames.length) {\n      // event.exception.values[0] has been set above\n      (event.exception ).values[0].stacktrace = { frames };\n    }\n  }\n\n  return event;\n}\n\n/**\n * @hidden\n */\nfunction eventFromError(stackParser, ex) {\n  return {\n    exception: {\n      values: [exceptionFromError(stackParser, ex)],\n    },\n  };\n}\n\n/** Parses stack frames from an error */\nfunction parseStackFrames(\n  stackParser,\n  ex,\n) {\n  // Access and store the stacktrace property before doing ANYTHING\n  // else to it because Opera is not very good at providing it\n  // reliably in other circumstances.\n  const stacktrace = ex.stacktrace || ex.stack || '';\n\n  const popSize = getPopSize(ex);\n\n  try {\n    return stackParser(stacktrace, popSize);\n  } catch (e) {\n    // no-empty\n  }\n\n  return [];\n}\n\n// Based on our own mapping pattern - https://github.com/getsentry/sentry/blob/9f08305e09866c8bd6d0c24f5b0aabdd7dd6c59c/src/sentry/lang/javascript/errormapping.py#L83-L108\nconst reactMinifiedRegexp = /Minified React error #\\d+;/i;\n\nfunction getPopSize(ex) {\n  if (ex) {\n    if (typeof ex.framesToPop === 'number') {\n      return ex.framesToPop;\n    }\n\n    if (reactMinifiedRegexp.test(ex.message)) {\n      return 1;\n    }\n  }\n\n  return 0;\n}\n\n/**\n * There are cases where stacktrace.message is an Event object\n * https://github.com/getsentry/sentry-javascript/issues/1949\n * In this specific case we try to extract stacktrace.message.error.message\n */\nfunction extractMessage(ex) {\n  const message = ex && ex.message;\n  if (!message) {\n    return 'No error message';\n  }\n  if (message.error && typeof message.error.message === 'string') {\n    return message.error.message;\n  }\n  return message;\n}\n\n/**\n * Creates an {@link Event} from all inputs to `captureException` and non-primitive inputs to `captureMessage`.\n * @hidden\n */\nfunction eventFromException(\n  stackParser,\n  exception,\n  hint,\n  attachStacktrace,\n) {\n  const syntheticException = (hint && hint.syntheticException) || undefined;\n  const event = eventFromUnknownInput(stackParser, exception, syntheticException, attachStacktrace);\n  addExceptionMechanism(event); // defaults to { type: 'generic', handled: true }\n  event.level = 'error';\n  if (hint && hint.event_id) {\n    event.event_id = hint.event_id;\n  }\n  return resolvedSyncPromise(event);\n}\n\n/**\n * Builds and Event from a Message\n * @hidden\n */\nfunction eventFromMessage(\n  stackParser,\n  message,\n  // eslint-disable-next-line deprecation/deprecation\n  level = 'info',\n  hint,\n  attachStacktrace,\n) {\n  const syntheticException = (hint && hint.syntheticException) || undefined;\n  const event = eventFromString(stackParser, message, syntheticException, attachStacktrace);\n  event.level = level;\n  if (hint && hint.event_id) {\n    event.event_id = hint.event_id;\n  }\n  return resolvedSyncPromise(event);\n}\n\n/**\n * @hidden\n */\nfunction eventFromUnknownInput(\n  stackParser,\n  exception,\n  syntheticException,\n  attachStacktrace,\n  isUnhandledRejection,\n) {\n  let event;\n\n  if (isErrorEvent(exception ) && (exception ).error) {\n    // If it is an ErrorEvent with `error` property, extract it to get actual Error\n    const errorEvent = exception ;\n    return eventFromError(stackParser, errorEvent.error );\n  }\n\n  // If it is a `DOMError` (which is a legacy API, but still supported in some browsers) then we just extract the name\n  // and message, as it doesn't provide anything else. According to the spec, all `DOMExceptions` should also be\n  // `Error`s, but that's not the case in IE11, so in that case we treat it the same as we do a `DOMError`.\n  //\n  // https://developer.mozilla.org/en-US/docs/Web/API/DOMError\n  // https://developer.mozilla.org/en-US/docs/Web/API/DOMException\n  // https://webidl.spec.whatwg.org/#es-DOMException-specialness\n  if (isDOMError(exception ) || isDOMException(exception )) {\n    const domException = exception ;\n\n    if ('stack' in (exception )) {\n      event = eventFromError(stackParser, exception );\n    } else {\n      const name = domException.name || (isDOMError(domException) ? 'DOMError' : 'DOMException');\n      const message = domException.message ? `${name}: ${domException.message}` : name;\n      event = eventFromString(stackParser, message, syntheticException, attachStacktrace);\n      addExceptionTypeValue(event, message);\n    }\n    if ('code' in domException) {\n      event.tags = { ...event.tags, 'DOMException.code': `${domException.code}` };\n    }\n\n    return event;\n  }\n  if (isError(exception)) {\n    // we have a real Error object, do nothing\n    return eventFromError(stackParser, exception);\n  }\n  if (isPlainObject(exception) || isEvent(exception)) {\n    // If it's a plain object or an instance of `Event` (the built-in JS kind, not this SDK's `Event` type), serialize\n    // it manually. This will allow us to group events based on top-level keys which is much better than creating a new\n    // group on any key/value change.\n    const objectException = exception ;\n    event = eventFromPlainObject(stackParser, objectException, syntheticException, isUnhandledRejection);\n    addExceptionMechanism(event, {\n      synthetic: true,\n    });\n    return event;\n  }\n\n  // If none of previous checks were valid, then it means that it's not:\n  // - an instance of DOMError\n  // - an instance of DOMException\n  // - an instance of Event\n  // - an instance of Error\n  // - a valid ErrorEvent (one with an error property)\n  // - a plain Object\n  //\n  // So bail out and capture it as a simple message:\n  event = eventFromString(stackParser, exception , syntheticException, attachStacktrace);\n  addExceptionTypeValue(event, `${exception}`, undefined);\n  addExceptionMechanism(event, {\n    synthetic: true,\n  });\n\n  return event;\n}\n\n/**\n * @hidden\n */\nfunction eventFromString(\n  stackParser,\n  input,\n  syntheticException,\n  attachStacktrace,\n) {\n  const event = {\n    message: input,\n  };\n\n  if (attachStacktrace && syntheticException) {\n    const frames = parseStackFrames(stackParser, syntheticException);\n    if (frames.length) {\n      event.exception = {\n        values: [{ value: input, stacktrace: { frames } }],\n      };\n    }\n  }\n\n  return event;\n}\n\nexport { eventFromError, eventFromException, eventFromMessage, eventFromPlainObject, eventFromString, eventFromUnknownInput, exceptionFromError, parseStackFrames };\n//# sourceMappingURL=eventbuilder.js.map\n","import { getCurrentHub } from './hub.js';\n\n// Note: All functions in this file are typed with a return value of `ReturnType<Hub[HUB_FUNCTION]>`,\n// where HUB_FUNCTION is some method on the Hub class.\n//\n// This is done to make sure the top level SDK methods stay in sync with the hub methods.\n// Although every method here has an explicit return type, some of them (that map to void returns) do not\n// contain `return` keywords. This is done to save on bundle size, as `return` is not minifiable.\n\n/**\n * Captures an exception event and sends it to Sentry.\n *\n * @param exception An exception-like object.\n * @param captureContext Additional scope data to apply to exception event.\n * @returns The generated eventId.\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/explicit-module-boundary-types\nfunction captureException(exception, captureContext) {\n  return getCurrentHub().captureException(exception, { captureContext });\n}\n\n/**\n * Captures a message event and sends it to Sentry.\n *\n * @param message The message to send to Sentry.\n * @param Severity Define the level of the message.\n * @returns The generated eventId.\n */\nfunction captureMessage(\n  message,\n  // eslint-disable-next-line deprecation/deprecation\n  captureContext,\n) {\n  // This is necessary to provide explicit scopes upgrade, without changing the original\n  // arity of the `captureMessage(message, level)` method.\n  const level = typeof captureContext === 'string' ? captureContext : undefined;\n  const context = typeof captureContext !== 'string' ? { captureContext } : undefined;\n  return getCurrentHub().captureMessage(message, level, context);\n}\n\n/**\n * Captures a manually created event and sends it to Sentry.\n *\n * @param event The event to send to Sentry.\n * @returns The generated eventId.\n */\nfunction captureEvent(event, hint) {\n  return getCurrentHub().captureEvent(event, hint);\n}\n\n/**\n * Callback to set context information onto the scope.\n * @param callback Callback function that receives Scope.\n */\nfunction configureScope(callback) {\n  getCurrentHub().configureScope(callback);\n}\n\n/**\n * Records a new breadcrumb which will be attached to future events.\n *\n * Breadcrumbs will be added to subsequent events to provide more context on\n * user's actions prior to an error or crash.\n *\n * @param breadcrumb The breadcrumb to record.\n */\nfunction addBreadcrumb(breadcrumb) {\n  getCurrentHub().addBreadcrumb(breadcrumb);\n}\n\n/**\n * Sets context data with the given name.\n * @param name of the context\n * @param context Any kind of data. This data will be normalized.\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction setContext(name, context) {\n  getCurrentHub().setContext(name, context);\n}\n\n/**\n * Set an object that will be merged sent as extra data with the event.\n * @param extras Extras object to merge into current context.\n */\nfunction setExtras(extras) {\n  getCurrentHub().setExtras(extras);\n}\n\n/**\n * Set key:value that will be sent as extra data with the event.\n * @param key String of extra\n * @param extra Any kind of data. This data will be normalized.\n */\nfunction setExtra(key, extra) {\n  getCurrentHub().setExtra(key, extra);\n}\n\n/**\n * Set an object that will be merged sent as tags data with the event.\n * @param tags Tags context object to merge into current context.\n */\nfunction setTags(tags) {\n  getCurrentHub().setTags(tags);\n}\n\n/**\n * Set key:value that will be sent as tags data with the event.\n *\n * Can also be used to unset a tag, by passing `undefined`.\n *\n * @param key String key of tag\n * @param value Value of tag\n */\nfunction setTag(key, value) {\n  getCurrentHub().setTag(key, value);\n}\n\n/**\n * Updates user context information for future events.\n *\n * @param user User context object to be set in the current context. Pass `null` to unset the user.\n */\nfunction setUser(user) {\n  getCurrentHub().setUser(user);\n}\n\n/**\n * Creates a new scope with and executes the given operation within.\n * The scope is automatically removed once the operation\n * finishes or throws.\n *\n * This is essentially a convenience function for:\n *\n *     pushScope();\n *     callback();\n *     popScope();\n *\n * @param callback that will be enclosed into push/popScope.\n */\nfunction withScope(callback) {\n  getCurrentHub().withScope(callback);\n}\n\n/**\n * Starts a new `Transaction` and returns it. This is the entry point to manual tracing instrumentation.\n *\n * A tree structure can be built by adding child spans to the transaction, and child spans to other spans. To start a\n * new child span within the transaction or any span, call the respective `.startChild()` method.\n *\n * Every child span must be finished before the transaction is finished, otherwise the unfinished spans are discarded.\n *\n * The transaction must be finished with a call to its `.finish()` method, at which point the transaction with all its\n * finished child spans will be sent to Sentry.\n *\n * NOTE: This function should only be used for *manual* instrumentation. Auto-instrumentation should call\n * `startTransaction` directly on the hub.\n *\n * @param context Properties of the new `Transaction`.\n * @param customSamplingContext Information given to the transaction sampling function (along with context-dependent\n * default values). See {@link Options.tracesSampler}.\n *\n * @returns The transaction which was just started\n */\nfunction startTransaction(\n  context,\n  customSamplingContext,\n) {\n  return getCurrentHub().startTransaction({ ...context }, customSamplingContext);\n}\n\nexport { addBreadcrumb, captureEvent, captureException, captureMessage, configureScope, setContext, setExtra, setExtras, setTag, setTags, setUser, startTransaction, withScope };\n//# sourceMappingURL=exports.js.map\n","import { withScope, captureException } from '@sentry/core';\nimport { GLOBAL_OBJ, getOriginalFunction, markFunctionWrapped, addNonEnumerableProperty, addExceptionTypeValue, addExceptionMechanism } from '@sentry/utils';\n\nconst WINDOW = GLOBAL_OBJ ;\n\nlet ignoreOnError = 0;\n\n/**\n * @hidden\n */\nfunction shouldIgnoreOnError() {\n  return ignoreOnError > 0;\n}\n\n/**\n * @hidden\n */\nfunction ignoreNextOnError() {\n  // onerror should trigger before setTimeout\n  ignoreOnError++;\n  setTimeout(() => {\n    ignoreOnError--;\n  });\n}\n\n/**\n * Instruments the given function and sends an event to Sentry every time the\n * function throws an exception.\n *\n * @param fn A function to wrap. It is generally safe to pass an unbound function, because the returned wrapper always\n * has a correct `this` context.\n * @returns The wrapped function.\n * @hidden\n */\nfunction wrap(\n  fn,\n  options\n\n = {},\n  before,\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n) {\n  // for future readers what this does is wrap a function and then create\n  // a bi-directional wrapping between them.\n  //\n  // example: wrapped = wrap(original);\n  //  original.__sentry_wrapped__ -> wrapped\n  //  wrapped.__sentry_original__ -> original\n\n  if (typeof fn !== 'function') {\n    return fn;\n  }\n\n  try {\n    // if we're dealing with a function that was previously wrapped, return\n    // the original wrapper.\n    const wrapper = fn.__sentry_wrapped__;\n    if (wrapper) {\n      return wrapper;\n    }\n\n    // We don't wanna wrap it twice\n    if (getOriginalFunction(fn)) {\n      return fn;\n    }\n  } catch (e) {\n    // Just accessing custom props in some Selenium environments\n    // can cause a \"Permission denied\" exception (see raven-js#495).\n    // Bail on wrapping and return the function as-is (defers to window.onerror).\n    return fn;\n  }\n\n  /* eslint-disable prefer-rest-params */\n  // It is important that `sentryWrapped` is not an arrow function to preserve the context of `this`\n  const sentryWrapped = function () {\n    const args = Array.prototype.slice.call(arguments);\n\n    try {\n      if (before && typeof before === 'function') {\n        before.apply(this, arguments);\n      }\n\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/no-unsafe-member-access\n      const wrappedArguments = args.map((arg) => wrap(arg, options));\n\n      // Attempt to invoke user-land function\n      // NOTE: If you are a Sentry user, and you are seeing this stack frame, it\n      //       means the sentry.javascript SDK caught an error invoking your application code. This\n      //       is expected behavior and NOT indicative of a bug with sentry.javascript.\n      return fn.apply(this, wrappedArguments);\n    } catch (ex) {\n      ignoreNextOnError();\n\n      withScope((scope) => {\n        scope.addEventProcessor((event) => {\n          if (options.mechanism) {\n            addExceptionTypeValue(event, undefined, undefined);\n            addExceptionMechanism(event, options.mechanism);\n          }\n\n          event.extra = {\n            ...event.extra,\n            arguments: args,\n          };\n\n          return event;\n        });\n\n        captureException(ex);\n      });\n\n      throw ex;\n    }\n  };\n  /* eslint-enable prefer-rest-params */\n\n  // Accessing some objects may throw\n  // ref: https://github.com/getsentry/sentry-javascript/issues/1168\n  try {\n    for (const property in fn) {\n      if (Object.prototype.hasOwnProperty.call(fn, property)) {\n        sentryWrapped[property] = fn[property];\n      }\n    }\n  } catch (_oO) {} // eslint-disable-line no-empty\n\n  // Signal that this function has been wrapped/filled already\n  // for both debugging and to prevent it to being wrapped/filled twice\n  markFunctionWrapped(sentryWrapped, fn);\n\n  addNonEnumerableProperty(fn, '__sentry_wrapped__', sentryWrapped);\n\n  // Restore original function name (not all browsers allow that)\n  try {\n    const descriptor = Object.getOwnPropertyDescriptor(sentryWrapped, 'name') ;\n    if (descriptor.configurable) {\n      Object.defineProperty(sentryWrapped, 'name', {\n        get() {\n          return fn.name;\n        },\n      });\n    }\n    // eslint-disable-next-line no-empty\n  } catch (_oO) {}\n\n  return sentryWrapped;\n}\n\n/**\n * All properties the report dialog supports\n */\n\nexport { WINDOW, ignoreNextOnError, shouldIgnoreOnError, wrap };\n//# sourceMappingURL=helpers.js.map\n","// Note: Ideally the `SeverityLevel` type would be derived from `validSeverityLevels`, but that would mean either\n//\n// a) moving `validSeverityLevels` to `@sentry/types`,\n// b) moving the`SeverityLevel` type here, or\n// c) importing `validSeverityLevels` from here into `@sentry/types`.\n//\n// Option A would make `@sentry/types` a runtime dependency of `@sentry/utils` (not good), and options B and C would\n// create a circular dependency between `@sentry/types` and `@sentry/utils` (also not good). So a TODO accompanying the\n// type, reminding anyone who changes it to change this list also, will have to do.\n\nconst validSeverityLevels = ['fatal', 'error', 'warning', 'log', 'info', 'debug'];\n\n/**\n * Converts a string-based level into a member of the deprecated {@link Severity} enum.\n *\n * @deprecated `severityFromString` is deprecated. Please use `severityLevelFromString` instead.\n *\n * @param level String representation of Severity\n * @returns Severity\n */\nfunction severityFromString(level) {\n  return severityLevelFromString(level) ;\n}\n\n/**\n * Converts a string-based level into a `SeverityLevel`, normalizing it along the way.\n *\n * @param level String representation of desired `SeverityLevel`.\n * @returns The `SeverityLevel` corresponding to the given string, or 'log' if the string isn't a valid level.\n */\nfunction severityLevelFromString(level) {\n  return (level === 'warn' ? 'warning' : validSeverityLevels.includes(level) ? level : 'log') ;\n}\n\nexport { severityFromString, severityLevelFromString, validSeverityLevels };\n//# sourceMappingURL=severity.js.map\n","/**\n * Parses string form of URL into an object\n * // borrowed from https://tools.ietf.org/html/rfc3986#appendix-B\n * // intentionally using regex and not <a/> href parsing trick because React Native and other\n * // environments where DOM might not be available\n * @returns parsed URL object\n */\nfunction parseUrl(url) {\n  if (!url) {\n    return {};\n  }\n\n  const match = url.match(/^(([^:/?#]+):)?(\\/\\/([^/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?$/);\n\n  if (!match) {\n    return {};\n  }\n\n  // coerce to undefined values to empty string so we don't get 'undefined'\n  const query = match[6] || '';\n  const fragment = match[8] || '';\n  return {\n    host: match[4],\n    path: match[5],\n    protocol: match[2],\n    search: query,\n    hash: fragment,\n    relative: match[5] + query + fragment, // everything minus origin\n  };\n}\n\n/**\n * Strip the query string and fragment off of a given URL or path (if present)\n *\n * @param urlPath Full URL or path, including possible query string and/or fragment\n * @returns URL or path without query string or fragment\n */\nfunction stripUrlQueryAndFragment(urlPath) {\n  // eslint-disable-next-line no-useless-escape\n  return urlPath.split(/[\\?#]/, 1)[0];\n}\n\n/**\n * Returns number of URL segments of a passed string URL.\n */\nfunction getNumberOfUrlSegments(url) {\n  // split at '/' or at '\\/' to split regex urls correctly\n  return url.split(/\\\\?\\//).filter(s => s.length > 0 && s !== ',').length;\n}\n\n/**\n * Takes a URL object and returns a sanitized string which is safe to use as span description\n * see: https://develop.sentry.dev/sdk/data-handling/#structuring-data\n */\nfunction getSanitizedUrlString(url) {\n  const { protocol, host, path } = url;\n\n  const filteredHost =\n    (host &&\n      host\n        // Always filter out authority\n        .replace(/^.*@/, '[filtered]:[filtered]@')\n        // Don't show standard :80 (http) and :443 (https) ports to reduce the noise\n        .replace(':80', '')\n        .replace(':443', '')) ||\n    '';\n\n  return `${protocol ? `${protocol}://` : ''}${filteredHost}${path}`;\n}\n\nexport { getNumberOfUrlSegments, getSanitizedUrlString, parseUrl, stripUrlQueryAndFragment };\n//# sourceMappingURL=url.js.map\n","import { getCurrentHub } from '@sentry/core';\nimport { addInstrumentationHandler, getEventDescription, severityLevelFromString, safeJoin, SENTRY_XHR_DATA_KEY, parseUrl, logger, htmlTreeAsString } from '@sentry/utils';\nimport { WINDOW } from '../helpers.js';\n\n/* eslint-disable @typescript-eslint/no-unsafe-member-access */\n\n/** maxStringLength gets capped to prevent 100 breadcrumbs exceeding 1MB event payload size */\nconst MAX_ALLOWED_STRING_LENGTH = 1024;\n\nconst BREADCRUMB_INTEGRATION_ID = 'Breadcrumbs';\n\n/**\n * Default Breadcrumbs instrumentations\n * TODO: Deprecated - with v6, this will be renamed to `Instrument`\n */\nclass Breadcrumbs  {\n  /**\n   * @inheritDoc\n   */\n   static __initStatic() {this.id = BREADCRUMB_INTEGRATION_ID;}\n\n  /**\n   * @inheritDoc\n   */\n   __init() {this.name = Breadcrumbs.id;}\n\n  /**\n   * Options of the breadcrumbs integration.\n   */\n  // This field is public, because we use it in the browser client to check if the `sentry` option is enabled.\n\n  /**\n   * @inheritDoc\n   */\n   constructor(options) {Breadcrumbs.prototype.__init.call(this);\n    this.options = {\n      console: true,\n      dom: true,\n      fetch: true,\n      history: true,\n      sentry: true,\n      xhr: true,\n      ...options,\n    };\n  }\n\n  /**\n   * Instrument browser built-ins w/ breadcrumb capturing\n   *  - Console API\n   *  - DOM API (click/typing)\n   *  - XMLHttpRequest API\n   *  - Fetch API\n   *  - History API\n   */\n   setupOnce() {\n    if (this.options.console) {\n      addInstrumentationHandler('console', _consoleBreadcrumb);\n    }\n    if (this.options.dom) {\n      addInstrumentationHandler('dom', _domBreadcrumb(this.options.dom));\n    }\n    if (this.options.xhr) {\n      addInstrumentationHandler('xhr', _xhrBreadcrumb);\n    }\n    if (this.options.fetch) {\n      addInstrumentationHandler('fetch', _fetchBreadcrumb);\n    }\n    if (this.options.history) {\n      addInstrumentationHandler('history', _historyBreadcrumb);\n    }\n  }\n\n  /**\n   * Adds a breadcrumb for Sentry events or transactions if this option is enabled.\n   */\n   addSentryBreadcrumb(event) {\n    if (this.options.sentry) {\n      getCurrentHub().addBreadcrumb(\n        {\n          category: `sentry.${event.type === 'transaction' ? 'transaction' : 'event'}`,\n          event_id: event.event_id,\n          level: event.level,\n          message: getEventDescription(event),\n        },\n        {\n          event,\n        },\n      );\n    }\n  }\n} Breadcrumbs.__initStatic();\n\n/**\n * A HOC that creaes a function that creates breadcrumbs from DOM API calls.\n * This is a HOC so that we get access to dom options in the closure.\n */\nfunction _domBreadcrumb(dom) {\n  function _innerDomBreadcrumb(handlerData) {\n    let target;\n    let keyAttrs = typeof dom === 'object' ? dom.serializeAttribute : undefined;\n\n    let maxStringLength =\n      typeof dom === 'object' && typeof dom.maxStringLength === 'number' ? dom.maxStringLength : undefined;\n    if (maxStringLength && maxStringLength > MAX_ALLOWED_STRING_LENGTH) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n        logger.warn(\n          `\\`dom.maxStringLength\\` cannot exceed ${MAX_ALLOWED_STRING_LENGTH}, but a value of ${maxStringLength} was configured. Sentry will use ${MAX_ALLOWED_STRING_LENGTH} instead.`,\n        );\n      maxStringLength = MAX_ALLOWED_STRING_LENGTH;\n    }\n\n    if (typeof keyAttrs === 'string') {\n      keyAttrs = [keyAttrs];\n    }\n\n    // Accessing event.target can throw (see getsentry/raven-js#838, #768)\n    try {\n      const event = handlerData.event ;\n      target = _isEvent(event)\n        ? htmlTreeAsString(event.target, { keyAttrs, maxStringLength })\n        : htmlTreeAsString(event, { keyAttrs, maxStringLength });\n    } catch (e) {\n      target = '<unknown>';\n    }\n\n    if (target.length === 0) {\n      return;\n    }\n\n    getCurrentHub().addBreadcrumb(\n      {\n        category: `ui.${handlerData.name}`,\n        message: target,\n      },\n      {\n        event: handlerData.event,\n        name: handlerData.name,\n        global: handlerData.global,\n      },\n    );\n  }\n\n  return _innerDomBreadcrumb;\n}\n\n/**\n * Creates breadcrumbs from console API calls\n */\nfunction _consoleBreadcrumb(handlerData) {\n  // This is a hack to fix a Vue3-specific bug that causes an infinite loop of\n  // console warnings. This happens when a Vue template is rendered with\n  // an undeclared variable, which we try to stringify, ultimately causing\n  // Vue to issue another warning which repeats indefinitely.\n  // see: https://github.com/getsentry/sentry-javascript/pull/6010\n  // see: https://github.com/getsentry/sentry-javascript/issues/5916\n  for (let i = 0; i < handlerData.args.length; i++) {\n    if (handlerData.args[i] === 'ref=Ref<') {\n      handlerData.args[i + 1] = 'viewRef';\n      break;\n    }\n  }\n  const breadcrumb = {\n    category: 'console',\n    data: {\n      arguments: handlerData.args,\n      logger: 'console',\n    },\n    level: severityLevelFromString(handlerData.level),\n    message: safeJoin(handlerData.args, ' '),\n  };\n\n  if (handlerData.level === 'assert') {\n    if (handlerData.args[0] === false) {\n      breadcrumb.message = `Assertion failed: ${safeJoin(handlerData.args.slice(1), ' ') || 'console.assert'}`;\n      breadcrumb.data.arguments = handlerData.args.slice(1);\n    } else {\n      // Don't capture a breadcrumb for passed assertions\n      return;\n    }\n  }\n\n  getCurrentHub().addBreadcrumb(breadcrumb, {\n    input: handlerData.args,\n    level: handlerData.level,\n  });\n}\n\n/**\n * Creates breadcrumbs from XHR API calls\n */\nfunction _xhrBreadcrumb(handlerData) {\n  const { startTimestamp, endTimestamp } = handlerData;\n\n  const sentryXhrData = handlerData.xhr[SENTRY_XHR_DATA_KEY];\n\n  // We only capture complete, non-sentry requests\n  if (!startTimestamp || !endTimestamp || !sentryXhrData) {\n    return;\n  }\n\n  const { method, url, status_code, body } = sentryXhrData;\n\n  const data = {\n    method,\n    url,\n    status_code,\n  };\n\n  const hint = {\n    xhr: handlerData.xhr,\n    input: body,\n    startTimestamp,\n    endTimestamp,\n  };\n\n  getCurrentHub().addBreadcrumb(\n    {\n      category: 'xhr',\n      data,\n      type: 'http',\n    },\n    hint,\n  );\n}\n\n/**\n * Creates breadcrumbs from fetch API calls\n */\nfunction _fetchBreadcrumb(handlerData) {\n  const { startTimestamp, endTimestamp } = handlerData;\n\n  // We only capture complete fetch requests\n  if (!endTimestamp) {\n    return;\n  }\n\n  if (handlerData.fetchData.url.match(/sentry_key/) && handlerData.fetchData.method === 'POST') {\n    // We will not create breadcrumbs for fetch requests that contain `sentry_key` (internal sentry requests)\n    return;\n  }\n\n  if (handlerData.error) {\n    const data = handlerData.fetchData;\n    const hint = {\n      data: handlerData.error,\n      input: handlerData.args,\n      startTimestamp,\n      endTimestamp,\n    };\n\n    getCurrentHub().addBreadcrumb(\n      {\n        category: 'fetch',\n        data,\n        level: 'error',\n        type: 'http',\n      },\n      hint,\n    );\n  } else {\n    const data = {\n      ...handlerData.fetchData,\n      status_code: handlerData.response && handlerData.response.status,\n    };\n    const hint = {\n      input: handlerData.args,\n      response: handlerData.response,\n      startTimestamp,\n      endTimestamp,\n    };\n    getCurrentHub().addBreadcrumb(\n      {\n        category: 'fetch',\n        data,\n        type: 'http',\n      },\n      hint,\n    );\n  }\n}\n\n/**\n * Creates breadcrumbs from history API calls\n */\nfunction _historyBreadcrumb(handlerData) {\n  let from = handlerData.from;\n  let to = handlerData.to;\n  const parsedLoc = parseUrl(WINDOW.location.href);\n  let parsedFrom = parseUrl(from);\n  const parsedTo = parseUrl(to);\n\n  // Initial pushState doesn't provide `from` information\n  if (!parsedFrom.path) {\n    parsedFrom = parsedLoc;\n  }\n\n  // Use only the path component of the URL if the URL matches the current\n  // document (almost all the time when using pushState)\n  if (parsedLoc.protocol === parsedTo.protocol && parsedLoc.host === parsedTo.host) {\n    to = parsedTo.relative;\n  }\n  if (parsedLoc.protocol === parsedFrom.protocol && parsedLoc.host === parsedFrom.host) {\n    from = parsedFrom.relative;\n  }\n\n  getCurrentHub().addBreadcrumb({\n    category: 'navigation',\n    data: {\n      from,\n      to,\n    },\n  });\n}\n\nfunction _isEvent(event) {\n  return event && !!(event ).target;\n}\n\nexport { BREADCRUMB_INTEGRATION_ID, Breadcrumbs };\n//# sourceMappingURL=breadcrumbs.js.map\n","import { BaseClient, SDK_VERSION } from '@sentry/core';\nimport { getSDKSource, logger, createClientReportEnvelope, dsnToString } from '@sentry/utils';\nimport { eventFromException, eventFromMessage } from './eventbuilder.js';\nimport { WINDOW } from './helpers.js';\nimport { BREADCRUMB_INTEGRATION_ID } from './integrations/breadcrumbs.js';\nimport { createUserFeedbackEnvelope } from './userfeedback.js';\n\n/**\n * Configuration options for the Sentry Browser SDK.\n * @see @sentry/types Options for more information.\n */\n\n/**\n * The Sentry Browser SDK Client.\n *\n * @see BrowserOptions for documentation on configuration options.\n * @see SentryClient for usage documentation.\n */\nclass BrowserClient extends BaseClient {\n  /**\n   * Creates a new Browser SDK instance.\n   *\n   * @param options Configuration options for this SDK.\n   */\n   constructor(options) {\n    const sdkSource = WINDOW.SENTRY_SDK_SOURCE || getSDKSource();\n\n    options._metadata = options._metadata || {};\n    options._metadata.sdk = options._metadata.sdk || {\n      name: 'sentry.javascript.browser',\n      packages: [\n        {\n          name: `${sdkSource}:@sentry/browser`,\n          version: SDK_VERSION,\n        },\n      ],\n      version: SDK_VERSION,\n    };\n\n    super(options);\n\n    if (options.sendClientReports && WINDOW.document) {\n      WINDOW.document.addEventListener('visibilitychange', () => {\n        if (WINDOW.document.visibilityState === 'hidden') {\n          this._flushOutcomes();\n        }\n      });\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n   eventFromException(exception, hint) {\n    return eventFromException(this._options.stackParser, exception, hint, this._options.attachStacktrace);\n  }\n\n  /**\n   * @inheritDoc\n   */\n   eventFromMessage(\n    message,\n    // eslint-disable-next-line deprecation/deprecation\n    level = 'info',\n    hint,\n  ) {\n    return eventFromMessage(this._options.stackParser, message, level, hint, this._options.attachStacktrace);\n  }\n\n  /**\n   * @inheritDoc\n   */\n   sendEvent(event, hint) {\n    // We only want to add the sentry event breadcrumb when the user has the breadcrumb integration installed and\n    // activated its `sentry` option.\n    // We also do not want to use the `Breadcrumbs` class here directly, because we do not want it to be included in\n    // bundles, if it is not used by the SDK.\n    // This all sadly is a bit ugly, but we currently don't have a \"pre-send\" hook on the integrations so we do it this\n    // way for now.\n    const breadcrumbIntegration = this.getIntegrationById(BREADCRUMB_INTEGRATION_ID) ;\n    // We check for definedness of `addSentryBreadcrumb` in case users provided their own integration with id\n    // \"Breadcrumbs\" that does not have this function.\n    if (breadcrumbIntegration && breadcrumbIntegration.addSentryBreadcrumb) {\n      breadcrumbIntegration.addSentryBreadcrumb(event);\n    }\n\n    super.sendEvent(event, hint);\n  }\n\n  /**\n   * Sends user feedback to Sentry.\n   */\n   captureUserFeedback(feedback) {\n    if (!this._isEnabled()) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.warn('SDK not enabled, will not capture user feedback.');\n      return;\n    }\n\n    const envelope = createUserFeedbackEnvelope(feedback, {\n      metadata: this.getSdkMetadata(),\n      dsn: this.getDsn(),\n      tunnel: this.getOptions().tunnel,\n    });\n    void this._sendEnvelope(envelope);\n  }\n\n  /**\n   * @inheritDoc\n   */\n   _prepareEvent(event, hint, scope) {\n    event.platform = event.platform || 'javascript';\n    return super._prepareEvent(event, hint, scope);\n  }\n\n  /**\n   * Sends client reports as an envelope.\n   */\n   _flushOutcomes() {\n    const outcomes = this._clearOutcomes();\n\n    if (outcomes.length === 0) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.log('No outcomes to send');\n      return;\n    }\n\n    if (!this._dsn) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.log('No dsn provided, will not send outcomes');\n      return;\n    }\n\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.log('Sending outcomes:', outcomes);\n\n    const envelope = createClientReportEnvelope(outcomes, this._options.tunnel && dsnToString(this._dsn));\n    void this._sendEnvelope(envelope);\n  }\n}\n\nexport { BrowserClient };\n//# sourceMappingURL=client.js.map\n","import { dsnToString, createEnvelope } from '@sentry/utils';\n\n/**\n * Creates an envelope from a user feedback.\n */\nfunction createUserFeedbackEnvelope(\n  feedback,\n  {\n    metadata,\n    tunnel,\n    dsn,\n  }\n\n,\n) {\n  const headers = {\n    event_id: feedback.event_id,\n    sent_at: new Date().toISOString(),\n    ...(metadata &&\n      metadata.sdk && {\n        sdk: {\n          name: metadata.sdk.name,\n          version: metadata.sdk.version,\n        },\n      }),\n    ...(!!tunnel && !!dsn && { dsn: dsnToString(dsn) }),\n  };\n  const item = createUserFeedbackEnvelopeItem(feedback);\n\n  return createEnvelope(headers, [item]);\n}\n\nfunction createUserFeedbackEnvelopeItem(feedback) {\n  const feedbackHeaders = {\n    type: 'user_report',\n  };\n  return [feedbackHeaders, feedback];\n}\n\nexport { createUserFeedbackEnvelope };\n//# sourceMappingURL=userfeedback.js.map\n","import { createEnvelope } from './envelope.js';\nimport { dateTimestampInSeconds } from './time.js';\n\n/**\n * Creates client report envelope\n * @param discarded_events An array of discard events\n * @param dsn A DSN that can be set on the header. Optional.\n */\nfunction createClientReportEnvelope(\n  discarded_events,\n  dsn,\n  timestamp,\n) {\n  const clientReportItem = [\n    { type: 'client_report' },\n    {\n      timestamp: timestamp || dateTimestampInSeconds(),\n      discarded_events,\n    },\n  ];\n  return createEnvelope(dsn ? { dsn } : {}, [clientReportItem]);\n}\n\nexport { createClientReportEnvelope };\n//# sourceMappingURL=clientreport.js.map\n","import { getCurrentHub } from '@sentry/core';\nimport { addInstrumentationHandler, isString, isPrimitive, isErrorEvent, getLocationHref, logger, addExceptionMechanism } from '@sentry/utils';\nimport { eventFromUnknownInput } from '../eventbuilder.js';\nimport { shouldIgnoreOnError } from '../helpers.js';\n\n/* eslint-disable @typescript-eslint/no-unsafe-member-access */\n\n/** Global handlers */\nclass GlobalHandlers  {\n  /**\n   * @inheritDoc\n   */\n   static __initStatic() {this.id = 'GlobalHandlers';}\n\n  /**\n   * @inheritDoc\n   */\n   __init() {this.name = GlobalHandlers.id;}\n\n  /** JSDoc */\n\n  /**\n   * Stores references functions to installing handlers. Will set to undefined\n   * after they have been run so that they are not used twice.\n   */\n   __init2() {this._installFunc = {\n    onerror: _installGlobalOnErrorHandler,\n    onunhandledrejection: _installGlobalOnUnhandledRejectionHandler,\n  };}\n\n  /** JSDoc */\n   constructor(options) {GlobalHandlers.prototype.__init.call(this);GlobalHandlers.prototype.__init2.call(this);\n    this._options = {\n      onerror: true,\n      onunhandledrejection: true,\n      ...options,\n    };\n  }\n  /**\n   * @inheritDoc\n   */\n   setupOnce() {\n    Error.stackTraceLimit = 50;\n    const options = this._options;\n\n    // We can disable guard-for-in as we construct the options object above + do checks against\n    // `this._installFunc` for the property.\n    // eslint-disable-next-line guard-for-in\n    for (const key in options) {\n      const installFunc = this._installFunc[key ];\n      if (installFunc && options[key ]) {\n        globalHandlerLog(key);\n        installFunc();\n        this._installFunc[key ] = undefined;\n      }\n    }\n  }\n} GlobalHandlers.__initStatic();\n\n/** JSDoc */\nfunction _installGlobalOnErrorHandler() {\n  addInstrumentationHandler(\n    'error',\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    (data) => {\n      const [hub, stackParser, attachStacktrace] = getHubAndOptions();\n      if (!hub.getIntegration(GlobalHandlers)) {\n        return;\n      }\n      const { msg, url, line, column, error } = data;\n      if (shouldIgnoreOnError() || (error && error.__sentry_own_request__)) {\n        return;\n      }\n\n      const event =\n        error === undefined && isString(msg)\n          ? _eventFromIncompleteOnError(msg, url, line, column)\n          : _enhanceEventWithInitialFrame(\n              eventFromUnknownInput(stackParser, error || msg, undefined, attachStacktrace, false),\n              url,\n              line,\n              column,\n            );\n\n      event.level = 'error';\n\n      addMechanismAndCapture(hub, error, event, 'onerror');\n    },\n  );\n}\n\n/** JSDoc */\nfunction _installGlobalOnUnhandledRejectionHandler() {\n  addInstrumentationHandler(\n    'unhandledrejection',\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    (e) => {\n      const [hub, stackParser, attachStacktrace] = getHubAndOptions();\n      if (!hub.getIntegration(GlobalHandlers)) {\n        return;\n      }\n      let error = e;\n\n      // dig the object of the rejection out of known event types\n      try {\n        // PromiseRejectionEvents store the object of the rejection under 'reason'\n        // see https://developer.mozilla.org/en-US/docs/Web/API/PromiseRejectionEvent\n        if ('reason' in e) {\n          error = e.reason;\n        }\n        // something, somewhere, (likely a browser extension) effectively casts PromiseRejectionEvents\n        // to CustomEvents, moving the `promise` and `reason` attributes of the PRE into\n        // the CustomEvent's `detail` attribute, since they're not part of CustomEvent's spec\n        // see https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent and\n        // https://github.com/getsentry/sentry-javascript/issues/2380\n        else if ('detail' in e && 'reason' in e.detail) {\n          error = e.detail.reason;\n        }\n      } catch (_oO) {\n        // no-empty\n      }\n\n      if (shouldIgnoreOnError() || (error && error.__sentry_own_request__)) {\n        return true;\n      }\n\n      const event = isPrimitive(error)\n        ? _eventFromRejectionWithPrimitive(error)\n        : eventFromUnknownInput(stackParser, error, undefined, attachStacktrace, true);\n\n      event.level = 'error';\n\n      addMechanismAndCapture(hub, error, event, 'onunhandledrejection');\n      return;\n    },\n  );\n}\n\n/**\n * Create an event from a promise rejection where the `reason` is a primitive.\n *\n * @param reason: The `reason` property of the promise rejection\n * @returns An Event object with an appropriate `exception` value\n */\nfunction _eventFromRejectionWithPrimitive(reason) {\n  return {\n    exception: {\n      values: [\n        {\n          type: 'UnhandledRejection',\n          // String() is needed because the Primitive type includes symbols (which can't be automatically stringified)\n          value: `Non-Error promise rejection captured with value: ${String(reason)}`,\n        },\n      ],\n    },\n  };\n}\n\n/**\n * This function creates a stack from an old, error-less onerror handler.\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction _eventFromIncompleteOnError(msg, url, line, column) {\n  const ERROR_TYPES_RE =\n    /^(?:[Uu]ncaught (?:exception: )?)?(?:((?:Eval|Internal|Range|Reference|Syntax|Type|URI|)Error): )?(.*)$/i;\n\n  // If 'message' is ErrorEvent, get real message from inside\n  let message = isErrorEvent(msg) ? msg.message : msg;\n  let name = 'Error';\n\n  const groups = message.match(ERROR_TYPES_RE);\n  if (groups) {\n    name = groups[1];\n    message = groups[2];\n  }\n\n  const event = {\n    exception: {\n      values: [\n        {\n          type: name,\n          value: message,\n        },\n      ],\n    },\n  };\n\n  return _enhanceEventWithInitialFrame(event, url, line, column);\n}\n\n/** JSDoc */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction _enhanceEventWithInitialFrame(event, url, line, column) {\n  // event.exception\n  const e = (event.exception = event.exception || {});\n  // event.exception.values\n  const ev = (e.values = e.values || []);\n  // event.exception.values[0]\n  const ev0 = (ev[0] = ev[0] || {});\n  // event.exception.values[0].stacktrace\n  const ev0s = (ev0.stacktrace = ev0.stacktrace || {});\n  // event.exception.values[0].stacktrace.frames\n  const ev0sf = (ev0s.frames = ev0s.frames || []);\n\n  const colno = isNaN(parseInt(column, 10)) ? undefined : column;\n  const lineno = isNaN(parseInt(line, 10)) ? undefined : line;\n  const filename = isString(url) && url.length > 0 ? url : getLocationHref();\n\n  // event.exception.values[0].stacktrace.frames\n  if (ev0sf.length === 0) {\n    ev0sf.push({\n      colno,\n      filename,\n      function: '?',\n      in_app: true,\n      lineno,\n    });\n  }\n\n  return event;\n}\n\nfunction globalHandlerLog(type) {\n  (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.log(`Global Handler attached: ${type}`);\n}\n\nfunction addMechanismAndCapture(hub, error, event, type) {\n  addExceptionMechanism(event, {\n    handled: false,\n    type,\n  });\n  hub.captureEvent(event, {\n    originalException: error,\n  });\n}\n\nfunction getHubAndOptions() {\n  const hub = getCurrentHub();\n  const client = hub.getClient();\n  const options = (client && client.getOptions()) || {\n    stackParser: () => [],\n    attachStacktrace: false,\n  };\n  return [hub, options.stackParser, options.attachStacktrace];\n}\n\nexport { GlobalHandlers };\n//# sourceMappingURL=globalhandlers.js.map\n","import { fill, getFunctionName, getOriginalFunction } from '@sentry/utils';\nimport { WINDOW, wrap } from '../helpers.js';\n\nconst DEFAULT_EVENT_TARGET = [\n  'EventTarget',\n  'Window',\n  'Node',\n  'ApplicationCache',\n  'AudioTrackList',\n  'ChannelMergerNode',\n  'CryptoOperation',\n  'EventSource',\n  'FileReader',\n  'HTMLUnknownElement',\n  'IDBDatabase',\n  'IDBRequest',\n  'IDBTransaction',\n  'KeyOperation',\n  'MediaController',\n  'MessagePort',\n  'ModalWindow',\n  'Notification',\n  'SVGElementInstance',\n  'Screen',\n  'TextTrack',\n  'TextTrackCue',\n  'TextTrackList',\n  'WebSocket',\n  'WebSocketWorker',\n  'Worker',\n  'XMLHttpRequest',\n  'XMLHttpRequestEventTarget',\n  'XMLHttpRequestUpload',\n];\n\n/** Wrap timer functions and event targets to catch errors and provide better meta data */\nclass TryCatch  {\n  /**\n   * @inheritDoc\n   */\n   static __initStatic() {this.id = 'TryCatch';}\n\n  /**\n   * @inheritDoc\n   */\n   __init() {this.name = TryCatch.id;}\n\n  /** JSDoc */\n\n  /**\n   * @inheritDoc\n   */\n   constructor(options) {TryCatch.prototype.__init.call(this);\n    this._options = {\n      XMLHttpRequest: true,\n      eventTarget: true,\n      requestAnimationFrame: true,\n      setInterval: true,\n      setTimeout: true,\n      ...options,\n    };\n  }\n\n  /**\n   * Wrap timer functions and event targets to catch errors\n   * and provide better metadata.\n   */\n   setupOnce() {\n    if (this._options.setTimeout) {\n      fill(WINDOW, 'setTimeout', _wrapTimeFunction);\n    }\n\n    if (this._options.setInterval) {\n      fill(WINDOW, 'setInterval', _wrapTimeFunction);\n    }\n\n    if (this._options.requestAnimationFrame) {\n      fill(WINDOW, 'requestAnimationFrame', _wrapRAF);\n    }\n\n    if (this._options.XMLHttpRequest && 'XMLHttpRequest' in WINDOW) {\n      fill(XMLHttpRequest.prototype, 'send', _wrapXHR);\n    }\n\n    const eventTargetOption = this._options.eventTarget;\n    if (eventTargetOption) {\n      const eventTarget = Array.isArray(eventTargetOption) ? eventTargetOption : DEFAULT_EVENT_TARGET;\n      eventTarget.forEach(_wrapEventTarget);\n    }\n  }\n} TryCatch.__initStatic();\n\n/** JSDoc */\nfunction _wrapTimeFunction(original) {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  return function ( ...args) {\n    const originalCallback = args[0];\n    args[0] = wrap(originalCallback, {\n      mechanism: {\n        data: { function: getFunctionName(original) },\n        handled: true,\n        type: 'instrument',\n      },\n    });\n    return original.apply(this, args);\n  };\n}\n\n/** JSDoc */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction _wrapRAF(original) {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  return function ( callback) {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n    return original.apply(this, [\n      wrap(callback, {\n        mechanism: {\n          data: {\n            function: 'requestAnimationFrame',\n            handler: getFunctionName(original),\n          },\n          handled: true,\n          type: 'instrument',\n        },\n      }),\n    ]);\n  };\n}\n\n/** JSDoc */\nfunction _wrapXHR(originalSend) {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  return function ( ...args) {\n    // eslint-disable-next-line @typescript-eslint/no-this-alias\n    const xhr = this;\n    const xmlHttpRequestProps = ['onload', 'onerror', 'onprogress', 'onreadystatechange'];\n\n    xmlHttpRequestProps.forEach(prop => {\n      if (prop in xhr && typeof xhr[prop] === 'function') {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        fill(xhr, prop, function (original) {\n          const wrapOptions = {\n            mechanism: {\n              data: {\n                function: prop,\n                handler: getFunctionName(original),\n              },\n              handled: true,\n              type: 'instrument',\n            },\n          };\n\n          // If Instrument integration has been called before TryCatch, get the name of original function\n          const originalFunction = getOriginalFunction(original);\n          if (originalFunction) {\n            wrapOptions.mechanism.data.handler = getFunctionName(originalFunction);\n          }\n\n          // Otherwise wrap directly\n          return wrap(original, wrapOptions);\n        });\n      }\n    });\n\n    return originalSend.apply(this, args);\n  };\n}\n\n/** JSDoc */\nfunction _wrapEventTarget(target) {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const globalObject = WINDOW ;\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n  const proto = globalObject[target] && globalObject[target].prototype;\n\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, no-prototype-builtins\n  if (!proto || !proto.hasOwnProperty || !proto.hasOwnProperty('addEventListener')) {\n    return;\n  }\n\n  fill(proto, 'addEventListener', function (original)\n\n {\n    return function (\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n      eventName,\n      fn,\n      options,\n    ) {\n      try {\n        if (typeof fn.handleEvent === 'function') {\n          // ESlint disable explanation:\n          //  First, it is generally safe to call `wrap` with an unbound function. Furthermore, using `.bind()` would\n          //  introduce a bug here, because bind returns a new function that doesn't have our\n          //  flags(like __sentry_original__) attached. `wrap` checks for those flags to avoid unnecessary wrapping.\n          //  Without those flags, every call to addEventListener wraps the function again, causing a memory leak.\n          // eslint-disable-next-line @typescript-eslint/unbound-method\n          fn.handleEvent = wrap(fn.handleEvent, {\n            mechanism: {\n              data: {\n                function: 'handleEvent',\n                handler: getFunctionName(fn),\n                target,\n              },\n              handled: true,\n              type: 'instrument',\n            },\n          });\n        }\n      } catch (err) {\n        // can sometimes get 'Permission denied to access property \"handle Event'\n      }\n\n      return original.apply(this, [\n        eventName,\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        wrap(fn , {\n          mechanism: {\n            data: {\n              function: 'addEventListener',\n              handler: getFunctionName(fn),\n              target,\n            },\n            handled: true,\n            type: 'instrument',\n          },\n        }),\n        options,\n      ]);\n    };\n  });\n\n  fill(\n    proto,\n    'removeEventListener',\n    function (\n      originalRemoveEventListener,\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    ) {\n      return function (\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n        eventName,\n        fn,\n        options,\n      ) {\n        /**\n         * There are 2 possible scenarios here:\n         *\n         * 1. Someone passes a callback, which was attached prior to Sentry initialization, or by using unmodified\n         * method, eg. `document.addEventListener.call(el, name, handler). In this case, we treat this function\n         * as a pass-through, and call original `removeEventListener` with it.\n         *\n         * 2. Someone passes a callback, which was attached after Sentry was initialized, which means that it was using\n         * our wrapped version of `addEventListener`, which internally calls `wrap` helper.\n         * This helper \"wraps\" whole callback inside a try/catch statement, and attached appropriate metadata to it,\n         * in order for us to make a distinction between wrapped/non-wrapped functions possible.\n         * If a function was wrapped, it has additional property of `__sentry_wrapped__`, holding the handler.\n         *\n         * When someone adds a handler prior to initialization, and then do it again, but after,\n         * then we have to detach both of them. Otherwise, if we'd detach only wrapped one, it'd be impossible\n         * to get rid of the initial handler and it'd stick there forever.\n         */\n        const wrappedEventHandler = fn ;\n        try {\n          const originalEventHandler = wrappedEventHandler && wrappedEventHandler.__sentry_wrapped__;\n          if (originalEventHandler) {\n            originalRemoveEventListener.call(this, eventName, originalEventHandler, options);\n          }\n        } catch (e) {\n          // ignore, accessing __sentry_wrapped__ will throw in some Selenium environments\n        }\n        return originalRemoveEventListener.call(this, eventName, wrappedEventHandler, options);\n      };\n    },\n  );\n}\n\nexport { TryCatch };\n//# sourceMappingURL=trycatch.js.map\n","import { getCurrentHub, addGlobalEventProcessor } from '@sentry/core';\nimport { isInstanceOf } from '@sentry/utils';\nimport { exceptionFromError } from '../eventbuilder.js';\n\nconst DEFAULT_KEY = 'cause';\nconst DEFAULT_LIMIT = 5;\n\n/** Adds SDK info to an event. */\nclass LinkedErrors  {\n  /**\n   * @inheritDoc\n   */\n   static __initStatic() {this.id = 'LinkedErrors';}\n\n  /**\n   * @inheritDoc\n   */\n    __init() {this.name = LinkedErrors.id;}\n\n  /**\n   * @inheritDoc\n   */\n\n  /**\n   * @inheritDoc\n   */\n\n  /**\n   * @inheritDoc\n   */\n   constructor(options = {}) {LinkedErrors.prototype.__init.call(this);\n    this._key = options.key || DEFAULT_KEY;\n    this._limit = options.limit || DEFAULT_LIMIT;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setupOnce() {\n    const client = getCurrentHub().getClient();\n    if (!client) {\n      return;\n    }\n    addGlobalEventProcessor((event, hint) => {\n      const self = getCurrentHub().getIntegration(LinkedErrors);\n      return self ? _handler(client.getOptions().stackParser, self._key, self._limit, event, hint) : event;\n    });\n  }\n} LinkedErrors.__initStatic();\n\n/**\n * @inheritDoc\n */\nfunction _handler(\n  parser,\n  key,\n  limit,\n  event,\n  hint,\n) {\n  if (!event.exception || !event.exception.values || !hint || !isInstanceOf(hint.originalException, Error)) {\n    return event;\n  }\n  const linkedErrors = _walkErrorTree(parser, limit, hint.originalException , key);\n  event.exception.values = [...linkedErrors, ...event.exception.values];\n  return event;\n}\n\n/**\n * JSDOC\n */\nfunction _walkErrorTree(\n  parser,\n  limit,\n  error,\n  key,\n  stack = [],\n) {\n  if (!isInstanceOf(error[key], Error) || stack.length + 1 >= limit) {\n    return stack;\n  }\n  const exception = exceptionFromError(parser, error[key]);\n  return _walkErrorTree(parser, limit, error[key], key, [exception, ...stack]);\n}\n\nexport { LinkedErrors, _handler, _walkErrorTree };\n//# sourceMappingURL=linkederrors.js.map\n","import { addGlobalEventProcessor, getCurrentHub } from '@sentry/core';\nimport { WINDOW } from '../helpers.js';\n\n/** HttpContext integration collects information about HTTP request headers */\nclass HttpContext  {constructor() { HttpContext.prototype.__init.call(this); }\n  /**\n   * @inheritDoc\n   */\n   static __initStatic() {this.id = 'HttpContext';}\n\n  /**\n   * @inheritDoc\n   */\n   __init() {this.name = HttpContext.id;}\n\n  /**\n   * @inheritDoc\n   */\n   setupOnce() {\n    addGlobalEventProcessor((event) => {\n      if (getCurrentHub().getIntegration(HttpContext)) {\n        // if none of the information we want exists, don't bother\n        if (!WINDOW.navigator && !WINDOW.location && !WINDOW.document) {\n          return event;\n        }\n\n        // grab as much info as exists and add it to the event\n        const url = (event.request && event.request.url) || (WINDOW.location && WINDOW.location.href);\n        const { referrer } = WINDOW.document || {};\n        const { userAgent } = WINDOW.navigator || {};\n\n        const headers = {\n          ...(event.request && event.request.headers),\n          ...(referrer && { Referer: referrer }),\n          ...(userAgent && { 'User-Agent': userAgent }),\n        };\n        const request = { ...event.request, ...(url && { url }), headers };\n\n        return { ...event, request };\n      }\n      return event;\n    });\n  }\n} HttpContext.__initStatic();\n\nexport { HttpContext };\n//# sourceMappingURL=httpcontext.js.map\n","import { logger } from '@sentry/utils';\n\n/** Deduplication filter */\nclass Dedupe  {constructor() { Dedupe.prototype.__init.call(this); }\n  /**\n   * @inheritDoc\n   */\n   static __initStatic() {this.id = 'Dedupe';}\n\n  /**\n   * @inheritDoc\n   */\n   __init() {this.name = Dedupe.id;}\n\n  /**\n   * @inheritDoc\n   */\n\n  /**\n   * @inheritDoc\n   */\n   setupOnce(addGlobalEventProcessor, getCurrentHub) {\n    const eventProcessor = currentEvent => {\n      // We want to ignore any non-error type events, e.g. transactions or replays\n      // These should never be deduped, and also not be compared against as _previousEvent.\n      if (currentEvent.type) {\n        return currentEvent;\n      }\n\n      const self = getCurrentHub().getIntegration(Dedupe);\n      if (self) {\n        // Juuust in case something goes wrong\n        try {\n          if (_shouldDropEvent(currentEvent, self._previousEvent)) {\n            (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.warn('Event dropped due to being a duplicate of previously captured event.');\n            return null;\n          }\n        } catch (_oO) {\n          return (self._previousEvent = currentEvent);\n        }\n\n        return (self._previousEvent = currentEvent);\n      }\n      return currentEvent;\n    };\n\n    eventProcessor.id = this.name;\n    addGlobalEventProcessor(eventProcessor);\n  }\n} Dedupe.__initStatic();\n\n/** JSDoc */\nfunction _shouldDropEvent(currentEvent, previousEvent) {\n  if (!previousEvent) {\n    return false;\n  }\n\n  if (_isSameMessageEvent(currentEvent, previousEvent)) {\n    return true;\n  }\n\n  if (_isSameExceptionEvent(currentEvent, previousEvent)) {\n    return true;\n  }\n\n  return false;\n}\n\n/** JSDoc */\nfunction _isSameMessageEvent(currentEvent, previousEvent) {\n  const currentMessage = currentEvent.message;\n  const previousMessage = previousEvent.message;\n\n  // If neither event has a message property, they were both exceptions, so bail out\n  if (!currentMessage && !previousMessage) {\n    return false;\n  }\n\n  // If only one event has a stacktrace, but not the other one, they are not the same\n  if ((currentMessage && !previousMessage) || (!currentMessage && previousMessage)) {\n    return false;\n  }\n\n  if (currentMessage !== previousMessage) {\n    return false;\n  }\n\n  if (!_isSameFingerprint(currentEvent, previousEvent)) {\n    return false;\n  }\n\n  if (!_isSameStacktrace(currentEvent, previousEvent)) {\n    return false;\n  }\n\n  return true;\n}\n\n/** JSDoc */\nfunction _isSameExceptionEvent(currentEvent, previousEvent) {\n  const previousException = _getExceptionFromEvent(previousEvent);\n  const currentException = _getExceptionFromEvent(currentEvent);\n\n  if (!previousException || !currentException) {\n    return false;\n  }\n\n  if (previousException.type !== currentException.type || previousException.value !== currentException.value) {\n    return false;\n  }\n\n  if (!_isSameFingerprint(currentEvent, previousEvent)) {\n    return false;\n  }\n\n  if (!_isSameStacktrace(currentEvent, previousEvent)) {\n    return false;\n  }\n\n  return true;\n}\n\n/** JSDoc */\nfunction _isSameStacktrace(currentEvent, previousEvent) {\n  let currentFrames = _getFramesFromEvent(currentEvent);\n  let previousFrames = _getFramesFromEvent(previousEvent);\n\n  // If neither event has a stacktrace, they are assumed to be the same\n  if (!currentFrames && !previousFrames) {\n    return true;\n  }\n\n  // If only one event has a stacktrace, but not the other one, they are not the same\n  if ((currentFrames && !previousFrames) || (!currentFrames && previousFrames)) {\n    return false;\n  }\n\n  currentFrames = currentFrames ;\n  previousFrames = previousFrames ;\n\n  // If number of frames differ, they are not the same\n  if (previousFrames.length !== currentFrames.length) {\n    return false;\n  }\n\n  // Otherwise, compare the two\n  for (let i = 0; i < previousFrames.length; i++) {\n    const frameA = previousFrames[i];\n    const frameB = currentFrames[i];\n\n    if (\n      frameA.filename !== frameB.filename ||\n      frameA.lineno !== frameB.lineno ||\n      frameA.colno !== frameB.colno ||\n      frameA.function !== frameB.function\n    ) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n/** JSDoc */\nfunction _isSameFingerprint(currentEvent, previousEvent) {\n  let currentFingerprint = currentEvent.fingerprint;\n  let previousFingerprint = previousEvent.fingerprint;\n\n  // If neither event has a fingerprint, they are assumed to be the same\n  if (!currentFingerprint && !previousFingerprint) {\n    return true;\n  }\n\n  // If only one event has a fingerprint, but not the other one, they are not the same\n  if ((currentFingerprint && !previousFingerprint) || (!currentFingerprint && previousFingerprint)) {\n    return false;\n  }\n\n  currentFingerprint = currentFingerprint ;\n  previousFingerprint = previousFingerprint ;\n\n  // Otherwise, compare the two\n  try {\n    return !!(currentFingerprint.join('') === previousFingerprint.join(''));\n  } catch (_oO) {\n    return false;\n  }\n}\n\n/** JSDoc */\nfunction _getExceptionFromEvent(event) {\n  return event.exception && event.exception.values && event.exception.values[0];\n}\n\n/** JSDoc */\nfunction _getFramesFromEvent(event) {\n  const exception = event.exception;\n\n  if (exception) {\n    try {\n      // @ts-ignore Object could be undefined\n      return exception.values[0].stacktrace.frames;\n    } catch (_oO) {\n      return undefined;\n    }\n  }\n  return undefined;\n}\n\nexport { Dedupe };\n//# sourceMappingURL=dedupe.js.map\n","import { createStackParser } from '@sentry/utils';\n\n// global reference to slice\nconst UNKNOWN_FUNCTION = '?';\n\nconst OPERA10_PRIORITY = 10;\nconst OPERA11_PRIORITY = 20;\nconst CHROME_PRIORITY = 30;\nconst WINJS_PRIORITY = 40;\nconst GECKO_PRIORITY = 50;\n\nfunction createFrame(filename, func, lineno, colno) {\n  const frame = {\n    filename,\n    function: func,\n    in_app: true, // All browser frames are considered in_app\n  };\n\n  if (lineno !== undefined) {\n    frame.lineno = lineno;\n  }\n\n  if (colno !== undefined) {\n    frame.colno = colno;\n  }\n\n  return frame;\n}\n\n// Chromium based browsers: Chrome, Brave, new Opera, new Edge\nconst chromeRegex =\n  /^\\s*at (?:(.+?\\)(?: \\[.+\\])?|.*?) ?\\((?:address at )?)?(?:async )?((?:<anonymous>|[-a-z]+:|.*bundle|\\/)?.*?)(?::(\\d+))?(?::(\\d+))?\\)?\\s*$/i;\nconst chromeEvalRegex = /\\((\\S*)(?::(\\d+))(?::(\\d+))\\)/;\n\nconst chrome = line => {\n  const parts = chromeRegex.exec(line);\n\n  if (parts) {\n    const isEval = parts[2] && parts[2].indexOf('eval') === 0; // start of line\n\n    if (isEval) {\n      const subMatch = chromeEvalRegex.exec(parts[2]);\n\n      if (subMatch) {\n        // throw out eval line/column and use top-most line/column number\n        parts[2] = subMatch[1]; // url\n        parts[3] = subMatch[2]; // line\n        parts[4] = subMatch[3]; // column\n      }\n    }\n\n    // Kamil: One more hack won't hurt us right? Understanding and adding more rules on top of these regexps right now\n    // would be way too time consuming. (TODO: Rewrite whole RegExp to be more readable)\n    const [func, filename] = extractSafariExtensionDetails(parts[1] || UNKNOWN_FUNCTION, parts[2]);\n\n    return createFrame(filename, func, parts[3] ? +parts[3] : undefined, parts[4] ? +parts[4] : undefined);\n  }\n\n  return;\n};\n\nconst chromeStackLineParser = [CHROME_PRIORITY, chrome];\n\n// gecko regex: `(?:bundle|\\d+\\.js)`: `bundle` is for react native, `\\d+\\.js` also but specifically for ram bundles because it\n// generates filenames without a prefix like `file://` the filenames in the stacktrace are just 42.js\n// We need this specific case for now because we want no other regex to match.\nconst geckoREgex =\n  /^\\s*(.*?)(?:\\((.*?)\\))?(?:^|@)?((?:[-a-z]+)?:\\/.*?|\\[native code\\]|[^@]*(?:bundle|\\d+\\.js)|\\/[\\w\\-. /=]+)(?::(\\d+))?(?::(\\d+))?\\s*$/i;\nconst geckoEvalRegex = /(\\S+) line (\\d+)(?: > eval line \\d+)* > eval/i;\n\nconst gecko = line => {\n  const parts = geckoREgex.exec(line);\n\n  if (parts) {\n    const isEval = parts[3] && parts[3].indexOf(' > eval') > -1;\n    if (isEval) {\n      const subMatch = geckoEvalRegex.exec(parts[3]);\n\n      if (subMatch) {\n        // throw out eval line/column and use top-most line number\n        parts[1] = parts[1] || 'eval';\n        parts[3] = subMatch[1];\n        parts[4] = subMatch[2];\n        parts[5] = ''; // no column when eval\n      }\n    }\n\n    let filename = parts[3];\n    let func = parts[1] || UNKNOWN_FUNCTION;\n    [func, filename] = extractSafariExtensionDetails(func, filename);\n\n    return createFrame(filename, func, parts[4] ? +parts[4] : undefined, parts[5] ? +parts[5] : undefined);\n  }\n\n  return;\n};\n\nconst geckoStackLineParser = [GECKO_PRIORITY, gecko];\n\nconst winjsRegex = /^\\s*at (?:((?:\\[object object\\])?.+) )?\\(?((?:[-a-z]+):.*?):(\\d+)(?::(\\d+))?\\)?\\s*$/i;\n\nconst winjs = line => {\n  const parts = winjsRegex.exec(line);\n\n  return parts\n    ? createFrame(parts[2], parts[1] || UNKNOWN_FUNCTION, +parts[3], parts[4] ? +parts[4] : undefined)\n    : undefined;\n};\n\nconst winjsStackLineParser = [WINJS_PRIORITY, winjs];\n\nconst opera10Regex = / line (\\d+).*script (?:in )?(\\S+)(?:: in function (\\S+))?$/i;\n\nconst opera10 = line => {\n  const parts = opera10Regex.exec(line);\n  return parts ? createFrame(parts[2], parts[3] || UNKNOWN_FUNCTION, +parts[1]) : undefined;\n};\n\nconst opera10StackLineParser = [OPERA10_PRIORITY, opera10];\n\nconst opera11Regex =\n  / line (\\d+), column (\\d+)\\s*(?:in (?:<anonymous function: ([^>]+)>|([^)]+))\\(.*\\))? in (.*):\\s*$/i;\n\nconst opera11 = line => {\n  const parts = opera11Regex.exec(line);\n  return parts ? createFrame(parts[5], parts[3] || parts[4] || UNKNOWN_FUNCTION, +parts[1], +parts[2]) : undefined;\n};\n\nconst opera11StackLineParser = [OPERA11_PRIORITY, opera11];\n\nconst defaultStackLineParsers = [chromeStackLineParser, geckoStackLineParser, winjsStackLineParser];\n\nconst defaultStackParser = createStackParser(...defaultStackLineParsers);\n\n/**\n * Safari web extensions, starting version unknown, can produce \"frames-only\" stacktraces.\n * What it means, is that instead of format like:\n *\n * Error: wat\n *   at function@url:row:col\n *   at function@url:row:col\n *   at function@url:row:col\n *\n * it produces something like:\n *\n *   function@url:row:col\n *   function@url:row:col\n *   function@url:row:col\n *\n * Because of that, it won't be captured by `chrome` RegExp and will fall into `Gecko` branch.\n * This function is extracted so that we can use it in both places without duplicating the logic.\n * Unfortunately \"just\" changing RegExp is too complicated now and making it pass all tests\n * and fix this case seems like an impossible, or at least way too time-consuming task.\n */\nconst extractSafariExtensionDetails = (func, filename) => {\n  const isSafariExtension = func.indexOf('safari-extension') !== -1;\n  const isSafariWebExtension = func.indexOf('safari-web-extension') !== -1;\n\n  return isSafariExtension || isSafariWebExtension\n    ? [\n        func.indexOf('@') !== -1 ? func.split('@')[0] : UNKNOWN_FUNCTION,\n        isSafariExtension ? `safari-extension:${filename}` : `safari-web-extension:${filename}`,\n      ]\n    : [func, filename];\n};\n\nexport { chromeStackLineParser, defaultStackLineParsers, defaultStackParser, geckoStackLineParser, opera10StackLineParser, opera11StackLineParser, winjsStackLineParser };\n//# sourceMappingURL=stack-parsers.js.map\n","import { makePromiseBuffer, forEachEnvelopeItem, envelopeItemTypeToDataCategory, isRateLimited, resolvedSyncPromise, createEnvelope, SentryError, logger, serializeEnvelope, updateRateLimits } from '@sentry/utils';\n\nconst DEFAULT_TRANSPORT_BUFFER_SIZE = 30;\n\n/**\n * Creates an instance of a Sentry `Transport`\n *\n * @param options\n * @param makeRequest\n */\nfunction createTransport(\n  options,\n  makeRequest,\n  buffer = makePromiseBuffer(\n    options.bufferSize || DEFAULT_TRANSPORT_BUFFER_SIZE,\n  ),\n) {\n  let rateLimits = {};\n  const flush = (timeout) => buffer.drain(timeout);\n\n  function send(envelope) {\n    const filteredEnvelopeItems = [];\n\n    // Drop rate limited items from envelope\n    forEachEnvelopeItem(envelope, (item, type) => {\n      const envelopeItemDataCategory = envelopeItemTypeToDataCategory(type);\n      if (isRateLimited(rateLimits, envelopeItemDataCategory)) {\n        const event = getEventForEnvelopeItem(item, type);\n        options.recordDroppedEvent('ratelimit_backoff', envelopeItemDataCategory, event);\n      } else {\n        filteredEnvelopeItems.push(item);\n      }\n    });\n\n    // Skip sending if envelope is empty after filtering out rate limited events\n    if (filteredEnvelopeItems.length === 0) {\n      return resolvedSyncPromise();\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const filteredEnvelope = createEnvelope(envelope[0], filteredEnvelopeItems );\n\n    // Creates client report for each item in an envelope\n    const recordEnvelopeLoss = (reason) => {\n      forEachEnvelopeItem(filteredEnvelope, (item, type) => {\n        const event = getEventForEnvelopeItem(item, type);\n        options.recordDroppedEvent(reason, envelopeItemTypeToDataCategory(type), event);\n      });\n    };\n\n    const requestTask = () =>\n      makeRequest({ body: serializeEnvelope(filteredEnvelope, options.textEncoder) }).then(\n        response => {\n          // We don't want to throw on NOK responses, but we want to at least log them\n          if (response.statusCode !== undefined && (response.statusCode < 200 || response.statusCode >= 300)) {\n            (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.warn(`Sentry responded with status code ${response.statusCode} to sent event.`);\n          }\n\n          rateLimits = updateRateLimits(rateLimits, response);\n          return response;\n        },\n        error => {\n          recordEnvelopeLoss('network_error');\n          throw error;\n        },\n      );\n\n    return buffer.add(requestTask).then(\n      result => result,\n      error => {\n        if (error instanceof SentryError) {\n          (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.error('Skipped sending event because buffer is full.');\n          recordEnvelopeLoss('queue_overflow');\n          return resolvedSyncPromise();\n        } else {\n          throw error;\n        }\n      },\n    );\n  }\n\n  // We use this to identifify if the transport is the base transport\n  // TODO (v8): Remove this again as we'll no longer need it\n  send.__sentry__baseTransport__ = true;\n\n  return {\n    send,\n    flush,\n  };\n}\n\nfunction getEventForEnvelopeItem(item, type) {\n  if (type !== 'event' && type !== 'transaction') {\n    return undefined;\n  }\n\n  return Array.isArray(item) ? (item )[1] : undefined;\n}\n\nexport { DEFAULT_TRANSPORT_BUFFER_SIZE, createTransport };\n//# sourceMappingURL=base.js.map\n","import { SentryError } from './error.js';\nimport { rejectedSyncPromise, SyncPromise, resolvedSyncPromise } from './syncpromise.js';\n\n/**\n * Creates an new PromiseBuffer object with the specified limit\n * @param limit max number of promises that can be stored in the buffer\n */\nfunction makePromiseBuffer(limit) {\n  const buffer = [];\n\n  function isReady() {\n    return limit === undefined || buffer.length < limit;\n  }\n\n  /**\n   * Remove a promise from the queue.\n   *\n   * @param task Can be any PromiseLike<T>\n   * @returns Removed promise.\n   */\n  function remove(task) {\n    return buffer.splice(buffer.indexOf(task), 1)[0];\n  }\n\n  /**\n   * Add a promise (representing an in-flight action) to the queue, and set it to remove itself on fulfillment.\n   *\n   * @param taskProducer A function producing any PromiseLike<T>; In previous versions this used to be `task:\n   *        PromiseLike<T>`, but under that model, Promises were instantly created on the call-site and their executor\n   *        functions therefore ran immediately. Thus, even if the buffer was full, the action still happened. By\n   *        requiring the promise to be wrapped in a function, we can defer promise creation until after the buffer\n   *        limit check.\n   * @returns The original promise.\n   */\n  function add(taskProducer) {\n    if (!isReady()) {\n      return rejectedSyncPromise(new SentryError('Not adding Promise because buffer limit was reached.'));\n    }\n\n    // start the task and add its promise to the queue\n    const task = taskProducer();\n    if (buffer.indexOf(task) === -1) {\n      buffer.push(task);\n    }\n    void task\n      .then(() => remove(task))\n      // Use `then(null, rejectionHandler)` rather than `catch(rejectionHandler)` so that we can use `PromiseLike`\n      // rather than `Promise`. `PromiseLike` doesn't have a `.catch` method, making its polyfill smaller. (ES5 didn't\n      // have promises, so TS has to polyfill when down-compiling.)\n      .then(null, () =>\n        remove(task).then(null, () => {\n          // We have to add another catch here because `remove()` starts a new promise chain.\n        }),\n      );\n    return task;\n  }\n\n  /**\n   * Wait for all promises in the queue to resolve or for timeout to expire, whichever comes first.\n   *\n   * @param timeout The time, in ms, after which to resolve to `false` if the queue is still non-empty. Passing `0` (or\n   * not passing anything) will make the promise wait as long as it takes for the queue to drain before resolving to\n   * `true`.\n   * @returns A promise which will resolve to `true` if the queue is already empty or drains before the timeout, and\n   * `false` otherwise\n   */\n  function drain(timeout) {\n    return new SyncPromise((resolve, reject) => {\n      let counter = buffer.length;\n\n      if (!counter) {\n        return resolve(true);\n      }\n\n      // wait for `timeout` ms and then resolve to `false` (if not cancelled first)\n      const capturedSetTimeout = setTimeout(() => {\n        if (timeout && timeout > 0) {\n          resolve(false);\n        }\n      }, timeout);\n\n      // if all promises resolve in time, cancel the timer and resolve to `true`\n      buffer.forEach(item => {\n        void resolvedSyncPromise(item).then(() => {\n          if (!--counter) {\n            clearTimeout(capturedSetTimeout);\n            resolve(true);\n          }\n        }, reject);\n      });\n    });\n  }\n\n  return {\n    $: buffer,\n    add,\n    drain,\n  };\n}\n\nexport { makePromiseBuffer };\n//# sourceMappingURL=promisebuffer.js.map\n","// Intentionally keeping the key broad, as we don't know for sure what rate limit headers get returned from backend\n\nconst DEFAULT_RETRY_AFTER = 60 * 1000; // 60 seconds\n\n/**\n * Extracts Retry-After value from the request header or returns default value\n * @param header string representation of 'Retry-After' header\n * @param now current unix timestamp\n *\n */\nfunction parseRetryAfterHeader(header, now = Date.now()) {\n  const headerDelay = parseInt(`${header}`, 10);\n  if (!isNaN(headerDelay)) {\n    return headerDelay * 1000;\n  }\n\n  const headerDate = Date.parse(`${header}`);\n  if (!isNaN(headerDate)) {\n    return headerDate - now;\n  }\n\n  return DEFAULT_RETRY_AFTER;\n}\n\n/**\n * Gets the time that the given category is disabled until for rate limiting.\n * In case no category-specific limit is set but a general rate limit across all categories is active,\n * that time is returned.\n *\n * @return the time in ms that the category is disabled until or 0 if there's no active rate limit.\n */\nfunction disabledUntil(limits, category) {\n  return limits[category] || limits.all || 0;\n}\n\n/**\n * Checks if a category is rate limited\n */\nfunction isRateLimited(limits, category, now = Date.now()) {\n  return disabledUntil(limits, category) > now;\n}\n\n/**\n * Update ratelimits from incoming headers.\n *\n * @return the updated RateLimits object.\n */\nfunction updateRateLimits(\n  limits,\n  { statusCode, headers },\n  now = Date.now(),\n) {\n  const updatedRateLimits = {\n    ...limits,\n  };\n\n  // \"The name is case-insensitive.\"\n  // https://developer.mozilla.org/en-US/docs/Web/API/Headers/get\n  const rateLimitHeader = headers && headers['x-sentry-rate-limits'];\n  const retryAfterHeader = headers && headers['retry-after'];\n\n  if (rateLimitHeader) {\n    /**\n     * rate limit headers are of the form\n     *     <header>,<header>,..\n     * where each <header> is of the form\n     *     <retry_after>: <categories>: <scope>: <reason_code>\n     * where\n     *     <retry_after> is a delay in seconds\n     *     <categories> is the event type(s) (error, transaction, etc) being rate limited and is of the form\n     *         <category>;<category>;...\n     *     <scope> is what's being limited (org, project, or key) - ignored by SDK\n     *     <reason_code> is an arbitrary string like \"org_quota\" - ignored by SDK\n     */\n    for (const limit of rateLimitHeader.trim().split(',')) {\n      const [retryAfter, categories] = limit.split(':', 2);\n      const headerDelay = parseInt(retryAfter, 10);\n      const delay = (!isNaN(headerDelay) ? headerDelay : 60) * 1000; // 60sec default\n      if (!categories) {\n        updatedRateLimits.all = now + delay;\n      } else {\n        for (const category of categories.split(';')) {\n          updatedRateLimits[category] = now + delay;\n        }\n      }\n    }\n  } else if (retryAfterHeader) {\n    updatedRateLimits.all = now + parseRetryAfterHeader(retryAfterHeader, now);\n  } else if (statusCode === 429) {\n    updatedRateLimits.all = now + 60 * 1000;\n  }\n\n  return updatedRateLimits;\n}\n\nexport { DEFAULT_RETRY_AFTER, disabledUntil, isRateLimited, parseRetryAfterHeader, updateRateLimits };\n//# sourceMappingURL=ratelimit.js.map\n","import { isNativeFetch, logger } from '@sentry/utils';\nimport { WINDOW } from '../helpers.js';\n\nlet cachedFetchImpl = undefined;\n\n/**\n * A special usecase for incorrectly wrapped Fetch APIs in conjunction with ad-blockers.\n * Whenever someone wraps the Fetch API and returns the wrong promise chain,\n * this chain becomes orphaned and there is no possible way to capture it's rejections\n * other than allowing it bubble up to this very handler. eg.\n *\n * const f = window.fetch;\n * window.fetch = function () {\n *   const p = f.apply(this, arguments);\n *\n *   p.then(function() {\n *     console.log('hi.');\n *   });\n *\n *   return p;\n * }\n *\n * `p.then(function () { ... })` is producing a completely separate promise chain,\n * however, what's returned is `p` - the result of original `fetch` call.\n *\n * This mean, that whenever we use the Fetch API to send our own requests, _and_\n * some ad-blocker blocks it, this orphaned chain will _always_ reject,\n * effectively causing another event to be captured.\n * This makes a whole process become an infinite loop, which we need to somehow\n * deal with, and break it in one way or another.\n *\n * To deal with this issue, we are making sure that we _always_ use the real\n * browser Fetch API, instead of relying on what `window.fetch` exposes.\n * The only downside to this would be missing our own requests as breadcrumbs,\n * but because we are already not doing this, it should be just fine.\n *\n * Possible failed fetch error messages per-browser:\n *\n * Chrome:  Failed to fetch\n * Edge:    Failed to Fetch\n * Firefox: NetworkError when attempting to fetch resource\n * Safari:  resource blocked by content blocker\n */\nfunction getNativeFetchImplementation() {\n  if (cachedFetchImpl) {\n    return cachedFetchImpl;\n  }\n\n  /* eslint-disable @typescript-eslint/unbound-method */\n\n  // Fast path to avoid DOM I/O\n  if (isNativeFetch(WINDOW.fetch)) {\n    return (cachedFetchImpl = WINDOW.fetch.bind(WINDOW));\n  }\n\n  const document = WINDOW.document;\n  let fetchImpl = WINDOW.fetch;\n  // eslint-disable-next-line deprecation/deprecation\n  if (document && typeof document.createElement === 'function') {\n    try {\n      const sandbox = document.createElement('iframe');\n      sandbox.hidden = true;\n      document.head.appendChild(sandbox);\n      const contentWindow = sandbox.contentWindow;\n      if (contentWindow && contentWindow.fetch) {\n        fetchImpl = contentWindow.fetch;\n      }\n      document.head.removeChild(sandbox);\n    } catch (e) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n        logger.warn('Could not create sandbox iframe for pure fetch check, bailing to window.fetch: ', e);\n    }\n  }\n\n  return (cachedFetchImpl = fetchImpl.bind(WINDOW));\n  /* eslint-enable @typescript-eslint/unbound-method */\n}\n\n/** Clears cached fetch impl */\nfunction clearCachedFetchImplementation() {\n  cachedFetchImpl = undefined;\n}\n\nexport { clearCachedFetchImplementation, getNativeFetchImplementation };\n//# sourceMappingURL=utils.js.map\n","import { createTransport } from '@sentry/core';\nimport { rejectedSyncPromise } from '@sentry/utils';\nimport { getNativeFetchImplementation, clearCachedFetchImplementation } from './utils.js';\n\n/**\n * Creates a Transport that uses the Fetch API to send events to Sentry.\n */\nfunction makeFetchTransport(\n  options,\n  nativeFetch = getNativeFetchImplementation(),\n) {\n  let pendingBodySize = 0;\n  let pendingCount = 0;\n\n  function makeRequest(request) {\n    const requestSize = request.body.length;\n    pendingBodySize += requestSize;\n    pendingCount++;\n\n    const requestOptions = {\n      body: request.body,\n      method: 'POST',\n      referrerPolicy: 'origin',\n      headers: options.headers,\n      // Outgoing requests are usually cancelled when navigating to a different page, causing a \"TypeError: Failed to\n      // fetch\" error and sending a \"network_error\" client-outcome - in Chrome, the request status shows \"(cancelled)\".\n      // The `keepalive` flag keeps outgoing requests alive, even when switching pages. We want this since we're\n      // frequently sending events right before the user is switching pages (eg. whenfinishing navigation transactions).\n      // Gotchas:\n      // - `keepalive` isn't supported by Firefox\n      // - As per spec (https://fetch.spec.whatwg.org/#http-network-or-cache-fetch):\n      //   If the sum of contentLength and inflightKeepaliveBytes is greater than 64 kibibytes, then return a network error.\n      //   We will therefore only activate the flag when we're below that limit.\n      // There is also a limit of requests that can be open at the same time, so we also limit this to 15\n      // See https://github.com/getsentry/sentry-javascript/pull/7553 for details\n      keepalive: pendingBodySize <= 60000 && pendingCount < 15,\n      ...options.fetchOptions,\n    };\n\n    try {\n      return nativeFetch(options.url, requestOptions).then(response => {\n        pendingBodySize -= requestSize;\n        pendingCount--;\n        return {\n          statusCode: response.status,\n          headers: {\n            'x-sentry-rate-limits': response.headers.get('X-Sentry-Rate-Limits'),\n            'retry-after': response.headers.get('Retry-After'),\n          },\n        };\n      });\n    } catch (e) {\n      clearCachedFetchImplementation();\n      pendingBodySize -= requestSize;\n      pendingCount--;\n      return rejectedSyncPromise(e);\n    }\n  }\n\n  return createTransport(options, makeRequest);\n}\n\nexport { makeFetchTransport };\n//# sourceMappingURL=fetch.js.map\n","import { createTransport } from '@sentry/core';\nimport { SyncPromise } from '@sentry/utils';\n\n/**\n * The DONE ready state for XmlHttpRequest\n *\n * Defining it here as a constant b/c XMLHttpRequest.DONE is not always defined\n * (e.g. during testing, it is `undefined`)\n *\n * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/readyState}\n */\nconst XHR_READYSTATE_DONE = 4;\n\n/**\n * Creates a Transport that uses the XMLHttpRequest API to send events to Sentry.\n */\nfunction makeXHRTransport(options) {\n  function makeRequest(request) {\n    return new SyncPromise((resolve, reject) => {\n      const xhr = new XMLHttpRequest();\n\n      xhr.onerror = reject;\n\n      xhr.onreadystatechange = () => {\n        if (xhr.readyState === XHR_READYSTATE_DONE) {\n          resolve({\n            statusCode: xhr.status,\n            headers: {\n              'x-sentry-rate-limits': xhr.getResponseHeader('X-Sentry-Rate-Limits'),\n              'retry-after': xhr.getResponseHeader('Retry-After'),\n            },\n          });\n        }\n      };\n\n      xhr.open('POST', options.url);\n\n      for (const header in options.headers) {\n        if (Object.prototype.hasOwnProperty.call(options.headers, header)) {\n          xhr.setRequestHeader(header, options.headers[header]);\n        }\n      }\n\n      xhr.send(request.body);\n    });\n  }\n\n  return createTransport(options, makeRequest);\n}\n\nexport { makeXHRTransport };\n//# sourceMappingURL=xhr.js.map\n","import { Integrations, getIntegrationsToSetup, initAndBind, getReportDialogEndpoint, getCurrentHub } from '@sentry/core';\nimport { stackParserFromStackParserOptions, supportsFetch, logger, resolvedSyncPromise, addInstrumentationHandler } from '@sentry/utils';\nimport { BrowserClient } from './client.js';\nimport { WINDOW, wrap as wrap$1 } from './helpers.js';\nimport { GlobalHandlers } from './integrations/globalhandlers.js';\nimport { TryCatch } from './integrations/trycatch.js';\nimport { Breadcrumbs } from './integrations/breadcrumbs.js';\nimport { LinkedErrors } from './integrations/linkederrors.js';\nimport { HttpContext } from './integrations/httpcontext.js';\nimport { Dedupe } from './integrations/dedupe.js';\nimport { defaultStackParser } from './stack-parsers.js';\nimport { makeFetchTransport } from './transports/fetch.js';\nimport { makeXHRTransport } from './transports/xhr.js';\n\nconst defaultIntegrations = [\n  new Integrations.InboundFilters(),\n  new Integrations.FunctionToString(),\n  new TryCatch(),\n  new Breadcrumbs(),\n  new GlobalHandlers(),\n  new LinkedErrors(),\n  new Dedupe(),\n  new HttpContext(),\n];\n\n/**\n * A magic string that build tooling can leverage in order to inject a release value into the SDK.\n */\n\n/**\n * The Sentry Browser SDK Client.\n *\n * To use this SDK, call the {@link init} function as early as possible when\n * loading the web page. To set context information or send manual events, use\n * the provided methods.\n *\n * @example\n *\n * ```\n *\n * import { init } from '@sentry/browser';\n *\n * init({\n *   dsn: '__DSN__',\n *   // ...\n * });\n * ```\n *\n * @example\n * ```\n *\n * import { configureScope } from '@sentry/browser';\n * configureScope((scope: Scope) => {\n *   scope.setExtra({ battery: 0.7 });\n *   scope.setTag({ user_mode: 'admin' });\n *   scope.setUser({ id: '4711' });\n * });\n * ```\n *\n * @example\n * ```\n *\n * import { addBreadcrumb } from '@sentry/browser';\n * addBreadcrumb({\n *   message: 'My Breadcrumb',\n *   // ...\n * });\n * ```\n *\n * @example\n *\n * ```\n *\n * import * as Sentry from '@sentry/browser';\n * Sentry.captureMessage('Hello, world!');\n * Sentry.captureException(new Error('Good bye'));\n * Sentry.captureEvent({\n *   message: 'Manual',\n *   stacktrace: [\n *     // ...\n *   ],\n * });\n * ```\n *\n * @see {@link BrowserOptions} for documentation on configuration options.\n */\nfunction init(options = {}) {\n  if (options.defaultIntegrations === undefined) {\n    options.defaultIntegrations = defaultIntegrations;\n  }\n  if (options.release === undefined) {\n    // This allows build tooling to find-and-replace __SENTRY_RELEASE__ to inject a release value\n    if (typeof __SENTRY_RELEASE__ === 'string') {\n      options.release = __SENTRY_RELEASE__;\n    }\n\n    // This supports the variable that sentry-webpack-plugin injects\n    if (WINDOW.SENTRY_RELEASE && WINDOW.SENTRY_RELEASE.id) {\n      options.release = WINDOW.SENTRY_RELEASE.id;\n    }\n  }\n  if (options.autoSessionTracking === undefined) {\n    options.autoSessionTracking = true;\n  }\n  if (options.sendClientReports === undefined) {\n    options.sendClientReports = true;\n  }\n\n  const clientOptions = {\n    ...options,\n    stackParser: stackParserFromStackParserOptions(options.stackParser || defaultStackParser),\n    integrations: getIntegrationsToSetup(options),\n    transport: options.transport || (supportsFetch() ? makeFetchTransport : makeXHRTransport),\n  };\n\n  initAndBind(BrowserClient, clientOptions);\n\n  if (options.autoSessionTracking) {\n    startSessionTracking();\n  }\n}\n\n/**\n * Present the user with a report dialog.\n *\n * @param options Everything is optional, we try to fetch all info need from the global scope.\n */\nfunction showReportDialog(options = {}, hub = getCurrentHub()) {\n  // doesn't work without a document (React Native)\n  if (!WINDOW.document) {\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.error('Global document not defined in showReportDialog call');\n    return;\n  }\n\n  const { client, scope } = hub.getStackTop();\n  const dsn = options.dsn || (client && client.getDsn());\n  if (!dsn) {\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.error('DSN not configured for showReportDialog call');\n    return;\n  }\n\n  if (scope) {\n    options.user = {\n      ...scope.getUser(),\n      ...options.user,\n    };\n  }\n\n  if (!options.eventId) {\n    options.eventId = hub.lastEventId();\n  }\n\n  const script = WINDOW.document.createElement('script');\n  script.async = true;\n  script.src = getReportDialogEndpoint(dsn, options);\n\n  if (options.onLoad) {\n    script.onload = options.onLoad;\n  }\n\n  const injectionPoint = WINDOW.document.head || WINDOW.document.body;\n  if (injectionPoint) {\n    injectionPoint.appendChild(script);\n  } else {\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.error('Not injecting report dialog. No injection point found in HTML');\n  }\n}\n\n/**\n * This is the getter for lastEventId.\n *\n * @returns The last event id of a captured event.\n */\nfunction lastEventId() {\n  return getCurrentHub().lastEventId();\n}\n\n/**\n * This function is here to be API compatible with the loader.\n * @hidden\n */\nfunction forceLoad() {\n  // Noop\n}\n\n/**\n * This function is here to be API compatible with the loader.\n * @hidden\n */\nfunction onLoad(callback) {\n  callback();\n}\n\n/**\n * Call `flush()` on the current client, if there is one. See {@link Client.flush}.\n *\n * @param timeout Maximum time in ms the client should wait to flush its event queue. Omitting this parameter will cause\n * the client to wait until all events are sent before resolving the promise.\n * @returns A promise which resolves to `true` if the queue successfully drains before the timeout, or `false` if it\n * doesn't (or if there's no client defined).\n */\nfunction flush(timeout) {\n  const client = getCurrentHub().getClient();\n  if (client) {\n    return client.flush(timeout);\n  }\n  (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.warn('Cannot flush events. No client defined.');\n  return resolvedSyncPromise(false);\n}\n\n/**\n * Call `close()` on the current client, if there is one. See {@link Client.close}.\n *\n * @param timeout Maximum time in ms the client should wait to flush its event queue before shutting down. Omitting this\n * parameter will cause the client to wait until all events are sent before disabling itself.\n * @returns A promise which resolves to `true` if the queue successfully drains before the timeout, or `false` if it\n * doesn't (or if there's no client defined).\n */\nfunction close(timeout) {\n  const client = getCurrentHub().getClient();\n  if (client) {\n    return client.close(timeout);\n  }\n  (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.warn('Cannot flush events and disable SDK. No client defined.');\n  return resolvedSyncPromise(false);\n}\n\n/**\n * Wrap code within a try/catch block so the SDK is able to capture errors.\n *\n * @param fn A function to wrap.\n *\n * @returns The result of wrapped function call.\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction wrap(fn) {\n  return wrap$1(fn)();\n}\n\nfunction startSessionOnHub(hub) {\n  hub.startSession({ ignoreDuration: true });\n  hub.captureSession();\n}\n\n/**\n * Enable automatic Session Tracking for the initial page load.\n */\nfunction startSessionTracking() {\n  if (typeof WINDOW.document === 'undefined') {\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n      logger.warn('Session tracking in non-browser environment with @sentry/browser is not supported.');\n    return;\n  }\n\n  const hub = getCurrentHub();\n\n  // The only way for this to be false is for there to be a version mismatch between @sentry/browser (>= 6.0.0) and\n  // @sentry/hub (< 5.27.0). In the simple case, there won't ever be such a mismatch, because the two packages are\n  // pinned at the same version in package.json, but there are edge cases where it's possible. See\n  // https://github.com/getsentry/sentry-javascript/issues/3207 and\n  // https://github.com/getsentry/sentry-javascript/issues/3234 and\n  // https://github.com/getsentry/sentry-javascript/issues/3278.\n  if (!hub.captureSession) {\n    return;\n  }\n\n  // The session duration for browser sessions does not track a meaningful\n  // concept that can be used as a metric.\n  // Automatically captured sessions are akin to page views, and thus we\n  // discard their duration.\n  startSessionOnHub(hub);\n\n  // We want to create a session for every navigation as well\n  addInstrumentationHandler('history', ({ from, to }) => {\n    // Don't create an additional session for the initial route or if the location did not change\n    if (!(from === undefined || from === to)) {\n      startSessionOnHub(getCurrentHub());\n    }\n  });\n}\n\n/**\n * Captures user feedback and sends it to Sentry.\n */\nfunction captureUserFeedback(feedback) {\n  const client = getCurrentHub().getClient();\n  if (client) {\n    client.captureUserFeedback(feedback);\n  }\n}\n\nexport { captureUserFeedback, close, defaultIntegrations, flush, forceLoad, init, lastEventId, onLoad, showReportDialog, wrap };\n//# sourceMappingURL=sdk.js.map\n","import { logger } from '@sentry/utils';\nimport { getCurrentHub } from './hub.js';\n\n/** A class object that can instantiate Client objects. */\n\n/**\n * Internal function to create a new SDK client instance. The client is\n * installed and then bound to the current scope.\n *\n * @param clientClass The client class to instantiate.\n * @param options Options to pass to the client.\n */\nfunction initAndBind(\n  clientClass,\n  options,\n) {\n  if (options.debug === true) {\n    if ((typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__)) {\n      logger.enable();\n    } else {\n      // use `console.warn` rather than `logger.warn` since by non-debug bundles have all `logger.x` statements stripped\n      // eslint-disable-next-line no-console\n      console.warn('[Sentry] Cannot initialize SDK with `debug` option using a non-debug bundle.');\n    }\n  }\n  const hub = getCurrentHub();\n  const scope = hub.getScope();\n  scope.update(options.initialScope);\n\n  const client = new clientClass(options);\n  hub.bindClient(client);\n}\n\nexport { initAndBind };\n//# sourceMappingURL=sdk.js.map\n","import foo from './foo.js';\nimport * as Sentry from \"@sentry/browser\";\n\nSentry.init({\n    dsn: \"https://2ba2f2af23064f429fc9e3b44dc1ad8c@o1420511.ingest.sentry.io/4504287436734464\",\n    release: \"webpack@1.0.0\",\n});\n\nfoo();","export default function foo() { \n    throw new Error(\"Oh dear\") \n}"],"names":["_global","isBrowserBundle","__SENTRY_BROWSER_BUNDLE__","getSDKSource","isNodeEnv","Object","prototype","toString","call","process","dynamicRequire","mod","request","require","WINDOW","dateTimestampSource","nowSeconds","Date","now","platformPerformance","module","performance","_","getNodePerformance","timeOrigin","getBrowserPerformance","timestampSource","undefined","dateTimestampInSeconds","bind","timestampInSeconds","_browserPerformanceTimeOriginMode","threshold","performanceNow","dateNow","timeOriginDelta","Math","abs","timeOriginIsReliable","navigationStart","timing","navigationStartDelta","isGlobalObj","obj","GLOBAL_OBJ","globalThis","window","self","g","this","getGlobalObject","getGlobalSingleton","name","creator","gbl","__SENTRY__","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","id","loaded","__webpack_modules__","d","definition","key","o","defineProperty","enumerable","get","Function","e","hmd","create","children","set","Error","prop","hasOwnProperty","SENTRY_RELEASE","SENTRY_RELEASES","CONSOLE_LEVELS","consoleSandbox","callback","originalConsole","wrappedLevels","forEach","level","originalWrappedFunc","__sentry_original__","keys","makeLogger","enabled","logger","enable","disable","__SENTRY_DEBUG__","args","objectToString","isError","wat","isInstanceOf","isBuiltin","className","isErrorEvent","isDOMError","isString","isPlainObject","isEvent","Event","isThenable","Boolean","then","base","_e","htmlTreeAsString","elem","options","currentElem","MAX_TRAVERSE_HEIGHT","out","height","len","separator","sepLength","length","nextStr","keyAttrs","Array","isArray","maxStringLength","_htmlElementAsString","push","parentNode","reverse","join","_oO","el","classes","attr","i","tagName","toLowerCase","keyAttrPairs","filter","keyAttr","getAttribute","map","keyAttrPair","split","allowedAttrs","truncate","str","max","slice","safeJoin","input","delimiter","output","value","String","stringMatchesSomePattern","testString","patterns","requireExactStringMatch","some","pattern","test","includes","isMatchingPattern","fill","source","replacementFactory","original","wrapped","markFunctionWrapped","_Oo","addNonEnumerableProperty","writable","configurable","proto","getOriginalFunction","func","convertToPlainObject","message","stack","getOwnProperties","newObj","type","target","serializeEventTarget","currentTarget","CustomEvent","detail","Element","extractedProps","property","extractExceptionKeysForMessage","exception","maxLength","sort","includedKeys","serialized","dropUndefinedKeys","inputValue","_dropUndefinedKeys","Map","memoizationMap","memoVal","returnValue","item","uuid4","crypto","msCrypto","randomUUID","replace","getRandomByte","getRandomValues","Uint8Array","random","c","getFirstException","event","values","getEventDescription","event_id","eventId","firstException","addExceptionTypeValue","addExceptionMechanism","newMechanism","currentMechanism","mechanism","handled","mergedData","data","checkOrSetAlreadyCaught","__sentry_captured__","err","arrayify","maybeArray","DEFAULT_IGNORE_ERRORS","InboundFilters","static","__init","constructor","_options","setupOnce","addGlobalEventProcessor","getCurrentHub","eventProcess","hub","getIntegration","client","getClient","clientOptions","getOptions","internalOptions","allowUrls","denyUrls","ignoreErrors","ignoreTransactions","ignoreInternal","_mergeOptions","_isSentryError","oO","_getPossibleEventMessages","_isIgnoredError","transaction","_isIgnoredTransaction","url","_getEventFilterUrl","_isDeniedUrl","_isAllowedUrl","_shouldDropEvent","frames","stacktrace","frame","filename","_getLastValidUrl","originalFunctionToString","__initStatic","FunctionToString","context","apply","DEFAULT_ENVIRONMENT","States","SyncPromise","resolve","rejectedSyncPromise","reason","reject","_state","PENDING","__init2","_handlers","executor","__init3","__init4","__init5","__init6","_resolve","_reject","onfulfilled","onrejected","result","_executeHandlers","catch","val","finally","onfinally","isRejected","_setResult","RESOLVED","REJECTED","state","_value","cachedHandlers","handler","updateSession","session","user","ipAddress","ip_address","did","email","username","timestamp","time","ignoreDuration","sid","init","started","duration","release","environment","userAgent","errors","status","_notifyingListeners","_scopeListeners","_eventProcessors","_breadcrumbs","_attachments","_user","_tags","_extra","_contexts","_sdkProcessingMetadata","scope","newScope","_level","_span","_session","_transactionName","_fingerprint","_requestSession","addScopeListener","addEventProcessor","setUser","_notifyScopeListeners","getUser","getRequestSession","setRequestSession","requestSession","setTags","tags","setTag","setExtras","extras","setExtra","extra","setFingerprint","fingerprint","setLevel","setTransactionName","setContext","setSpan","span","getSpan","getTransaction","setSession","getSession","update","captureContext","updatedScope","contexts","clear","addBreadcrumb","breadcrumb","maxBreadcrumbs","maxCrumbs","mergedBreadcrumb","getLastBreadcrumb","clearBreadcrumbs","addAttachment","attachment","getAttachments","clearAttachments","applyToEvent","hint","trace","getTraceContext","sdkProcessingMetadata","dynamicSamplingContext","getDynamicSamplingContext","transactionName","_applyFingerprint","breadcrumbs","_notifyEventProcessors","getGlobalEventProcessors","setSDKProcessingMetadata","newData","processors","index","processor","log","final","concat","DEFAULT_BREADCRUMBS","Hub","_version","_stack","bindClient","isOlderThan","version","getStackTop","setupIntegrations","pushScope","getScope","getStack","popScope","pop","withScope","captureException","_lastEventId","syntheticException","_withClient","originalException","captureMessage","captureEvent","lastEventId","beforeBreadcrumb","finalBreadcrumb","emit","configureScope","run","oldHub","makeMain","integration","startTransaction","customSamplingContext","_callExtensionMethod","console","warn","traceHeaders","captureSession","endSession","_sendSessionUpdate","closeSession","startSession","startingTime","toJSON","toISOString","attrs","user_agent","sessionToJSON","makeSession","currentSession","shouldSendDefaultPii","sendDefaultPii","method","sentry","getMainCarrier","extensions","registry","getHubFromCarrier","setHubOnCarrier","acs","carrier","getGlobalHub","installedIntegrations","getIntegrationsToSetup","defaultIntegrations","userIntegrations","integrations","isDefaultInstance","finalIntegrations","integrationsByName","currentInstance","existingInstance","k","filterDuplicates","debugIndex","arr","findIndex","debugInstance","splice","setupIntegration","integrationIndex","indexOf","WEBPACK_ERROR_REGEXP","createStackParser","parsers","sortedParsers","a","b","p","skipFirst","lines","line","cleanedLine","match","parser","localStack","lastFrameFunction","function","firstFrameFunction","stripSentryFramesAndReverse","defaultFunctionName","getFunctionName","fn","supportsFetch","Headers","Request","Response","isNativeFetch","SENTRY_XHR_DATA_KEY","handlers","instrumented","addInstrumentationHandler","originalConsoleMethod","triggerHandlers","triggerDOMHandler","globalDOMEventHandler","makeDOMEventHandler","document","addEventListener","originalAddEventListener","listener","__sentry_instrumentation_handlers__","handlerForType","refCount","originalRemoveEventListener","instrumentDOM","xhrproto","XMLHttpRequest","originalOpen","xhrInfo","toUpperCase","request_headers","__sentry_own_request__","onreadystatechangeHandler","readyState","status_code","endTimestamp","startTimestamp","xhr","onreadystatechange","readyStateArgs","setRequestHeaderArgs","header","originalSend","sentryXhrData","body","instrumentXHR","fetch","doc","sandbox","createElement","hidden","head","appendChild","contentWindow","removeChild","supportsNativeFetch","originalFetch","fetchArgs","getUrlFromResource","hasProp","arg","parseFetchArgs","handlerData","fetchData","response","error","chrome","isChromePackagedApp","app","runtime","hasHistoryApi","history","pushState","replaceState","supportsHistory","oldOnPopState","onpopstate","historyReplacementFunction","originalHistoryFunction","from","lastHref","to","location","href","instrumentHistory","_oldOnErrorHandler","onerror","msg","column","__SENTRY_LOADER__","arguments","__SENTRY_INSTRUMENTED__","_oldOnUnhandledRejectionHandler","onunhandledrejection","instrument","resource","debounceTimerID","lastCapturedEvent","globalListener","isContentEditable","shouldSkipDOMEvent","previous","current","shouldShortcircuitPreviousDebounce","global","clearTimeout","setTimeout","SentryError","logLevel","super","setPrototypeOf","DSN_REGEX","dsn","withPassword","host","path","pass","port","projectId","protocol","publicKey","dsnFromComponents","components","normalize","depth","maxProperties","visit","ERROR","normalizeToSize","object","maxSize","normalized","encodeURI","utf8Length","JSON","stringify","memo","hasWeakSet","WeakSet","inner","has","add","delete","memoBuilder","memoize","unmemoize","stringified","_events","isSyntheticEvent","objName","getPrototypeOf","getConstructorName","stringifyValue","startsWith","remainingDepth","valueWithToJSON","numAdded","visitable","visitKey","visitValue","createEnvelope","headers","items","addItemToEnvelope","envelope","newItem","forEachEnvelopeItem","envelopeItems","envelopeItem","encodeUTF8","textEncoder","TextEncoder","encode","serializeEnvelope","envHeaders","parts","append","next","itemHeaders","payload","stringifiedPayload","buffers","totalLength","reduce","acc","buf","merged","offset","buffer","concatBuffers","createAttachmentEnvelopeItem","content_type","contentType","attachment_type","attachmentType","ITEM_TYPE_TO_DATA_CATEGORY_MAP","sessions","client_report","user_report","profile","replay_event","replay_recording","check_in","envelopeItemTypeToDataCategory","getSdkMetadataForEnvelopeHeader","metadataOrEvent","sdk","getEnvelopeEndpointWithUrlEncodedAuth","tunnelOrOptions","tunnel","sdkInfo","_metadata","getBaseApiEndpoint","_getIngestEndpoint","sentry_key","sentry_version","sentry_client","encodeURIComponent","_encodedAuth","debugIdStackParserCache","WeakMap","ALREADY_SEEN_ERROR","BaseClient","_integrations","_integrationsInitialized","_numProcessing","_outcomes","_hooks","_dsn","exec","lastPath","projectMatch","dsnFromString","component","isValidProtocol","isNaN","parseInt","validateDsn","_transport","transport","recordDroppedEvent","transportOptions","_process","eventFromException","_captureEvent","promisedEvent","eventFromMessage","_isEnabled","sendSession","getDsn","getSdkMetadata","getTransport","flush","timeout","_isClientDoneProcessing","clientFinished","transportFlushed","close","getIntegrationById","integrationId","addIntegration","sendEvent","env","metadata","eventType","packages","enhanceEventWithSdkInfo","envelopeHeaders","sent_at","createEventEnvelopeHeaders","createEventEnvelope","attachments","promise","_sendEnvelope","sendResponse","createSessionEnvelope","category","_event","sendClientReports","on","hook","rest","_updateSessionFromEvent","crashed","errored","exceptions","ex","sessionNonTerminal","Number","ticked","interval","setInterval","clearInterval","_prepareEvent","normalizeDepth","normalizeMaxBreadth","prepared","dist","maxValueLength","applyClientOptions","integrationNames","applyIntegrationsMetadata","stackParser","debugIdMap","debugIdStackFramesCache","cachedDebugIdStackFrameCache","filenameDebugIdMap","debugIdStackTrace","parsedStack","cachedParsedStack","stackFrame","errorFileNames","Set","debug_meta","images","code_file","debug_id","applyDebugMetadata","finalScope","evt","maxBreadth","spans","normalizeEvent","prepareEvent","_processEvent","finalEvent","sentryError","sampleRate","isTransaction","isTransactionEvent","beforeSendLabel","dataCategory","__sentry__","beforeSend","beforeSendTransaction","processBeforeSend","beforeSendResult","invalidValueError","_validateBeforeSendResult","processedEvent","transactionInfo","transaction_info","send","_clearOutcomes","outcomes","quantity","SDK_VERSION","exceptionFromError","parseStackFrames","extractMessage","eventFromError","popSize","framesToPop","reactMinifiedRegexp","getPopSize","eventFromUnknownInput","attachStacktrace","isUnhandledRejection","domException","eventFromString","code","__serialized__","eventFromPlainObject","synthetic","ignoreOnError","shouldIgnoreOnError","ignoreNextOnError","wrap","before","wrapper","__sentry_wrapped__","sentryWrapped","wrappedArguments","getOwnPropertyDescriptor","validSeverityLevels","parseUrl","query","fragment","search","hash","relative","BREADCRUMB_INTEGRATION_ID","Breadcrumbs","dom","_consoleBreadcrumb","serializeAttribute","_isEvent","_xhrBreadcrumb","_fetchBreadcrumb","_historyBreadcrumb","addSentryBreadcrumb","parsedLoc","parsedFrom","parsedTo","BrowserClient","sdkSource","_flushOutcomes","breadcrumbIntegration","captureUserFeedback","feedback","createUserFeedbackEnvelopeItem","createUserFeedbackEnvelope","platform","discarded_events","GlobalHandlers","_installFunc","_installGlobalOnErrorHandler","_installGlobalOnUnhandledRejectionHandler","stackTraceLimit","installFunc","getHubAndOptions","groups","_enhanceEventWithInitialFrame","_eventFromIncompleteOnError","addMechanismAndCapture","ev","ev0","ev0s","ev0sf","colno","lineno","getLocationHref","in_app","DEFAULT_EVENT_TARGET","TryCatch","eventTarget","requestAnimationFrame","_wrapTimeFunction","_wrapRAF","_wrapXHR","eventTargetOption","_wrapEventTarget","originalCallback","wrapOptions","originalFunction","globalObject","eventName","handleEvent","wrappedEventHandler","originalEventHandler","LinkedErrors","_key","_limit","limit","linkedErrors","_walkErrorTree","_handler","HttpContext","referrer","Referer","Dedupe","eventProcessor","currentEvent","previousEvent","currentMessage","previousMessage","_isSameFingerprint","_isSameStacktrace","_isSameMessageEvent","previousException","_getExceptionFromEvent","currentException","_isSameExceptionEvent","_previousEvent","currentFrames","_getFramesFromEvent","previousFrames","frameA","frameB","currentFingerprint","previousFingerprint","UNKNOWN_FUNCTION","createFrame","chromeRegex","chromeEvalRegex","geckoREgex","geckoEvalRegex","winjsRegex","defaultStackParser","subMatch","extractSafariExtensionDetails","isSafariExtension","isSafariWebExtension","createTransport","makeRequest","remove","task","$","taskProducer","drain","counter","capturedSetTimeout","makePromiseBuffer","bufferSize","rateLimits","filteredEnvelopeItems","envelopeItemDataCategory","limits","all","disabledUntil","isRateLimited","getEventForEnvelopeItem","filteredEnvelope","recordEnvelopeLoss","statusCode","updatedRateLimits","rateLimitHeader","retryAfterHeader","trim","retryAfter","categories","headerDelay","delay","headerDate","parse","parseRetryAfterHeader","updateRateLimits","__sentry__baseTransport__","cachedFetchImpl","makeFetchTransport","nativeFetch","fetchImpl","getNativeFetchImplementation","pendingBodySize","pendingCount","requestSize","requestOptions","referrerPolicy","keepalive","fetchOptions","makeXHRTransport","getResponseHeader","open","setRequestHeader","startSessionOnHub","__SENTRY_RELEASE__","autoSessionTracking","clientClass","debug","initialScope","initAndBind","startSessionTracking","foo"],"sourceRoot":""}